<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>001_鸡场流量费用比价和注册_亲测</title>
    <link href="/2021/11/24/001_%E9%B8%A1%E5%9C%BA%E6%B5%81%E9%87%8F%E8%B4%B9%E7%94%A8%E6%AF%94%E4%BB%B7%E5%92%8C%E6%B3%A8%E5%86%8C_%E4%BA%B2%E6%B5%8B/"/>
    <url>/2021/11/24/001_%E9%B8%A1%E5%9C%BA%E6%B5%81%E9%87%8F%E8%B4%B9%E7%94%A8%E6%AF%94%E4%BB%B7%E5%92%8C%E6%B3%A8%E5%86%8C_%E4%BA%B2%E6%B5%8B/</url>
    
    <content type="html"><![CDATA[<p>我的流量~<br><img src="https://cdn.jsdelivr.net/gh/shellsec/shellsec_gitblog_imgdoc//img/me.png"></p><p>1、xtspeeder注册链接：性价比高<br><a href="https://xtunnel-aff.icu/auth/register?code=JZ8d">https://xtspeeder.com</a><br><img src="https://cdn.jsdelivr.net/gh/shellsec/shellsec_gitblog_imgdoc//img/xtspeeder.png"></p><p>2、优云666<br>注册链接：支持流媒体-奈飞类<br><a href="https://youyun222.net/auth/register?code=jMaL">https://youyun222.net</a></p><p><img src="https://cdn.jsdelivr.net/gh/shellsec/shellsec_gitblog_imgdoc//img/youyun688_1.png"><br><img src="https://cdn.jsdelivr.net/gh/shellsec/shellsec_gitblog_imgdoc//img/youyun688_2.png"></p><p>3、蜜桃云：(新站，人少)<br>注册链接：<br><a href="https://mitaocloud8.xyz/auth/register?code=27sG">https://mitaocloud8.xyz</a></p><p><img src="https://cdn.jsdelivr.net/gh/shellsec/shellsec_gitblog_imgdoc//img/mitaocloud8.png"></p><p>技术科普：</p><p>真正大鸡场，100多个节点，V2ray节点50多个。港台美俄均有白嫖节点，新用户注册送10GB流量，每日签到送1-7G流量，BGP中转/Azure/Dmit/HKT/Hinet/多点IPLC/v2ray保证高端用户使用需求。</p><p>同时也提供有很多的付费套餐可选，价格也挺便宜的。  </p><h3 id="IPLC专线科普"><a href="#IPLC专线科普" class="headerlink" title="IPLC专线科普"></a>IPLC专线科普</h3><p>IPLC专线网络是将通过光缆将香港和中国大陆或者其他地区直连，形成高速互访网络。因此，准确地说，IPLC专线网络不是一种带宽类型，而是一种高速的网络传输类型。相比容易受到公网波动或国际出口波动的其他传输类型，LPLC专线网络在速度和稳定性方面具有更高保障。如果客户群体集中在某个国家或地区，可以考虑使用此类带宽。</p><p>IPLC专线网络，是可以在香港与其他地区（包括中国大陆、新加坡、菲律宾、日本、韩国）之间构建物理专线，将香港数据中心与其他地区的数据中心、云、企业分支、办公室或主机托管环境对接起来，实现高速私网通信。这种私网通信可以绕过公网，两端通信低至 5ms，最终形成一种比基于 Internet 连接更为私密、稳定、高速的网络体验。</p><h3 id="使用IPLC专线网络的优势有："><a href="#使用IPLC专线网络的优势有：" class="headerlink" title="使用IPLC专线网络的优势有："></a>使用IPLC专线网络的优势有：</h3><p>1、速度更快，加快后开启国际网站速度更快；</p><p>2、安全系数好，加快专线运输选用私有专线运输出入口，安全性有确保；</p><p>3、可靠性高，加快专线运输的速度更快且平稳，防止忽快忽慢的状况；</p><p>4、网络丢包低，加快专线运输的网络丢包低于1%；</p><p>5、花费划算，加快专线运输价钱仅是国际性专线运输价钱的一些之一，能为企业大大减少成本支出；</p><p>6、安裝便捷、灵便、便捷。</p><p>总而言之，IPLC专线网络是提供高速的网络。为企业提供高效的中港私网直联，时延低至 5ms，彻底解决企业出海业务中的跨境网络互访慢、部署成本昂贵、管理难度高等问题。</p><p><strong>请合理使用机场资源，请勿用于非法用途，责任和风险自担。</strong></p><p><strong>机场偶尔可能会断流，等待机场主修复就好，有问题看他们站内公告或提工单。其他各大机场也是如此。</strong><strong><strong>任何机场都无法100%保证将来提供的服务稳定性，建议按月购买，请不要直接包年！</strong></strong></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>2021 低代码平台调研 低代码+RPA+AI</title>
    <link href="/2021/11/22/2021.11%20%E4%BD%8E%E4%BB%A3%E7%A0%81%E5%B9%B3%E5%8F%B0+RPA+AI%E8%B0%83%E7%A0%94/"/>
    <url>/2021/11/22/2021.11%20%E4%BD%8E%E4%BB%A3%E7%A0%81%E5%B9%B3%E5%8F%B0+RPA+AI%E8%B0%83%E7%A0%94/</url>
    
    <content type="html"><![CDATA[<p>Gartner2021新兴技术成熟度曲线，AI与超自动化支撑数字化变革<br>RPA、低代码开发平台、流程挖掘、AI等创新技术。</p><p><a href="https://www.tuicool.com/search?kw=%E4%BD%8E%E4%BB%A3%E7%A0%81">https://www.tuicool.com/search?kw=%E4%BD%8E%E4%BB%A3%E7%A0%81</a><br>低代码<br><a href="http://api.woshipm.com/search/list.html?key=%E4%BD%8E%E4%BB%A3%E7%A0%81">http://api.woshipm.com/search/list.html?key=%E4%BD%8E%E4%BB%A3%E7%A0%81</a><br>低代码-人人产品经理</p><p>软件工程师如何抵御低代码的冲击<br><a href="https://www.tuicool.com/wx/3qQNJzq">https://www.tuicool.com/wx/3qQNJzq</a></p><p>需求：<br>1、表单创建，数据展示，增删改查，任务下发，API化，数据库支持，自动化执行，echarts开发—-ok<br>2、报表平台、工作流设计，数据BI大屏，日志审计、消息推送、B端应用—-ok<br>3、RPA自动化平台，类似测试用例自动化平台，切入业务，接口平台<br>4、AI数据挖掘，数据价值，降本提效</p><p><a href="https://www.cnblogs.com/jeecg158/p/13992725.html">https://www.cnblogs.com/jeecg158/p/13992725.html</a><br>低代码开发平台有哪些？</p><p>5款国产开源低代码开发平台推荐<br>1、J2PaaS低代码平台<br><a href="https://gitee.com/j2paas/j2paas-framework">https://gitee.com/j2paas/j2paas-framework</a><br><a href="http://zj-docs.51epedu.com/#/xitonghuangjinggl">http://zj-docs.51epedu.com/#/xitonghuangjinggl</a><br><a href="https://ke.qq.com/course/3737600?taid=12500476548941824">https://ke.qq.com/course/3737600?taid=12500476548941824</a><br>社区：<br><a href="https://bbs.jikaiyun.com/">https://bbs.jikaiyun.com</a><br>安装 <a href="https://bbs.jikaiyun.com/getNewsById?id=173&amp;type=1">https://bbs.jikaiyun.com/getNewsById?id=173&amp;type=1</a></p><p>J2PaaS是综合性低代码开发平台，覆盖了软件项目需求分析、设计、开发、测试、运行、维护与管理等全过程。平台为开发者提供开发引擎、运行引擎、项目管理， 打破传统开发用“代码编程”驱动产品的模式，升级为用“参数”驱动产品，打造可视化、组件化、低代码、拖拽式开发的在线敏捷开发平台。</p><p>平台把常规需要程序员完成的功能集成在框架中，开发人员只需关注业务逻辑、页面的组装以及流程的设计等业务相关的功能，低层功能例如事务处理、 文件处理、 数据库操作等等开发平台已经内置自动完成。<br>源码下载：​ ​ <a href="https://gitee.com/j2paas">https://gitee.com/j2paas</a> ​​ ​<br>官网介绍：​ ​ <a href="https://jikaiyun.com/">https://jikaiyun.com</a> ​ ​<br>文档中心：​ ​<a href="http://zj-docs.51epedu.com/#/J2PaaSgaishu%E2%80%8B">http://zj-docs.51epedu.com/#/J2PaaSgaishu​</a> ​<br>-》功能比较丰富，但是每个模块的应用不是很清晰，多而复杂了，前端界面看起来比较老式</p><p>2、JeecgBoot<br><a href="http://www.jeecg.com/">http://www.jeecg.com/</a><br><a href="https://gitee.com/jeecg/jeecg-boot">https://gitee.com/jeecg/jeecg-boot</a><br>演示<br><a href="http://boot.jeecg.com/dashboard/analysis">http://boot.jeecg.com/dashboard/analysis</a><br>界面vue比较顺滑<br>开发文档<br><a href="http://doc.jeecg.com/2043868">http://doc.jeecg.com/2043868</a><br>视频教学：<br><a href="https://www.bilibili.com/video/BV1Nk4y1o7Qc">https://www.bilibili.com/video/BV1Nk4y1o7Qc</a><br><a href="http://boot3.jeecg.com/">http://boot3.jeecg.com</a><br>官网博客<br><a href="https://jeecg.blog.csdn.net/">https://jeecg.blog.csdn.net/</a><br>参与开源<br><a href="http://jeecg.com/doc/join">http://jeecg.com/doc/join</a></p><p>JeecgBoot-Vue3 是在 Vben-Admin 基础上研发的，适合于JeecgBoot的新版VUE3前端框架。<br>采用 Vue3.0、Vite、 Ant-Design-Vue、TypeScript 等新技术方案，包括二次封装组件、utils、hooks、动态菜单、权限校验、按钮级别权限控制等功能。</p><blockquote><p>全新的VUE3技术栈，不只是追赶技术潮流，用了之后才能体会到Vue3的好处，的确比2更加适合大型项目。</p></blockquote><h5 id="源码下载："><a href="#源码下载：" class="headerlink" title="源码下载："></a>源码下载：</h5><ul><li>  <a href="https://github.com/jeecgboot/jeecg-boot-vue3">https://github.com/jeecgboot/jeecg-boot-vue3</a></li><li>  <a href="https://gitee.com/jeecg/jeecg-boot-vue3">https://gitee.com/jeecg/jeecg-boot-vue3</a></li></ul><h5 id="相关文档："><a href="#相关文档：" class="headerlink" title="相关文档："></a>相关文档：</h5><ul><li>  在线演示：<a href="http://boot3.jeecg.com/">http://boot3.jeecg.com</a></li><li>  Vben文档：<a href="https://vvbin.cn/doc-next/">https://vvbin.cn/doc-next</a></li><li>  Antd-vue文档： <a href="https://2x.antdv.com/docs/vue/getting-started-cn">Ant-Design-Vue文档</a></li></ul><p>JeecgBoot 是一款基于代码生成器的低代码平台！强大的代码生成器让前后端代码一键生成，实现低代码开发! JeecgBoot 引领新的低代码开发模式(OnlineCoding-&gt; 代码生成器-&gt; 手工MERGE)， 帮助解决Java项目70%的重复工作，让开发更多关注业务。既能快速提高效率，节省研发成本，同时又不失灵活性！<br>源码下载：<a href="https://gitee.com/jeecg">https://gitee.com/jeecg</a><br>大屏幕<br><a href="http://www.jimureport.com/templates">http://www.jimureport.com/templates</a><br><a href="https://gitee.com/jeecg">https://gitee.com/jeecg</a></p><p>-》VUE3，入门门槛ok点，部署完，迁移数据，生成展示图</p><p>3、Jabdp<br>jabdp是一款企业级web快速开发平台，采用新颖的在线开发部署模式，使开发变得更加简单、纯粹，减少web开发中80%的代码量，革命性的提高了开发的效率。常用的功能，例如表单列表的增删改查，只需简单的自定义和配置就能自动生成。复杂的业务功能，只需要会基本的sql语句和javascript语法，就能进行快速开发，满足其个性化的业务需求，设计出各种复杂的企业web应用。<br>源码下载：​ ​ <a href="https://gitee.com/jabdp/jabdp">https://gitee.com/jabdp/jabdp</a> ​ ​<br>-》更新频次没多少，不考虑</p><p>4、华炎魔方<br>华炎魔方使用元数据定义对象，字段，配置，代码，逻辑和页面布局，元数据可以导入到华炎魔方中，可以在可视化界面中进行修改，也可以同步到源码进行深度开发。<br>源码下载：​ ​ <a href="https://github.com/steedos/steedos-platform">https://github.com/steedos/steedos-platform</a> ​ ​<br><a href="https://www.steedos.cn/">https://www.steedos.cn/</a><br><a href="https://github.com/steedos/steedos-platform/blob/1.22/README_cn.md">https://github.com/steedos/steedos-platform/blob/1.22/README_cn.md</a><br>-》没有在线试用，看不是很懂。</p><p>5、NocoBase<br>NocoBase 是一个开源免费的无代码开发平台。 无论是不懂编程的业务主管，还是精通编程的开发人员，都可以快速搭建各类定制化、私有部署的协作平台、管理系统。<br>源码下载：<a href="https://github.com/nocobase/nocobase">https://github.com/nocobase/nocobase</a><br>NocoBase 是一个可扩展性优先的开源无代码开发平台。 无需编程，分分钟用NocoBase搭建自己的协作平台、管理系统。</p><p>主页： <a href="https://www.nocobase.com/">https://www.nocobase.com/</a><br>在线演示： <a href="https://demo.nocobase.com/new">https://demo.nocobase.com/new</a><br>节点：<br>    Node.js 12.20+<br>数据库：<br>    PostgreSQL 10.x+<br>    Sqlite 3+<br>-》演示版很卡，不合适。</p><p>6、# Erupt Framework<br>注解·低代码 构建通用数据平台<br><a href="https://github.com/erupts/erupt">https://github.com/erupts/erupt</a><br><a href="https://github.com/erupts?tab=repositories">https://github.com/erupts?tab=repositories</a><br><a href="https://www.erupt.xyz/">https://www.erupt.xyz</a><br>仅需了解 Spring Boot 基础知识即可上手开发<br><a href="https://www.yuque.com/erupts/erupt/foa2bt">https://www.yuque.com/erupts/erupt/foa2bt</a><br><a href="https://www.yuque.com/erupts/erupt/wdic2w">https://www.yuque.com/erupts/erupt/wdic2w</a><br>演示地址：<a href="https://www.erupt.xyz/demo">https://www.erupt.xyz/demo</a><br>账号密码：guest / guest<br>-》需要一定开发WEB基础</p><p>7、iVX<br><a href="https://www.ivx.cn/">https://www.ivx.cn/</a><br>一款比较完备的0代码产品，测试以后发现可以不用任何代码完成所有的开发。工具达到了制作较复杂应用的能力，其官网也是由iVX直接生成的，做到了应用闭环。再加之其不错的加载和运行速度，这款产品让我感觉非常惊艳。</p><p>iVX组件完备，对象封装完整；支持各种小程序、原生、WebApp、游戏开发，总得来说功能非常强大。产品交互设计合理，开发效率高，前端后台（前端React后台Go）编译出程序的运行效率很高，但教学还有待完善，感觉内容较少，初学者一开始上手时可能会有点麻烦。 iVX收费项目比较多，对于开发者或者企业成本有点高。<br>-》基本很多功能需要收费，不是很友好</p><p>8、django-vue-admin脚手架<br><a href="https://www.django-vue-admin.com/">https://www.django-vue-admin.com/</a><br><a href="https://gitee.com/liqianglog/django-vue-admin">https://gitee.com/liqianglog/django-vue-admin</a><br>学习文档<br><a href="https://www.django-vue-admin.com/document/">https://www.django-vue-admin.com/document/</a><br>go<br><a href="https://www.gin-vue-admin.com/docs/">https://www.gin-vue-admin.com/docs/</a><br>-》基础的菜单生成器，GO语言，功能模块相对简单</p><p>总结：<br>最终选择 JeecgBoot低代码平台测试，开发人员主打开发高绩效的复杂逻辑应用和切入业务相关开发模块。</p><p>后端<br>    基础框架：Spring Boot 2.3.5.RELEASE<br>    微服务框架： Spring Cloud Alibaba 2.2.3.RELEASE<br>    持久层框架：Mybatis-plus 3.4.3.1、Minidao<br>    报表工具： jimureport 1.3.78<br>    安全框架：Apache Shiro 1.7.0，Jwt 3.11.0<br>    微服务技术栈：Spring Cloud Alibaba、Nacos、Gateway、Sentinel、Skywalking<br>    数据库连接池：阿里巴巴Druid 1.1.22<br>    缓存框架：redis<br>    日志打印：logback<br>    其他：fastjson，poi，Swagger-ui，quartz, lombok（简化代码）等。<br>前端<br>    Vue 2.6.10,Vuex,Vue Router<br>    Axios<br>    ant-design-vue<br>    webpack,yarn<br>    vue-cropper - 头像裁剪组件<br>    @antv/g2 - Alipay AntV 数据可视化图表<br>    Viser-vue - antv/g2 封装实现<br>    eslint，@vue/cli 3.2.1<br>    vue-print-nb - 打印</p><hr><p>小型团队增效管理工具<br>钉钉管理组织-企业邮箱-阿里宜搭（内部业务流）-对外小程序+功能<br><a href="https://www.tuicool.com/search?kw=%E5%AE%9C%E6%90%AD">https://www.tuicool.com/search?kw=%E5%AE%9C%E6%90%AD</a><br><a href="https://www.aliwork.com/">https://www.aliwork.com/</a><br>Forrester在报告中还举例说明了低代码平台在中国各类行业：如银行、保险、零售、医疗保健、政府、制造、电信和建筑等领域的广泛应用场景。Forrester在报告中写道：“家居零售企业居然之家使用阿里巴巴旗下产品宜搭，开发了400多个管理和财务应用程序，将运营效率提升了60%。”</p><p>RPA+AI<br>低代码指南<br><a href="https://github.com/zenitysec/awesome-low-code">https://github.com/zenitysec/awesome-low-code</a></p><p><a href="https://www.tuicool.com/articles/rMBf6bz">https://www.tuicool.com/articles/rMBf6bz</a><br>6个开源工具机器人过程自动化RPA工具<br>测评平台<br>行业产品参考：<br><a href="https://www.aliyun.com/product/codestore">https://www.aliyun.com/product/codestore</a><br>阿里云RPA推出的数字员工，可使流程处理成本降低多达80%。绝大多企业可在12个月内取得 正投资回报，预计累积成本可进一步降低20%。</p><p>平台：<br><a href="https://robotframework.org/">https://robotframework.org/</a><br>Robot Framework 是一个通用的开源自动化框架。 它可用于测试自动化和机器人过程自动化 (RPA)。<br>这个主要开发测试组在使用，测试用例，适配各个机型<br><a href="https://robotframework.org/rpa/">https://robotframework.org/rpa/</a><br>Robot Framework 是一种开源机器人流程自动化 (RPA) 解决方案，用于自动化业务流程。 它是开放和可扩展的，这意味着它几乎可以与任何其他工具集成，以创建强大而灵活的 RPA 解决方案。<br>Robot 的核心框架是一个通用的自动化平台，在测试自动化中非常流行，并且拥有一个由数千名开发人员组成的活跃社区，许多行业领先的公司在他们的软件开发中使用它。 这意味着 Robot Framework 得到积极支持并不断改进。<br>Robot Framework 的可扩展性是由其构建在扩展库之上的模块化架构实现的。 Robot Framework 社区开发和维护这些库，提供光学图像识别、数据库访问、HTTP API、iOS 和 Android 应用程序支持以及远程执行等功能。 使用 Python 或 Java 代码创建新库也非常容易，这使任何用户都可以将新功能集成到 Robot Framework 中。<br>开源还意味着 Robot Framework 可以免费使用，无需许可成本，您可以并行运行任意数量的 Robot Framework RPA 流程。 企业级项目中的编排功能可通过 Jenkins 插件获得。<br><a href="https://github.com/robotframework/robotframework">https://github.com/robotframework/robotframework</a></p><p>总结：<br>初级RPA可以定义为自动按键精灵，低代码<br>中级RPA加入硬件支持，OCR识别，AI识别，容错率检测<br>高级RPA支持机器算法学习</p><p>RPA这块开源平台基本没有，有的大部分都拿融资做企业应用了。<br>企业应用初级阶段自动化类的多，按键精灵，自动化处理</p><p>AI就更多框架了<br><a href="https://github.com/search?o=desc&amp;q=AI&amp;s=&amp;type=Repositories">https://github.com/search?o=desc&amp;q=AI&amp;s=&amp;type=Repositories</a><br>PyTorch、TensorFlow，GPT</p><p><a href="https://www.tuicool.com/search?kw=PyTorch">https://www.tuicool.com/search?kw=PyTorch</a><br><a href="https://www.tuicool.com/search?kw=TensorFlow">https://www.tuicool.com/search?kw=TensorFlow</a><br><a href="https://www.tuicool.com/search?kw=GPT">https://www.tuicool.com/search?kw=GPT</a></p><p><a href="https://view.inews.qq.com/a/20211122A08KOR00">https://view.inews.qq.com/a/20211122A08KOR00</a><br>我们找了 50GB 的医疗领域文本，训练出一个 35 亿参数的 GPT-2 模型。这个模型训练只训练了 7 天，完全没有任何人工干预，我们全交给了算力。</p><p>大家可以看到，我们第一个输入的文本是“我得了流感，症状是”，得到的输出是“发烧、咳嗽、头痛、肌痛、喉咙痛、鼻塞和头痛。”第二个输入文本是“流感的治疗方法是”，输出是“抗病毒药物扎那米韦、奥司他韦和拉那米韦。”经查询，这些答案都是正确的。你看，这个模型已经开始对理解知识并且可以回答你的问题了。</p><p>以上基本上组合成自动化中台。</p><p>其他：<br>python 平台类<br><a href="https://github.com/search?q=python+%E5%B9%B3%E5%8F%B0&amp;type=repositories">https://github.com/search?q=python+%E5%B9%B3%E5%8F%B0&amp;type=repositories</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Python 资源大全中文版</title>
    <link href="/2021/11/19/Python%20%E8%B5%84%E6%BA%90%E5%A4%A7%E5%85%A8%E4%B8%AD%E6%96%87%E7%89%88/"/>
    <url>/2021/11/19/Python%20%E8%B5%84%E6%BA%90%E5%A4%A7%E5%85%A8%E4%B8%AD%E6%96%87%E7%89%88/</url>
    
    <content type="html"><![CDATA[<p><a href="https://www.52pojie.cn/thread-1081229-1-1.html">https://www.52pojie.cn/thread-1081229-1-1.html</a></p><p>还有几帖你一定会喜欢的：<br>Python资源大全：<a href="https://www.52pojie.cn/thread-1081229-1-1.html">https://www.52pojie.cn/thread-1081229-1-1.html</a><br>Python tkinter UI指南 <a href="https://www.52pojie.cn/thread-1290751-1-1.html">https://www.52pojie.cn/thread-1290751-1-1.html</a><br>原生 Javascript 实现 jQuery 的功能： <a href="https://www.52pojie.cn/thread-1084552-1-1.html">https://www.52pojie.cn/thread-1084552-1-1.html</a><br>Chrome调试器Console的进阶用法 <a href="https://www.52pojie.cn/thread-1156239-1-1.html">https://www.52pojie.cn/thread-1156239-1-1.html</a><br>Javascript 极限省字节（看懂混淆后的代码） <a href="https://www.52pojie.cn/thread-1056860-1-1.html">https://www.52pojie.cn/thread-1056860-1-1.html</a><br>写JS必备，ESLINT配置说明 <a href="https://www.52pojie.cn/thread-1290700-1-1.html">https://www.52pojie.cn/thread-1290700-1-1.html</a><br>======================  </p><h3 id="环境管理"><a href="#环境管理" class="headerlink" title="环境管理"></a>环境管理</h3><p>管理 Python 版本和环境的工具</p><ul><li>  p：非常简单的交互式 python 版本管理工具。<a href="https://github.com/qw3rtman/p">Github</a></li><li>  pyenv：简单的 Python 版本管理工具。<a href="https://github.com/yyuu/pyenv">Github</a></li><li>  Vex：可以在虚拟环境中执行命令。<a href="https://github.com/sashahart/vex">Github</a></li><li>  virtualenv：创建独立 Python 环境的工具。<a href="https://pypi.python.org/pypi/virtualenv">python.org</a></li><li>  virtualenvwrapper：virtualenv 的一组扩展。<a href="https://pypi.python.org/pypi/virtualenvwrapper">python.org</a></li></ul><h3 id="包管理"><a href="#包管理" class="headerlink" title="包管理"></a>包管理</h3><p>管理包和依赖的工具。</p><ul><li>  pip：Python 包和依赖关系管理工具。<a href="https://pip.pypa.io/">pypa.io</a></li><li>  pip-tools：保证 Python 包依赖关系更新的一组工具。<a href="https://github.com/nvie/pip-tools">Github</a></li><li>  conda：跨平台，Python 二进制包管理工具。<a href="https://github.com/conda/conda/">Github</a></li><li>  Curdling：管理 Python 包的命令行工具。<a href="http://clarete.li/curdling/">官网</a></li><li>  wheel：Python 分发的新标准，意在取代 eggs。<a href="http://pythonwheels.com/">官网</a></li></ul><h3 id="包仓库"><a href="#包仓库" class="headerlink" title="包仓库"></a>包仓库</h3><p>本地 PyPI 仓库服务和代{过}{滤}理。</p><ul><li>  warehouse：下一代 PyPI。<a href="https://github.com/pypa/warehouse">Github</a></li><li>  Warehouse：PyPA 提供的 PyPI 镜像工具。<a href="https://warehouse.python.org/">python.org</a> <a href="https://bitbucket.org/pypa/bandersnatch">bitbucket</a></li><li>  devpi：PyPI 服务和打包/测试/分发工具。<a href="http://doc.devpi.net/">官网</a></li><li>  localshop：本地 PyPI 服务（自定义包并且自动对 PyPI 镜像）。<a href="https://github.com/mvantellingen/localshop">Github</a></li></ul><h3 id="分发"><a href="#分发" class="headerlink" title="分发"></a>分发</h3><p>打包为可执行文件以便分发。</p><ul><li>  PyInstaller：将 Python 程序转换成独立的执行文件（跨平台）。<a href="https://github.com/pyinstaller/pyinstaller">Github</a></li><li>  dh-virtualenv：构建并将 virtualenv 虚拟环境作为一个 Debian 包来发布。<a href="http://dh-virtualenv.readthedocs.org/">readthedocs</a></li><li>  Nuitka：将脚本、模块、包编译成可执行文件或扩展模块。<a href="http://nuitka.net/">官网</a></li><li>  py2app：将 Python 脚本变为独立软件包（Mac OS X）。<a href="http://pythonhosted.org/py2app/">官网</a></li><li>  py2exe：将 Python 脚本变为独立软件包（Windows）。<a href="http://www.py2exe.org/">官网</a></li><li>  pynsist：一个用来创建 Windows 安装程序的工具，可以在安装程序中打包 Python本身。<a href="http://pynsist.readthedocs.org/">官网</a></li></ul><h3 id="构建工具"><a href="#构建工具" class="headerlink" title="构建工具"></a>构建工具</h3><p>将源码编译成软件。</p><ul><li>  buildout：一个构建系统，从多个组件来创建，组装和部署应用。<a href="http://www.buildout.org/">官网</a></li><li>  BitBake：针对嵌入式 Linux 的类似 make 的构建工具。<a href="http://www.yoctoproject.org/docs/1.6/bitbake-user-manual/bitbake-user-manual.html">官网</a></li><li>  fabricate：对任何语言自动找到依赖关系的构建工具。<a href="https://code.google.com/archive/p/fabricate">官网</a></li><li>  PlatformIO：多平台命令行构建工具。<a href="https://github.com/platformio/platformio">Github</a></li><li>  PyBuilder：纯 Python 实现的持续化构建工具。<a href="https://github.com/pybuilder/pybuilder">Github</a></li><li>  SCons：软件构建工具。<a href="http://www.scons.org/">官网</a></li></ul><h3 id="交互式解析器"><a href="#交互式解析器" class="headerlink" title="交互式解析器"></a>交互式解析器</h3><p>交互式 Python 解析器。</p><ul><li>  IPython：功能丰富的工具，非常有效的使用交互式 Python。<a href="https://github.com/ipython/ipython">Github</a></li><li>  <a href="http://hao.jobbole.com/bpython/">bpython</a>：界面丰富的 Python 解析器。<a href="http://bpython-interpreter.org/">官网</a></li><li>  ptpython：高级交互式Python解析器， 构建于<a href="https://github.com/jonathanslenders/python-prompt-toolkit">python-prompt-toolkit</a> 之上。<a href="https://github.com/jonathanslenders/ptpython">Github</a></li></ul><h3 id="文件"><a href="#文件" class="headerlink" title="文件"></a>文件</h3><p>文件管理和 MIME（多用途的网际邮件扩充协议）类型检测。</p><ul><li>  imghdr：（Python 标准库）检测图片类型。<a href="https://docs.python.org/2/library/imghdr.html">python.org</a></li><li>  mimetypes：（Python 标准库）将文件名映射为 MIME 类型。<a href="https://docs.python.org/2/library/mimetypes.html">python.org</a></li><li>  path.py：对 os.path 进行封装的模块。<a href="https://github.com/jaraco/path.py">Github</a></li><li>  pathlib：（Python3.4+ 标准库）跨平台的、面向对象的路径操作库。<a href="https://pathlib.readthedocs.org/en/pep428/">官网</a></li><li>  python-magic：文件类型检测的第三方库 libmagic 的 Python 接口。<a href="https://github.com/ahupp/python-magic">Github</a></li><li>  Unipath：用面向对象的方式操作文件和目录。<a href="https://github.com/mikeorr/Unipath">Github</a></li><li>  watchdog：管理文件系统事件的 API 和 shell 工具<a href="https://github.com/gorakhargosh/watchdog">Github</a></li></ul><h3 id="日期和时间"><a href="#日期和时间" class="headerlink" title="日期和时间"></a>日期和时间</h3><p>操作日期和时间的类库。</p><ul><li>  arrow：更好的 Python 日期时间操作类库。<a href="https://github.com/crsmithdev/arrow">Github</a></li><li>  Chronyk：Python 3 的类库，用于解析手写格式的时间和日期。<a href="https://github.com/KoffeinFlummi/Chronyk">Github</a></li><li>  dateutil：Python datetime 模块的扩展。<a href="https://pypi.python.org/pypi/python-dateutil">python.org</a></li><li>  delorean：解决 Python 中有关日期处理的棘手问题的库。<a href="https://github.com/myusuf3/delorean/">Github</a></li><li>  moment：一个用来处理时间和日期的Python库。灵感来自于Moment.js。<a href="https://github.com/zachwill/moment">Github</a></li><li>  PyTime：一个简单易用的Python模块，用于通过字符串来操作日期/时间。<a href="https://github.com/shinux/PyTime">Github</a></li><li>  pytz：现代以及历史版本的世界时区定义。将时区数据库引入Python。<a href="https://launchpad.net/pytz">官网</a></li><li>  when.py：提供用户友好的函数来帮助用户进行常用的日期和时间操作。<a href="https://github.com/dirn/When.py">Github</a></li></ul><h3 id="文本处理"><a href="#文本处理" class="headerlink" title="文本处理"></a>文本处理</h3><p>用于解析和操作文本的库。</p><ul><li>  通用</li><li>  <a href="http://hao.jobbole.com/chardet/">chardet</a>：字符编码检测器，兼容 Python2 和 Python3。<a href="https://github.com/chardet/chardet">Github</a></li><li>  difflib：(Python 标准库)帮助我们进行差异化比较。<a href="https://docs.python.org/2/library/difflib.html">python.org</a></li><li>  ftfy：让Unicode文本更完整更连贯。<a href="https://github.com/LuminosoInsight/python-ftfy">Github</a></li><li>  fuzzywuzzy：模糊字符串匹配。<a href="https://github.com/seatgeek/fuzzywuzzy">Github</a></li><li>  Levenshtein：快速计算编辑距离以及字符串的相似度。<a href="https://github.com/ztane/python-Levenshtein/">Github</a></li><li>  pangu.py：在中日韩语字符和数字字母之间添加空格。<a href="https://github.com/vinta/pangu.py">Github</a></li><li>  yfiglet-figlet：<a href="https://github.com/pwaller/pyfiglet">pyfiglet -figlet</a> 的 Python实现。</li><li>  shortuuid：一个生成器库，用以生成简洁的，明白的，URL 安全的 UUID。<a href="https://github.com/stochastic-technologies/shortuuid">Github</a></li><li>  unidecode：Unicode 文本的 ASCII 转换形式 。<a href="https://pypi.python.org/pypi/Unidecode">python.org</a></li><li>  uniout：打印可读的字符，而不是转义的字符串。<a href="https://github.com/moskytw/uniout">Github</a></li><li>  xpinyin：一个用于把汉字转换为拼音的库。<a href="https://github.com/lxneng/xpinyin">Github</a></li><li>  simplejson：Python的JSON编码、解码器。<a href="https://simplejson.readthedocs.io/en/latest/">官网</a>、<a href="https://github.com/simplejson/simplejson">GitHub</a></li><li>  Slug化</li><li>  awesome-slugify：一个 Python slug 化库，可以保持 Unicode。<a href="https://github.com/dimka665/awesome-slugify">Github</a></li><li>  python-slugify：Python slug 化库，可以把 unicode 转化为 ASCII。<a href="https://github.com/un33k/python-slugify">Github</a></li><li>  unicode-slugify：一个 slug 工具，可以生成 unicode slugs ,需要依赖 Django 。<a href="https://github.com/mozilla/unicode-slugify">Github</a></li><li>  解析器</li><li>  phonenumbers：解析，格式化，储存，验证电话号码。<a href="https://github.com/daviddrysdale/python-phonenumbers">Github</a></li><li>  PLY：lex 和 yacc 解析工具的 Python 实现。<a href="http://www.dabeaz.com/ply/">官网</a></li><li>  Pygments：通用语法高亮工具。<a href="http://pygments.org/">官网</a></li><li>  pyparsing：生成通用解析器的框架。<a href="http://pyparsing.wikispaces.com/">官网</a></li><li>  python-nameparser：把一个人名分解为几个独立的部分。<a href="https://github.com/derek73/python-nameparser">Github</a></li><li>  python-user-agents：浏览器 user agent 解析器。<a href="https://github.com/selwin/python-user-agents">Github</a></li><li>  sqlparse：一个无验证的 SQL 解析器。<a href="https://sqlparse.readthedocs.org/en/latest/">官网</a></li></ul><h3 id="特殊文本格式处理"><a href="#特殊文本格式处理" class="headerlink" title="特殊文本格式处理"></a>特殊文本格式处理</h3><p>一些用来解析和操作特殊文本格式的库。</p><ul><li>  通用</li><li>  tablib：一个用来处理中表格数据的模块。<a href="https://github.com/kennethreitz/tablib">Github</a></li><li>  Office</li><li>  Marmir：把输入的Python 数据结构转换为电子表单。<a href="https://github.com/brianray/mm">Github</a></li><li>  openpyxl：一个用来读写 Excel 2010 xlsx/xlsm/xltx/xltm 文件的库。<a href="https://openpyxl.readthedocs.org/en/latest/">readthedocs</a></li><li>  python-docx：读取，查询以及修改 Microsoft Word 2007/2008 docx 文件。<a href="https://github.com/python-openxml/python-docx">Github</a></li><li>  unoconv：在 LibreOffice/OpenOffice 支持的任意文件格式之间进行转换。<a href="https://github.com/dagwieers/unoconv">Github</a></li><li>  XlsxWriter：一个用于创建 Excel .xlsx 文件的 Python 模块。<a href="https://xlsxwriter.readthedocs.org/en/latest/">readthedocs</a></li><li>  xlwings：一个使得在 Excel 中方便调用 Python 的库（反之亦然），基于 BSD 协议。<a href="http://xlwings.org/">官网</a></li><li>  <a href="http://hao.jobbole.com/xlwt/">xlwt</a>：读写 Excel 文件的数据和格式信息。<a href="https://github.com/python-excel/xlwt">Github</a> / <a href="https://github.com/python-excel/xlrd">xlrd</a></li><li>  relatorio：模板化OpenDocument 文件。<a href="http://relatorio.tryton.org/">官网</a></li><li>  PDF</li><li>  PDFMiner：一个用于从PDF文档中抽取信息的工具。<a href="https://github.com/euske/pdfminer">Github</a></li><li>  PyPDF2：一个可以分割，合并和转换 PDF 页面的库。<a href="https://github.com/mstamy2/PyPDF2">Github</a></li><li>  ReportLab：快速创建富文本 PDF 文档。<a href="http://www.reportlab.com/opensource/">官网</a></li><li>  Markdown</li><li>  Mistune：快速并且功能齐全的纯 Python 实现的 Markdown 解析器。<a href="https://github.com/lepture/mistune">Github</a></li><li>  Python-Markdown：John Gruber’s Markdown 的 Python 版实现。<a href="https://github.com/waylan/Python-Markdown">Github</a></li><li>  Python-Markdiwn2：纯 Python 实现的 Markdown 解析器，比 Python-Markdown 更快，更准确，可扩展。<a href="https://github.com/trentm/python-markdown2">Github</a></li><li>  YAML</li><li>  PyYAML：Python 版本的 YAML 解析器。<a href="http://pyyaml.org/">官网</a></li><li>  CSV</li><li>  csvkit：用于转换和操作 CSV 的工具。<a href="https://github.com/wireservice/csvkit">Github</a></li><li>  Archive</li><li>  unp：一个用来方便解包归档文件的命令行工具。<a href="https://github.com/mitsuhiko/unp">Github</a></li></ul><h3 id="自然语言处理"><a href="#自然语言处理" class="headerlink" title="自然语言处理"></a>自然语言处理</h3><p>用来处理人类语言的库。</p><ul><li>  <a href="http://hao.jobbole.com/nltk/">NLTK</a>：一个先进的平台，用以构建处理人类语言数据的 Python 程序。<a href="http://www.nltk.org/">官网</a></li><li>  jieba：中文分词工具。<a href="https://github.com/fxsjy/jieba">Github</a></li><li>  langid.py：独立的语言识别系统。<a href="https://github.com/saffsd/langid.py">Github</a></li><li>  Pattern：Python 网络信息挖掘模块。<a href="http://www.clips.ua.ac.be/pattern">官网</a></li><li>  SnowNLP：一个用来处理中文文本的库。<a href="https://github.com/isnowfy/snownlp">Github</a></li><li>  TextBlob：为进行普通自然语言处理任务提供一致的 API。<a href="http://textblob.readthedocs.org/en/latest/">readthedocs</a></li><li>  TextGrocery：一简单高效的短文本分类工具，基于 LibLinear 和 Jieba。<a href="https://github.com/2shou/TextGrocery">Github</a></li></ul><h3 id="文档"><a href="#文档" class="headerlink" title="文档"></a>文档</h3><p>用以生成项目文档的库。</p><ul><li>  <a href="http://hao.jobbole.com/sphinx/">Sphinx</a>：Python 文档生成器。<a href="http://www.sphinx-doc.org/en/latest/">官网</a></li><li>  awesome-sphinxdoc：<a href="https://github.com/yoloseem/awesome-sphinxdoc">Github</a></li><li>  MkDocs：对 Markdown 友好的文档生成器。<a href="http://www.mkdocs.org/">官网</a></li><li>  pdoc：一个可以替换Epydoc 的库，可以自动生成 Python 库的 API 文档。<a href="https://github.com/BurntSushi/pdoc">Github</a></li><li>  Pycco：文学编程（literate-programming）风格的文档生成器。<a href="https://github.com/pycco-docs/pycco">Github</a></li></ul><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><p>用来保存和解析配置的库。</p><ul><li>  config：<a href="https://docs.python.org/2/library/logging.html">logging</a> 模块作者写的分级配置模块。<a href="https://www.red-dove.com/config-doc/">官网</a></li><li>  ConfigObj：INI 文件解析器，带验证功能。<a href="http://www.voidspace.org.uk/python/configobj.html">官网</a></li><li>  ConfigParser：(Python 标准库) INI 文件解析器。<a href="https://docs.python.org/2/library/configparser.html">python.org</a></li><li>  profig：通过多种格式进行配置，具有数值转换功能。<a href="http://profig.readthedocs.org/en/default/">官网</a></li><li>  python-decouple：将设置和代码完全隔离。<a href="https://github.com/henriquebastos/python-decouple">Github</a></li></ul><h3 id="命令行工具"><a href="#命令行工具" class="headerlink" title="命令行工具"></a>命令行工具</h3><p>用于创建命令行程序的库。</p><ul><li>  命令行程序开发</li><li>  asciimatics：跨平台，全屏终端包（即鼠标/键盘输入和彩色，定位文本输出），完整的复杂动画和特殊效果的高级API。<a href="https://github.com/peterbrittain/asciimatics">Github</a></li><li>  cement：Python 的命令行程序框架。<a href="http://builtoncement.com/">官网</a></li><li>  click：一个通过组合的方式来创建精美命令行界面的包。<a href="http://click.pocoo.org/dev/">官网</a></li><li>  cliff：一个用于创建命令行程序的框架，可以创建具有多层命令的命令行程序。<a href="http://docs.openstack.org/developer/cliff/">官网</a></li><li>  clint：Python 命令行程序工具。<a href="https://github.com/kennethreitz/clint">Github</a></li><li>  colorama：跨平台彩色终端文本。<a href="https://pypi.python.org/pypi/colorama">python.org</a></li><li>  docopt：Python 风格的命令行参数解析器。<a href="http://docopt.org/">官网</a></li><li>  Gooey：一条命令，将命令行程序变成一个 GUI 程序。<a href="https://github.com/chriskiehl/Gooey">Github</a></li><li>  python-prompt-toolkit：一个用于构建强大的交互式命令行程序的库。<a href="https://github.com/jonathanslenders/python-prompt-toolkit">Github</a></li><li>  <a href="http://hao.jobbole.com/pythonpy/">Pythonpy</a>：在命令行中直接执行任何Python指令。<a href="https://github.com/Russell91/pythonpy/wiki">Github</a></li><li>  生产力工具</li><li>  aws-cli：Amazon Web Services 的通用命令行界面。<a href="https://github.com/aws/aws-cli">Github</a></li><li>  bashplotlib：在终端中进行基本绘图。<a href="https://github.com/glamp/bashplotlib">Github</a></li><li>  caniusepython3：判断是哪个项目妨碍你你移植到 Python 3。<a href="https://github.com/brettcannon/caniusepython3">Github</a></li><li>  cookiecutter：从 cookiecutters（项目模板）创建项目的一个命令行工具。<a href="https://github.com/audreyr/cookiecutter">Github</a></li><li>  doitlive：一个用来在终端中进行现场演示的工具。<a href="https://github.com/sloria/doitlive">Github</a></li><li>  howdoi：通过命令行获取即时的编程问题解答。<a href="https://github.com/gleitz/howdoi">Github</a></li><li>  httpie：一个命令行HTTP 客户端，cURL 的替代品，易用性更好。<a href="https://github.com/jkbrzt/httpie">Github</a></li><li>  PathPicker：从bash输出中选出文件。<a href="https://github.com/facebook/PathPicker">Github</a></li><li>  percol：向UNIX shell 传统管道概念中加入交互式选择功能。<a href="https://github.com/mooz/percol">Github</a></li><li>  SAWS：一个加强版的 AWS 命令行。<a href="https://github.com/donnemartin/saws">Github</a></li><li>  thefuck：修正你之前的命令行指令。<a href="https://github.com/nvbn/thefuck">Github</a></li><li>  mycli：一个 MySQL 命令行客户端，具有自动补全和语法高亮功能。<a href="https://github.com/dbcli/mycli">Github</a></li><li>  pgcli：Postgres 命令行工具，具有自动补全和语法高亮功能。<a href="https://github.com/dbcli/pgcli">Github</a></li><li>  try：一个从来没有更简单的命令行工具，用来试用python库。<a href="https://github.com/timofurrer/try">Github</a></li></ul><h3 id="下载器"><a href="#下载器" class="headerlink" title="下载器"></a>下载器</h3><p>用来进行下载的库.</p><ul><li>  s3cmd：一个用来管理Amazon S3 和 CloudFront 的命令行工具。<a href="https://github.com/s3tools/s3cmd">Github</a></li><li>  s4cmd：超级 S3 命令行工具，性能更加强劲。<a href="https://github.com/bloomreach/s4cmd">Github</a></li><li>  you-get：一个 YouTube/Youku/Niconico 视频下载器，使用 Python3 编写。<a href="https://www.soimort.org/you-get/">官网</a></li><li>  youtube-dl：一个小巧的命令行程序，用来下载 YouTube 视频。<a href="http://rg3.github.io/youtube-dl/">Github</a></li></ul><h3 id="图像处理"><a href="#图像处理" class="headerlink" title="图像处理"></a>图像处理</h3><p>用来操作图像的库.</p><ul><li>  <a href="http://hao.jobbole.com/pillow/">pillow</a>：Pillow 是一个更加易用版的 <a href="http://www.pythonware.com/products/pil/">PIL</a>。<a href="http://pillow.readthedocs.org/en/latest/">readthedocs</a></li><li>  hmap：图像直方图映射。<a href="https://github.com/rossgoodwin/hmap">Github</a></li><li>  imgSeek：一个使用视觉相似性搜索一组图片集合的项目。<a href="https://sourceforge.net/projects/imgseek/">sourceforge.net</a></li><li>  nude.py：裸体检测。<a href="https://github.com/hhatto/nude.py">Github</a></li><li>  pyBarcode：不借助 PIL 库在 Python 程序中生成条形码。<a href="https://pythonhosted.org/pyBarcode/">官网</a></li><li>  pygram：类似 Instagram 的图像滤镜。<a href="https://github.com/ajkumar25/pygram">Github</a></li><li>  python-qrcode：一个纯 Python 实现的二维码生成器。<a href="https://github.com/lincolnloop/python-qrcode">Github</a></li><li>  Quads：基于四叉树的计算机艺术。<a href="https://github.com/fogleman/Quads">Github</a></li><li>  scikit-image：一个用于（科学）图像处理的 Python 库。<a href="http://scikit-image.org/">官网</a></li><li>  thumbor：一个小型图像服务，具有剪裁，尺寸重设和翻转功能。<a href="https://github.com/thumbor/thumbor">Github</a></li><li>  wand：<a href="http://www.imagemagick.org/script/magick-wand.php">MagickWand</a>的Python 绑定。MagickWand 是 ImageMagick的 C API 。<a href="https://github.com/dahlia/wand">Github</a></li></ul><h3 id="OCR"><a href="#OCR" class="headerlink" title="OCR"></a>OCR</h3><p>光学字符识别库。</p><ul><li>  pyocr：Tesseract 和 Cuneiform 的一个封装(wrapper)。<a href="https://github.com/jflesch/pyocr">Github</a></li><li>  <a href="http://hao.jobbole.com/pytesseract/">pytesseract</a>：<a href="https://github.com/tesseract-ocr">Google Tesseract OCR</a> 的另一个封装(wrapper)。<a href="https://github.com/madmaze/pytesseract">Github</a></li><li>  python-tesseract - <a href="https://github.com/tesseract-ocr">Google Tesseract OCR</a> 的一个包装类。</li></ul><h3 id="音频"><a href="#音频" class="headerlink" title="音频"></a>音频</h3><p>用来操作音频的库</p><ul><li>  audiolazy：Python 的数字信号处理包。<a href="https://github.com/danilobellini/audiolazy">Github</a></li><li>  audioread：交叉库 (GStreamer + Core Audio + MAD + FFmpeg) 音频解码。<a href="https://github.com/beetbox/audioread">Github</a></li><li>  beets：一个音乐库管理工具及 <a href="https://musicbrainz.org/">MusicBrainz</a> 标签添加工具<a href="http://beets.io/">官网</a></li><li>  dejavu：音频指纹提取和识别<a href="https://github.com/worldveil/dejavu">Github</a></li><li>  <a href="http://hao.jobbole.com/django-elastic-transcoder/">django-elastic-transcoder</a>：Django + <a href="http://aws.amazon.com/elastictranscoder/">Amazon Elastic Transcoder</a>。<a href="https://github.com/StreetVoice/django-elastic-transcoder">Github</a></li><li>  eyeD3：一个用来操作音频文件的工具，具体来讲就是包含 ID3 元信息的 MP3 文件。<a href="http://eyed3.nicfit.net/">官网</a></li><li>  id3reader：一个用来读取 MP3 元数据的 Python 模块。<a href="http://nedbatchelder.com/code/modules/id3reader.py">官网</a></li><li>  m3u8：一个用来解析 m3u8 文件的模块。<a href="https://github.com/globocom/m3u8">Github</a></li><li>  mutagen：一个用来处理音频元数据的 Python 模块。<a href="https://bitbucket.org/lazka/mutagen">官网</a></li><li>  pydub：通过简单、简洁的高层接口来操作音频文件。<a href="https://github.com/jiaaro/pydub">Github</a></li><li>  pyechonest：<a href="http://developer.echonest.com/">Echo Nest</a> API 的 Python 客户端<a href="https://github.com/echonest/pyechonest">Github</a></li><li>  talkbox：一个用来处理演讲/信号的 Python 库<a href="http://scikits.appspot.com/talkbox">官网</a></li><li>  TimeSide：开源 web 音频处理框架。<a href="https://github.com/Parisson/TimeSide">Github</a></li><li>  tinytag：一个用来读取MP3, OGG, FLAC 以及 Wave 文件音乐元数据的库。<a href="https://github.com/devsnd/tinytag">Github</a></li><li>  mingus：一个高级音乐理论和曲谱包，支持 MIDI 文件和回放功能。<a href="http://bspaans.github.io/python-mingus/">Github</a></li></ul><h3 id="Video"><a href="#Video" class="headerlink" title="Video"></a>Video</h3><p>用来操作视频和GIF的库。</p><ul><li>  moviepy：一个用来进行基于脚本的视频编辑模块，适用于多种格式，包括动图 GIFs。<a href="http://zulko.github.io/moviepy/">Github</a></li><li>  scikit-video：SciPy 视频处理常用程序。<a href="https://github.com/aizvorski/scikit-video">Github</a></li></ul><h3 id="地理位置"><a href="#地理位置" class="headerlink" title="地理位置"></a>地理位置</h3><p>地理编码地址以及用来处理经纬度的库。</p><ul><li>  GeoDjango：世界级地理图形 web 框架。<a href="https://docs.djangoproject.com/en/dev/ref/contrib/gis/">官网</a></li><li>  GeoIP：MaxMind GeoIP Legacy 数据库的 Python API。<a href="https://github.com/maxmind/geoip-api-python">Github</a></li><li>  geojson：GeoJSON 的 Python 绑定及工具。<a href="https://github.com/frewsxcv/python-geojson">Github</a></li><li>  geopy：Python 地址编码工具箱。<a href="https://github.com/geopy/geopy">Github</a></li><li>  pygeoip：纯 Python GeoIP API。<a href="https://github.com/appliedsec/pygeoip">Github</a></li><li>  django-countries：一个 Django 应用程序，提供用于表格的国家选择功能，国旗图标静态文件以及模型中的国家字段。<a href="https://github.com/SmileyChris/django-countries">Github</a></li></ul><h3 id="HTTP"><a href="#HTTP" class="headerlink" title="HTTP"></a>HTTP</h3><p>使用HTTP的库。</p><ul><li>  requests：人性化的HTTP请求库。<a href="http://docs.python-requests.org/en/latest/">官网</a></li><li>  grequests：requests 库 + gevent ，用于异步 HTTP 请求.<a href="https://github.com/kennethreitz/grequests">Github</a></li><li>  httplib2：全面的 HTTP 客户端库。<a href="https://github.com/jcgregorio/httplib2">Github</a></li><li>  treq：类似 requests 的Python API 构建于 Twisted HTTP 客户端之上。<a href="https://github.com/twisted/treq">Github</a></li><li>  urllib3：一个具有线程安全连接池，支持文件 post，清晰友好的 HTTP 库。<a href="https://github.com/shazow/urllib3">Github</a></li></ul><h3 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h3><p>Python实现的数据库。</p><ul><li>  pickleDB：一个简单，轻量级键值储存数据库。<a href="https://pythonhosted.org/pickleDB/">官网</a></li><li>  PipelineDB：流式 SQL 数据库。<a href="https://www.pipelinedb.com/">官网</a></li><li>  TinyDB：一个微型的，面向文档型数据库。<a href="https://github.com/msiemens/tinydb">Github</a></li><li>  ZODB：一个 Python 原生对象数据库。一个键值和对象图数据库。<a href="http://www.zodb.org/en/latest/">官网</a></li></ul><h3 id="数据库驱动"><a href="#数据库驱动" class="headerlink" title="数据库驱动"></a>数据库驱动</h3><p>用来连接和操作数据库的库。</p><ul><li>  awsome-mysql：<a href="http://shlomi-noach.github.io/awesome-mysql/">Github</a></li><li>  mysql-python：Python 的 MySQL 数据库连接器。<a href="https://sourceforge.net/projects/mysql-python/">官网</a></li><li>  ysqlclient：<a href="https://github.com/PyMySQL/mysqlclient-python">mysql-python</a> 分支，支持 Python 3。</li><li>  oursql：一个更好的 MySQL 连接器，支持原生预编译指令和 BLOBs.<a href="https://pythonhosted.org/oursql/">官网</a></li><li>  PyMySQL：纯 Python MySQL 驱动，兼容 mysql-python。<a href="https://github.com/PyMySQL/PyMySQL">Github</a></li><li>  PostgreSQL</li><li>  psycopg2：Python 中最流行的 PostgreSQL 适配器。<a href="http://initd.org/psycopg/">官网</a></li><li>  queries：psycopg2 库的封装，用来和 PostgreSQL 进行交互。<a href="https://github.com/gmr/queries">Github</a></li><li>  txpostgres：基于 Twisted 的异步 PostgreSQL 驱动。<a href="http://txpostgres.readthedocs.org/en/latest/">readthedocs</a></li><li>  其他关系型数据库</li><li>  apsw：另一个 Python SQLite封装。<a href="http://rogerbinns.github.io/apsw/">Github</a></li><li>  dataset：在数据库中存储Python字典</li><li>  pymssql：一个简单的Microsoft SQL Server数据库接口。<a href="http://www.pymssql.org/en/latest/">官网</a></li><li>  NoSQL 数据库</li><li>  cassandra-python-driver：Cassandra 的 Python 驱动。<a href="https://github.com/datastax/python-driver">Github</a></li><li>  HappyBase：一个为 Apache HBase 设计的，对开发者友好的库。<a href="http://happybase.readthedocs.org/en/latest/">readthedocs</a></li><li>  Plyvel：一个快速且功能丰富的 LevelDB 的 Python 接口。<a href="https://plyvel.readthedocs.org/en/latest/">readthedocs</a></li><li>  py2neo：Neo4j restful 接口的Python 封装客户端。<a href="http://py2neo.org/2.0/">官网</a></li><li>  pycassa：Cassandra 的 Python Thrift 驱动。<a href="https://github.com/pycassa/pycassa">Github</a></li><li>  PyMongo：MongoDB 的官方 Python 客户端。<a href="https://docs.mongodb.org/ecosystem/drivers/python/">官网</a></li><li>  redis-py：Redis 的 Python 客户端。<a href="https://github.com/andymccurdy/redis-py">Github</a></li><li>  telephus：基于 Twisted 的 Cassandra 客户端。<a href="https://github.com/driftx/Telephus">Github</a></li><li>  txRedis：基于 Twisted 的 Redis 客户端。<a href="https://github.com/deldotdr/txRedis">Github</a></li></ul><h3 id="ORM"><a href="#ORM" class="headerlink" title="ORM"></a>ORM</h3><p>实现对象关系映射或数据映射技术的库。</p><ul><li>  关系型数据库</li><li>  Django Models：Django 的一部分。<a href="https://docs.djangoproject.com/en/dev/topics/db/models/">官网</a></li><li>  SQLAlchemy：Python SQL 工具以及对象关系映射工具。<a href="http://www.sqlalchemy.org/">官网</a></li><li>  <a href="https://github.com/dahlia/awesome-sqlalchemy">awesome-sqlalchemy</a>系列</li><li>  <a href="http://hao.jobbole.com/peewee/">Peewee</a>：一个小巧，富有表达力的 ORM。<a href="https://github.com/coleifer/peewee">Github</a></li><li>  PonyORM：提供面向生成器的 SQL 接口的 ORM。<a href="https://ponyorm.com/">官网</a></li><li>  python-sql：编写 Python 风格的 SQL 查询。<a href="https://pypi.python.org/pypi/python-sql">python.org</a></li><li>  NoSQL 数据库</li><li>  django-mongodb-engine：Django MongoDB 后端。<a href="https://github.com/django-nonrel/mongodb-engine">Github</a></li><li>  PynamoDB：<a href="https://aws.amazon.com/dynamodb/">Amazon DynamoDB</a> 的一个 Python 风格接口。<a href="https://github.com/jlafon/PynamoDB">Github</a></li><li>  flywheel：Amazon DynamoDB 的对象映射工具。<a href="https://github.com/mathcamp/flywheel">Github</a></li><li>  MongoEngine：一个Python 对象文档映射工具，用于 MongoDB。<a href="http://mongoengine.org/">官网</a></li><li>  hot-redis：为 Redis 提供 Python 丰富的数据类型。<a href="https://github.com/stephenmcd/hot-redis">Github</a></li><li>  redisco：一个 Python 库，提供可以持续存在在 Redis 中的简单模型和容器。<a href="https://github.com/kiddouk/redisco">Github</a></li><li>  其他</li><li>  butterdb：Google Drive 电子表格的 Python ORM。<a href="https://github.com/Widdershin/butterdb">Github</a></li></ul><h3 id="Web-框架"><a href="#Web-框架" class="headerlink" title="Web 框架"></a>Web 框架</h3><p>全栈 Web 框架。</p><ul><li>  <a href="http://hao.jobbole.com/django/">Django</a>：Python 界最流行的 web 框架。<a href="https://www.djangoproject.com/">官网</a></li><li>  <a href="https://github.com/rosarior/awesome-django">awesome-django</a>系列</li><li>  <a href="http://hao.jobbole.com/flask/">Flask</a>：一个 Python 微型框架。<a href="http://flask.pocoo.org/">官网</a></li><li>  <a href="https://github.com/humiaozuzu/awesome-flask">awesome-flask</a>系列</li><li>  pyramid：一个小巧，快速，接地气的开源Python web 框架。</li><li>  <a href="https://github.com/uralbash/awesome-pyramid">awesome-pyramid</a>系列</li><li>  <a href="http://hao.jobbole.com/bottle/">Bottle</a>：一个快速小巧，轻量级的 WSGI 微型 web 框架。<a href="http://bottlepy.org/docs/dev/index.html">官网</a></li><li>  CherryPy：一个极简的 Python web 框架，服从 HTTP/1.1 协议且具有WSGI 线程池。<a href="http://www.cherrypy.org/">官网</a></li><li>  TurboGears：一个可以扩展为全栈解决方案的微型框架。<a href="http://www.turbogears.org/">官网</a></li><li>  <a href="http://hao.jobbole.com/python-webpy/">web.py</a>：一个 Python 的 web 框架，既简单，又强大。<a href="http://webpy.org/">官网</a></li><li>  web2py：一个全栈 web 框架和平台，专注于简单易用。<a href="http://www.web2py.com/">官网</a></li><li>  <a href="http://hao.jobbole.com/tornado/">Tornado</a>：一个web 框架和异步网络库。<a href="http://www.tornadoweb.org/en/latest/">官网</a></li></ul><h3 id="权限"><a href="#权限" class="headerlink" title="权限"></a>权限</h3><p>允许或拒绝用户访问数据或功能的库。</p><ul><li>  Carteblanche：Module to align code with thoughts of users and designers. Also magically handles navigation and permissions.<a href="https://github.com/neuman/python-carteblanche/">Github</a></li><li>  django-guardian：Django 1.2+ 实现了单个对象权限。<a href="https://github.com/django-guardian/django-guardian">Github</a></li><li>  django-rules：一个小巧但是强大的应用，提供对象级别的权限管理，且不需要使用数据库。<a href="https://github.com/dfunckt/django-rules">Github</a></li></ul><h3 id="CMS"><a href="#CMS" class="headerlink" title="CMS"></a>CMS</h3><p>内容管理系统</p><ul><li>  odoo-cms: 一个开源的，企业级 CMS，基于odoo。<a href="http://www.odoo.com/">官网</a></li><li>  django-cms：一个开源的，企业级 CMS，基于 Django。<a href="http://www.django-cms.org/en/">官网</a></li><li>  djedi-cms：一个轻量级但却非常强大的 Django CMS ，考虑到了插件，内联编辑以及性能。<a href="http://djedi-cms.org/">官网</a></li><li>  FeinCMS：基于 Django 构建的最先进的内容管理系统之一。<a href="http://www.feincms.org/">官网</a></li><li>  Kotti：一个高级的，Python 范的 web 应用框架，基于 Pyramid 构建。<a href="http://kotti.pylonsproject.org/">官网</a></li><li>  Mezzanine：一个强大的，持续的，灵活的内容管理平台。<a href="http://mezzanine.jupo.org/">官网</a></li><li>  Opps：一个为杂志，报纸网站以及大流量门户网站设计的 CMS 平台，基于 Django。<a href="http://opps.github.io/opps/">Github</a></li><li>  Plone：一个构建于开源应用服务器 Zope 之上的 CMS。<a href="https://plone.org/">官网</a></li><li>  Quokka：灵活，可扩展的小型 CMS，基于 Flask 和 MongoDB。<a href="http://quokkaproject.org/">官网</a></li><li>  <a href="http://hao.jobbole.com/wagtail/">Wagtail</a>：一个 Django 内容管理系统。<a href="https://wagtail.io/">官网</a></li><li>  Widgy：最新的 CMS 框架，基于 Django。<a href="https://wid.gy/">官网</a></li></ul><h3 id="电子商务"><a href="#电子商务" class="headerlink" title="电子商务"></a>电子商务</h3><p>用于电子商务以及支付的框架和库。</p><ul><li>  django-oscar：一个用于 Django 的开源的电子商务框架。<a href="http://oscarcommerce.com/">官网</a></li><li>  django-shop：一个基于 Django 的店铺系统。<a href="https://github.com/awesto/django-shop">Github</a></li><li>  Cartridge：一个基于 Mezzanine 构建的购物车应用。<a href="https://github.com/stephenmcd/cartridge">Github</a></li><li>  shoop：一个基于 Django 的开源电子商务平台。<a href="https://www.shoop.io/en/">官网</a></li><li>  alipay：非官方的 Python 支付宝 API。<a href="https://github.com/lxneng/alipay">Github</a></li><li>  merchant：一个可以接收来自多种支付平台支付的 Django 应用。<a href="https://github.com/agiliq/merchant">Github</a></li><li>  money：货币类库with optional CLDR-backed locale-aware formatting and an extensible currency exchange solution.<a href="https://github.com/carlospalol/money">Github</a></li><li>  python-currencies：显示货币格式以及它的数值。<a href="https://github.com/Alir3z4/python-currencies">Github</a></li></ul><h3 id="RESTful-API"><a href="#RESTful-API" class="headerlink" title="RESTful API"></a>RESTful API</h3><p>用来开发RESTful APIs的库</p><ul><li>  Django</li><li>  <a href="http://hao.jobbole.com/django-rest-framework/">django-rest-framework</a>：一个强大灵活的工具，用来构建 web API。<a href="http://www.django-rest-framework.org/">官网</a></li><li>  django-tastypie：为Django 应用开发API。<a href="http://tastypieapi.org/">官网</a></li><li>  django-formapi：为 Django 的表单验证，创建 JSON APIs 。<a href="https://github.com/5monkeys/django-formapi">Github</a></li><li>  Flask</li><li>  flask-api：为 flask 开发的，可浏览 Web APIs 。<a href="http://www.flaskapi.org/">官网</a></li><li>  flask-restful：为 flask 快速创建REST APIs 。<a href="http://flask-restful.readthedocs.org/en/latest/">readthedocs</a></li><li>  flask-restless：为 SQLAlchemy 定义的数据库模型创建 RESTful APIs 。<a href="https://flask-restless.readthedocs.org/en/latest/">readthedocs</a></li><li>  flask-api-utils：为 Flask 处理 API 表示和验证。<a href="https://github.com/marselester/flask-api-utils">Github</a></li><li>  eve：REST API 框架，由 Flask, MongoDB 等驱动。<a href="https://github.com/nicolaiarocci/eve">Github</a></li><li>  Pyramid</li><li>  cornice：一个Pyramid 的 REST 框架 。<a href="https://cornice.readthedocs.org/en/latest/">readthedocs</a></li><li>  与框架无关的</li><li>  falcon：一个用来建立云 API 和 web app 后端的高性能框架。<a href="http://falconframework.org/">官网</a></li><li>  sandman：为现存的数据库驱动系统自动创建 REST APIs 。<a href="https://github.com/jeffknupp/sandman">Github</a></li><li>  restless：框架无关的 REST 框架 ，基于从 Tastypie 学到的知识。<a href="http://restless.readthedocs.org/en/latest/">readthedocs</a></li><li>  ripozo：快速创建 REST/HATEOAS/Hypermedia APIs。<a href="https://github.com/vertical-knowledge/ripozo">Github</a></li></ul><h3 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h3><p>实现验证方案的库。</p><ul><li>  OAuth</li><li>  Authomatic：简单但是强大的框架，身份验证/授权客户端。<a href="http://peterhudec.github.io/authomatic/">Github</a></li><li>  django-allauth：Django 的验证应用。<a href="https://github.com/pennersr/django-allauth">Github</a></li><li>  django-oauth-toolkit：为 Django 用户准备的 OAuth2。<a href="https://github.com/evonove/django-oauth-toolkit">Github</a></li><li>  django-oauth2-provider：为 Django 应用提供 OAuth2 接入。<a href="https://github.com/caffeinehit/django-oauth2-provider">Github</a></li><li>  Flask-OAuthlib：OAuth 1.0/a, 2.0 客户端实现，供 Flask 使用。<a href="https://github.com/lepture/flask-oauthlib">Github</a></li><li>  OAuthLib：一个 OAuth 请求-签名逻辑通用、 完整的实现。<a href="https://github.com/IDAn/oauthlib">Github</a></li><li>  python-oauth2：一个完全测试的抽象接口。用来创建 OAuth 客户端和服务端。<a href="https://github.com/joestump/python-oauth2">Github</a></li><li>  python-social-auth：一个设置简单的社会化验证方式。<a href="https://github.com/omab/python-social-auth">Github</a></li><li>  rauth：OAuth 1.0/a, 2.0, 和 Ofly 的 Python 库。<a href="https://github.com/litl/rauth">Github</a></li><li>  sanction：一个超级简单的OAuth2 客户端实现。<a href="https://github.com/demianbrecht/sanction">Github</a></li><li>  其他</li><li>  jose：JavaScript 对象签名和加密草案的实现。<a href="https://github.com/demonware/jose">Github</a></li><li>  PyJWT：JSON Web 令牌草案 01。<a href="https://github.com/jpadilla/pyjwt">Github</a></li><li>  python-jws：JSON Web 签名草案 02 的实现。<a href="https://github.com/brianloveswords/python-jws">Github</a></li><li>  python-jwt：一个用来生成和验证 JSON Web 令牌的模块。<a href="https://github.com/davedoesdev/python-jwt">Github</a></li></ul><h3 id="模板引擎"><a href="#模板引擎" class="headerlink" title="模板引擎"></a>模板引擎</h3><p>模板生成和词法解析的库和工具。</p><ul><li>  <a href="http://hao.jobbole.com/jinja2/">Jinja2</a>：一个现代的，对设计师友好的模板引擎。<a href="https://github.com/pallets/jinja">Github</a></li><li>  Chameleon：一个 HTML/XML 模板引擎。 模仿了 ZPT（Zope Page Templates）, 进行了速度上的优化。<a href="https://chameleon.readthedocs.org/en/latest/">readthedocs</a></li><li>  Genshi：Python 模板工具，用以生成 web 感知的结果。<a href="https://genshi.edgewall.org/">官网</a></li><li>  Mako：Python 平台的超高速轻量级模板。<a href="http://www.makotemplates.org/">官网</a></li></ul><h3 id="Queue"><a href="#Queue" class="headerlink" title="Queue"></a>Queue</h3><p>处理事件以及任务队列的库。</p><ul><li>  celery：一个异步任务队列/作业队列，基于分布式消息传递。<a href="http://www.celeryproject.org/">官网</a></li><li>  huey：小型多线程任务队列。<a href="https://github.com/coleifer/huey">Github</a></li><li>  <a href="http://hao.jobbole.com/mrq/">mrq</a>：Mr. Queue -一个 Python 的分布式 worker 任务队列， 使用 Redis 和 gevent。<a href="https://github.com/pricingassistant/mrq">Github</a></li><li>  rq：简单的 Python 作业队列。<a href="http://python-rq.org/">官网</a></li><li>  simpleq：一个简单的，可无限扩张的，基于亚马逊 SQS 的队列。<a href="https://github.com/rdegges/simpleq">Github</a></li></ul><h3 id="搜索"><a href="#搜索" class="headerlink" title="搜索"></a>搜索</h3><p>对数据进行索引和执行搜索查询的库和软件。</p><ul><li>  django-haystack：Django 模块化搜索。<a href="https://github.com/django-haystack/django-haystack">Github</a></li><li>  elasticsearch-py：Elasticsearch 的官方底层 Python 客户端。<a href="https://www.elastic.co/guide/en/elasticsearch/client/python-api/current/index.html">官网</a></li><li>  elasticsearch-dsl-py：Elasticsearch 的官方高级 Python 客户端。<a href="https://github.com/elastic/elasticsearch-dsl-py">Github</a></li><li>  solrpy：<a href="http://lucene.apache.org/solr/">solr</a>的 Python 客户端。<a href="https://github.com/edsu/solrpy">Github</a></li><li>  Whoosh：一个快速的纯 Python 搜索引擎库。<a href="http://whoosh.readthedocs.org/en/latest/">readthedocs</a></li></ul><h3 id="动态消息"><a href="#动态消息" class="headerlink" title="动态消息"></a>动态消息</h3><p>用来创建用户活动的库。</p><ul><li>  django-activity-stream：从你的站点行为中生成通用活动信息流。<a href="https://github.com/justquick/django-activity-stream">Github</a></li><li>  Stream-Framework：使用 Cassandra 和 Redis 创建动态消息和通知系统。<a href="https://github.com/tschellenbach/Stream-Framework">Github</a></li></ul><h3 id="资源管理"><a href="#资源管理" class="headerlink" title="资源管理"></a>资源管理</h3><p>管理、压缩、缩小网站资源的工具。</p><ul><li>  django-compressor：将链接和内联的 JavaScript 或 CSS 压缩到一个单独的缓存文件中。<a href="https://github.com/django-compressor/django-compressor">Github</a></li><li>  django-storages：一个针对 Django 的自定义存储后端的工具集合。<a href="http://django-storages.readthedocs.org/en/latest/">readthedocs</a></li><li>  fanstatic：打包、优化，并且把静态文件依赖作为 Python 的包来提供。<a href="http://www.fanstatic.org/en/latest/">官网</a></li><li>  File Conveyor：一个后台驻留的程序，用来发现和同步文件到 CDNs, S3 和 FTP。<a href="http://fileconveyor.org/">官网</a></li><li>  Flask-Assets：帮你将 web 资源整合到你的 Flask app 中。<a href="http://flask-assets.readthedocs.org/en/latest/">readthedocs</a></li><li>  jinja-assets-compressor：一个 Jinja 扩展，用来编译和压缩你的资源。<a href="https://github.com/jaysonsantos/jinja-assets-compressor">Github</a></li><li>  webassets：为你的静态资源打包、优化和管理生成独一无二的缓存 URL。<a href="http://webassets.readthedocs.org/en/latest/">readthedocs</a></li></ul><h3 id="缓存"><a href="#缓存" class="headerlink" title="缓存"></a>缓存</h3><p>缓存数据的库。</p><ul><li>  Beaker：一个缓存和会话库，可以用在 web 应用和独立 Python脚本和应用上。<a href="http://beaker.readthedocs.org/en/latest/">readthedocs</a></li><li>  django-cache-machine：Django 模型的自动缓存和失效。<a href="https://github.com/django-cache-machine/django-cache-machine">Github</a></li><li>  django-cacheops：具有自动颗粒化事件驱动失效功能的 ORM。<a href="https://github.com/Suor/django-cacheops">Github</a></li><li>  django-viewlet：渲染模板，同时具有额外的缓存控制功能。<a href="https://github.com/5monkeys/django-viewlet">Github</a></li><li>  dogpile.cache：dogpile.cache 是 Beaker 的下一代替代品，由同一作者开发。<a href="http://dogpilecache.readthedocs.org/en/latest/">readthedocs</a></li><li>  HermesCache：Python 缓存库，具有基于标签的失效和 dogpile effect 保护功能。<a href="https://pypi.python.org/pypi/HermesCache">python.org</a></li><li>  johnny-cache：django应用缓存框架。<a href="https://github.com/jmoiron/johnny-cache">Github</a></li><li>  pylibmc：<a href="http://libmemcached.org/libMemcached.html">libmemcached</a> 接口的 Python 封装。<a href="https://github.com/lericson/pylibmc">Github</a></li></ul><h3 id="电子邮件"><a href="#电子邮件" class="headerlink" title="电子邮件"></a>电子邮件</h3><p>用来发送和解析电子邮件的库。</p><ul><li>  django-celery-ses：带有 AWS SES 和 Celery 的 Django email 后端。<a href="https://github.com/StreetVoice/django-celery-ses">Github</a></li><li>  envelopes：供人类使用的电子邮件库。<a href="http://tomekwojcik.github.io/envelopes/">Github</a></li><li>  flanker：一个 email 地址和 Mime 解析库。<a href="https://github.com/mailgun/flanker">Github</a></li><li>  imbox：Python IMAP 库<a href="https://github.com/martinrusev/imbox">Github</a></li><li>  inbox.py：Python SMTP 服务器。<a href="https://github.com/kennethreitz/inbox.py">Github</a></li><li>  inbox：一个开源电子邮件工具箱。<a href="https://github.com/nylas/sync-engine">Github</a></li><li>  lamson：Python 风格的 SMTP 应用服务器。<a href="https://github.com/zedshaw/lamson">Github</a></li><li>  mailjet：Mailjet API 实现，用来提供批量发送邮件，统计等功能。<a href="https://github.com/WoLpH/mailjet">Github</a></li><li>  marrow.mailer：高性能可扩展邮件分发框架。<a href="https://github.com/marrow/mailer">Github</a></li><li>  modoboa：一个邮件托管和管理平台，具有现代的、简约的 Web UI。<a href="https://github.com/tonioo/modoboa">Github</a></li><li>  pyzmail：创建，发送和解析电子邮件。<a href="http://www.magiksys.net/pyzmail/">官网</a></li><li>  Talon：Mailgun 库，用来抽取信息和签名。<a href="https://github.com/mailgun/talon">Github</a></li></ul><h3 id="国际化"><a href="#国际化" class="headerlink" title="国际化"></a>国际化</h3><p>用来进行国际化的库。</p><ul><li>  Babel：一个Python 的国际化库。<a href="http://babel.pocoo.org/en/latest/">官网</a></li><li>  Korean：一个韩语词态库。<a href="https://korean.readthedocs.org/en/latest/">readthedocs</a></li></ul><h3 id="URL处理"><a href="#URL处理" class="headerlink" title="URL处理"></a>URL处理</h3><p>解析URLs的库</p><ul><li>  furl：一个让处理 URL 更简单小型 Python 库。<a href="https://github.com/gruns/furl">Github</a></li><li>  purl：一个简单的，不可变的URL类，具有简洁的 API 来进行询问和处理。<a href="https://github.com/codeinthehole/purl">Github</a></li><li>  pyshorteners：一个纯 Python URL 缩短库。<a href="https://github.com/ellisonleao/pyshorteners">Github</a></li><li>  shorturl：生成短小 URL 和类似 bit.ly 短链的Python 实现。<a href="https://github.com/Alir3z4/python-shorturl">Github</a></li><li>  webargs：一个解析 HTTP 请求参数的库，内置对流行 web 框架的支持，包括 Flask, Django, Bottle, Tornado和 Pyramid。<a href="https://github.com/sloria/webargs">Github</a></li></ul><h3 id="HTML处理"><a href="#HTML处理" class="headerlink" title="HTML处理"></a>HTML处理</h3><p>处理 HTML和XML的库。</p><ul><li>  BeautifulSoup：以 Python 风格的方式来对 HTML 或 XML 进行迭代，搜索和修改。<a href="http://www.crummy.com/software/BeautifulSoup/bs4/doc/">官网</a></li><li>  bleach：一个基于白名单的 HTML 清理和文本链接库。<a href="http://bleach.readthedocs.org/en/latest/">readthedocs</a></li><li>  cssutils：一个 Python 的 CSS 库。<a href="https://pypi.python.org/pypi/cssutils/">python.org</a></li><li>  html5lib：一个兼容标准的 HTML 文档和片段解析及序列化库。<a href="https://github.com/html5lib/html5lib-python">Github</a></li><li>  lxml：一个非常快速，简单易用，功能齐全的库，用来处理 HTML 和 XML。<a href="http://lxml.de/">官网</a></li><li>  MarkupSafe：为Python 实现 XML/HTML/XHTML 标记安全字符串。<a href="https://github.com/pallets/markupsafe">Github</a></li><li>  pyquery：一个解析 HTML 的库，类似 jQuery。<a href="https://github.com/gawel/pyquery">Github</a></li><li>  untangle：将XML文档转换为Python对象，使其可以方便的访问。<a href="https://github.com/stchris/untangle">Github</a></li><li>  xhtml2pdf：HTML/CSS 转 PDF 工具。<a href="https://github.com/xhtml2pdf/xhtml2pdf">Github</a></li><li>  xmltodict：像处理 JSON 一样处理 XML。<a href="https://github.com/martinblech/xmltodict">Github</a></li></ul><p>爬取网络站点的库</p><ul><li>  Scrapy：一个快速高级的屏幕爬取及网页采集框架。<a href="http://scrapy.org/">官网</a></li><li>  cola：一个分布式爬虫框架。<a href="https://github.com/chineking/cola">Github</a></li><li>  Demiurge：基于PyQuery 的爬虫微型框架。<a href="https://github.com/matiasb/demiurge">Github</a></li><li>  feedparser：通用 feed 解析器。<a href="http://pythonhosted.org/feedparser/">官网</a></li><li>  Grab：站点爬取框架。<a href="http://grablib.org/">官网</a></li><li>  MechanicalSoup：用于自动和网络站点交互的 Python 库。<a href="https://github.com/hickford/MechanicalSoup">Github</a></li><li>  portia：Scrapy 可视化爬取。<a href="https://github.com/scrapinghub/portia">Github</a></li><li>  pyspider：一个强大的爬虫系统。<a href="https://github.com/binux/pyspider">Github</a></li><li>  RoboBrowser：一个简单的，Python 风格的库，用来浏览网站，而不需要一个独立安装的浏览器。<a href="https://github.com/jmcarp/robobrowser">Github</a></li></ul><h3 id="网页内容提取"><a href="#网页内容提取" class="headerlink" title="网页内容提取"></a>网页内容提取</h3><p>用于进行网页内容提取的库。</p><ul><li>  Haul：一个可以扩展的图像爬取工具。<a href="https://github.com/vinta/Haul">Github</a></li><li>  html2text：将 HTML 转换为 Markdown 格式文本<a href="https://github.com/Alir3z4/html2text">Github</a></li><li>  lassie：人性化的网页内容检索库。<a href="https://github.com/michaelhelmick/lassie">Github</a></li><li>  micawber：一个小型网页内容提取库，用来从 URLs 提取富内容。<a href="https://github.com/coleifer/micawber">Github</a></li><li>  <a href="http://hao.jobbole.com/python-newspaper/">newspaper</a>：使用 Python 进行新闻提取，文章提取以及内容策展。<a href="https://github.com/codelucas/newspaper">Github</a></li><li>  opengraph：一个用来解析开放内容协议(Open Graph Protocol)的 Python模块。<a href="https://github.com/erikriver/opengraph">Github</a></li><li>  <a href="http://hao.jobbole.com/python-goose/">python-goose</a>：HTML内容/文章提取器。<a href="https://github.com/grangier/python-goose">Github</a></li><li>  python-readability：arc90 公司 readability 工具的 Python 高速端口。<a href="https://github.com/buriy/python-readability">Github</a></li><li>  sanitize：为杂乱的数据世界带来调理性。<a href="https://github.com/Alir3z4/python-sanitize">Github</a></li><li>  sumy：一个为文本文件和 HTML 页面进行自动摘要的模块。<a href="https://github.com/miso-belica/sumy">Github</a></li><li>  textract：从任何格式的文档中提取文本，Word，PowerPoint，PDFs 等等。<a href="https://github.com/deanmalmgren/textract">Github</a></li></ul><h3 id="表单"><a href="#表单" class="headerlink" title="表单"></a>表单</h3><p>进行表单操作的库。</p><ul><li>  Deform：Python HTML 表单生成库，受到了 formish 表单生成库的启发。<a href="http://deform.readthedocs.org/en/latest/">readthedocs</a></li><li>  django-bootstrap3：集成了 Bootstrap 3 的 Django。<a href="https://github.com/dyve/django-bootstrap3">Github</a></li><li>  django-crispy-forms：一个 Django 应用，他可以让你以一种非常优雅且 DRY（Don’t repeat yourself） 的方式来创建美观的表单。<a href="http://django-crispy-forms.readthedocs.org/en/latest/">readthedocs</a></li><li>  django-remote-forms：一个平台独立的 Django 表单序列化工具。<a href="https://github.com/WiserTogether/django-remote-forms">Github</a></li><li>  WTForms：一个灵活的表单验证和呈现库。<a href="http://wtforms.readthedocs.org/en/latest/">readthedocs</a></li><li>  WTForms-JSON：一个 WTForms 扩展，用来处理 JSON 数据。<a href="http://wtforms-json.readthedocs.org/en/latest/">readthedocs</a></li></ul><h3 id="数据验证"><a href="#数据验证" class="headerlink" title="数据验证"></a>数据验证</h3><p>数据验证库。多用于表单验证。</p><ul><li>  Cerberus：A mappings-validator with a variety of rules, normalization-features and simple customization that uses a pythonic schema-definition.<a href="http://docs.python-cerberus.org/en/stable/">官网</a></li><li>  colander：一个用于对从 XML, JSON，HTML 表单获取的数据或其他同样简单的序列化数据进行验证和反序列化的系统。<a href="http://docs.pylonsproject.org/projects/colander/en/latest/">官网</a></li><li>  kmatch：一种用于匹配/验证/筛选 Python 字典的语言。<a href="https://github.com/ambitioninc/kmatch">Github</a></li><li>  schema：一个用于对 Python 数据结构进行验证的库。<a href="https://github.com/keleshev/schema">Github</a></li><li>  Schematics：数据结构验证。<a href="https://github.com/schematics/schematics">Github</a></li><li>  valideer：轻量级可扩展的数据验证和适配库。<a href="https://github.com/podio/valideer">Github</a></li><li>  voluptuous：一个 Python 数据验证库。主要是为了验证传入 Python的 JSON，YAML 等数据。<a href="https://github.com/alecthomas/voluptuous">Github</a></li></ul><h3 id="反垃圾技术"><a href="#反垃圾技术" class="headerlink" title="反垃圾技术"></a>反垃圾技术</h3><p>帮助你和电子垃圾进行战斗的库。</p><ul><li>  django-simple-captcha：一个简单、高度可定制的Django 应用，可以为任何Django表单添加验证码。<a href="https://github.com/mbi/django-simple-captcha">Github</a></li><li>  django-simple-spam-blocker：一个用于Django的简单的电子垃圾屏蔽工具。<a href="https://github.com/moqada/django-simple-spam-blocker">Github</a></li></ul><h3 id="标记"><a href="#标记" class="headerlink" title="标记"></a>标记</h3><p>用来进行标记的库。</p><ul><li>  django-taggit：简单的 Django 标记工具。<a href="https://github.com/alex/django-taggit">Github</a></li></ul><h3 id="管理面板"><a href="#管理面板" class="headerlink" title="管理面板"></a>管理面板</h3><p>管理界面库。</p><ul><li>  Ajenti：一个你的服务器值得拥有的管理面板。<a href="https://github.com/Eugeny/ajenti">Github</a></li><li>  django-suit：Django 管理界面的一个替代品 (仅对于非商业用途是免费的)。<a href="http://djangosuit.com/">官网</a></li><li>  django-xadmin：Django admin 的一个替代品，具有很多不错的功能。<a href="https://github.com/sshwsfc/django-xadmin">Github</a></li><li>  flask-admin：一个用于 Flask 的简单可扩展的管理界面框架。<a href="https://github.com/flask-admin/flask-admin">Github</a></li><li>  flower：一个对 Celery 集群进行实时监控和提供 web 管理界面的工具。<a href="https://github.com/mher/flower">Github</a></li><li>  Grappelli：Django 管理界面的一个漂亮的皮肤。<a href="http://grappelliproject.com/">官网</a></li><li>  Wooey：一个 Django 应用，可以为 Python 脚本创建 web 用户界面。<a href="https://github.com/wooey/wooey">Github</a></li></ul><h3 id="静态站点生成器"><a href="#静态站点生成器" class="headerlink" title="静态站点生成器"></a>静态站点生成器</h3><p>静态站点生成器是一个软件，它把文本和模板作为输入，然后输出HTML文件。</p><ul><li>  Pelican：使用 Markdown 或 ReST 来处理内容， Jinja 2 来制作主题。支持 DVCS, Disqus.。AGPL 许可。<a href="http://blog.getpelican.com/">官网</a></li><li>  Cactus：为设计师设计的静态站点生成器。<a href="https://github.com/koenbok/Cactus/">Github</a></li><li>  Hyde：基于 Jinja2 的静态站点生成器。<a href="http://hyde.github.io/">Github</a></li><li>  Nikola：一个静态网站和博客生成器。<a href="https://www.getnikola.com/">官网</a></li><li>  Tinkerer：Tinkerer 是一个博客引擎/静态站点生成器，由Sphinx驱动。<a href="http://tinkerer.me/">官网</a></li><li>  Lektor：一个简单易用的静态 CMS 和博客引擎。<a href="https://www.getlektor.com/">官网</a></li></ul><h3 id="进程"><a href="#进程" class="headerlink" title="进程"></a>进程</h3><p>操作系统进程启动及通信库。</p><ul><li>  envoy：比 Python <a href="https://docs.python.org/2/library/subprocess.html">subprocess</a> 模块更人性化。<a href="https://github.com/kennethreitz/envoy">Github</a></li><li>  sarge：另一 种 subprocess 模块的封装。<a href="http://sarge.readthedocs.org/en/latest/">readthedocs</a></li><li>  sh：一个完备的 subprocess 替代库。<a href="https://github.com/amoffat/sh">Github</a></li></ul><h3 id="并发和并行"><a href="#并发和并行" class="headerlink" title="并发和并行"></a>并发和并行</h3><p>用以进行并发和并行操作的库。</p><ul><li>  multiprocessing：(Python 标准库) 基于进程的“线程”接口。<a href="https://docs.python.org/2/library/multiprocessing.html">python.org</a></li><li>  threading：(Python 标准库)更高层的线程接口。<a href="https://docs.python.org/2/library/threading.html">python.org</a></li><li>  eventlet：支持 WSGI 的异步框架。<a href="http://eventlet.net/">官网</a></li><li>  gevent：一个基于协程的 Python 网络库，使用<a href="https://github.com/python-greenlet/greenlet">greenlet</a>。<a href="http://www.gevent.org/">官网</a></li><li>  Tomorrow：用于产生异步代码的神奇的装饰器语法实现。<a href="https://github.com/madisonmay/Tomorrow">Github</a></li><li>  uvloop：在libuv之上超快速实现asyncio事件循环。<a href="https://github.com/MagicStack/uvloop">Github</a></li></ul><h3 id="网络"><a href="#网络" class="headerlink" title="网络"></a>网络</h3><p>用于网络编程的库。</p><ul><li>  asyncio：(Python 标准库) 异步 I/O, 事件循环, 协程以及任务。<a href="https://docs.python.org/3/library/asyncio.html">python.org</a></li><li>  <a href="http://hao.jobbole.com/twisted/">Twisted</a>：一个事件驱动的网络引擎。<a href="https://twistedmatrix.com/trac/">官网</a></li><li>  pulsar：事件驱动的并发框架。<a href="https://github.com/quantmind/pulsar">Github</a></li><li>  diesel：基于Greenlet 的事件 I/O 框架。<a href="https://github.com/dieseldev/diesel">Github</a></li><li>  pyzmq：一个 ZeroMQ 消息库的 Python 封装。<a href="http://zeromq.github.io/pyzmq/">Github</a></li><li>  txZMQ：基于 Twisted 的 ZeroMQ 消息库的 Python 封装。<a href="https://github.com/smira/txZMQ">Github</a></li></ul><h3 id="WebSocket"><a href="#WebSocket" class="headerlink" title="WebSocket"></a>WebSocket</h3><p>帮助使用WebSocket的库。</p><ul><li>  AutobahnPython：给 Python 、使用的 WebSocket &amp; WAMP 基于 Twisted 和 <a href="https://docs.python.org/3/library/asyncio.html">asyncio</a>。<a href="https://github.com/crossbario/autobahn-python">Github</a></li><li>  Crossbar：开源统一应用路由(Websocket &amp; WAMP for Python on Autobahn).<a href="https://github.com/crossbario/crossbar/">Github</a></li><li>  django-socketio：给 Django 用的 WebSockets。<a href="https://github.com/stephenmcd/django-socketio">Github</a></li><li>  WebSocket-for-Python：为Python2/3 以及 PyPy 编写的 WebSocket 客户端和服务器库。<a href="https://github.com/Lawouach/WebSocket-for-Python">Github</a></li></ul><h3 id="WSGI-服务器"><a href="#WSGI-服务器" class="headerlink" title="WSGI 服务器"></a>WSGI 服务器</h3><p>兼容 WSGI 的 web 服务器</p><ul><li>  gunicorn：Pre-forked, 部分是由 C 语言编写的。<a href="https://pypi.python.org/pypi/gunicorn">python.org</a></li><li>  uwsgi：uwsgi 项目的目的是开发一组全栈工具，用来建立托管服务， 由 C 语言编写。<a href="https://uwsgi-docs.readthedocs.org/en/latest/">readthedocs</a></li><li>  <a href="http://hao.jobbole.com/bjoern/">bjoern</a>：异步，非常快速，由 C 语言编写。<a href="https://pypi.python.org/pypi/bjoern">python.org</a></li><li>  fapws3：异步 (仅对于网络端)，由 C 语言编写。<a href="http://www.fapws.org/">官网</a></li><li>  meinheld：异步，部分是由 C 语言编写的。<a href="https://pypi.python.org/pypi/meinheld">python.org</a></li><li>  netius：异步，非常快速。<a href="https://github.com/hivesolutions/netius">Github</a></li><li>  paste：多线程，稳定，久经考验。<a href="http://pythonpaste.org/">官网</a></li><li>  rocket：多线程。<a href="https://pypi.python.org/pypi/rocket">python.org</a></li><li>  waitress：多线程, 是它驱动着 Pyramid 框架。<a href="https://waitress.readthedocs.org/en/latest/">readthedocs</a></li><li>  Werkzeug：一个 WSGI 工具库，驱动着 Flask ，而且可以很方便大嵌入到你的项目中去。<a href="http://werkzeug.pocoo.org/">官网</a></li></ul><h3 id="RPC-服务器"><a href="#RPC-服务器" class="headerlink" title="RPC 服务器"></a>RPC 服务器</h3><p>兼容 RPC 的服务器。</p><ul><li>  SimpleJSONRPCServer：这个库是 JSON-RPC 规范的一个实现。<a href="https://github.com/joshmarshall/jsonrpclib/">Github</a></li><li>  SimpleXMLRPCServer：(Python 标准库) 简单的 XML-RPC 服务器实现，单线程。<a href="https://docs.python.org/2/library/simplexmlrpcserver.html">python.org</a></li><li>  zeroRPC：zerorpc 是一个灵活的 RPC 实现，基于 ZeroMQ 和 MessagePack。<a href="https://github.com/0rpc/zerorpc-python">Github</a></li></ul><h3 id="密码学"><a href="#密码学" class="headerlink" title="密码学"></a>密码学</h3><ul><li>  cryptography：这个软件包意在提供密码学基本内容和方法提供给 Python 开发者。<a href="https://cryptography.io/en/latest/">官网</a></li><li>  hashids：在 Python 中实现 <a href="http://hashids.org/">hashids</a> 。<a href="https://github.com/davidaurelio/hashids-python">Github</a></li><li>  Paramiko：SSHv2 协议的 Python (2.6+, 3.3+) ，提供客户端和服务端的功能。<a href="http://www.paramiko.org/">官网</a></li><li>  Passlib：安全密码存储／哈希库，<a href="https://pythonhosted.org/passlib/">官网</a></li><li>  PyCrypto：Python 密码学工具箱。<a href="https://www.dlitz.net/software/pycrypto/">官网</a></li><li>  PyNacl：网络和密码学(NaCl) 库的 Python 绑定。<a href="https://github.com/pyca/pynacl">Github</a></li></ul><h3 id="图形用户界面"><a href="#图形用户界面" class="headerlink" title="图形用户界面"></a>图形用户界面</h3><p>用来创建图形用户界面程序的库。</p><ul><li>  curses：内建的 <a href="http://www.gnu.org/software/ncurses/">ncurses</a> 封装，用来创建终端图形用户界面。<a href="https://docs.python.org/2/library/curses.html#module-curses">python.org</a></li><li>  enaml：使用类似 QML 的Declaratic语法来创建美观的用户界面。<a href="https://github.com/nucleic/enaml">Github</a></li><li>  <a href="http://hao.jobbole.com/kivy/">kivy</a>：一个用来创建自然用户交互（NUI）应用程序的库，可以运行在 Windows, Linux, Mac OS X, Android 以及 iOS平台上。<a href="https://kivy.org/">官网</a></li><li>  pyglet：一个Python 的跨平台窗口及多媒体库。<a href="https://bitbucket.org/pyglet/pyglet/wiki/Home">官网</a></li><li>  PyQt：跨平台用户界面框架 <a href="http://www.qt.io/">Qt</a> 的 Python 绑定 ，支持Qt v4 和 Qt v5。<a href="https://riverbankcomputing.com/software/pyqt/intro">官网</a></li><li>  PySide：P跨平台用户界面框架 <a href="http://www.qt.io/">Qt</a> 的 Python 绑定 ，支持Qt v4。<a href="https://wiki.qt.io/PySide">官网</a></li><li>  Tkinter：Tkinter 是 Python GUI 的一个事实标准库。<a href="https://wiki.python.org/moin/TkInter">python.org</a></li><li>  Toga：一个 Python 原生的, 操作系统原生的 GUI工具包。<a href="https://github.com/pybee/toga">Github</a></li><li>  urwid：一个用来创建终端 GUI 应用的库，支持组件，事件和丰富的色彩等。<a href="http://urwid.org/">官网</a></li><li>  wxPython：wxPython 是 wxWidgets C++ 类库和 Python 语言混合的产物。<a href="http://wxpython.org/">官网</a></li><li>  PyGObject：GLib/GObject/GIO/GTK+ (GTK+3) 的 Python 绑定<a href="https://wiki.gnome.org/Projects/PyGObject">官网</a></li><li>  Flexx：Flexx 是一个纯 Python 语言编写的用来创建 GUI 程序的工具集，它使用 web 技术进行界面的展示。<a href="https://github.com/zoofIO/flexx">Github</a></li></ul><h3 id="游戏开发"><a href="#游戏开发" class="headerlink" title="游戏开发"></a>游戏开发</h3><p>超赞的游戏开发库。</p><ul><li>  Cocos2d：cocos2d 是一个用来开发 2D 游戏， 示例和其他图形/交互应用的框架。基于 pyglet。<a href="http://cocos2d.org/">官网</a></li><li>  Panda3D：由迪士尼开发的 3D 游戏引擎，并由卡内基梅陇娱乐技术中心负责维护。使用C++编写, 针对 Python 进行了完全的封装。<a href="https://www.panda3d.org/">官网</a></li><li>  Pygame：Pygame 是一组 Python 模块，用来编写游戏。<a href="http://www.pygame.org/news.html">官网</a></li><li>  PyOgre：Ogre 3D 渲染引擎的 Python 绑定，可以用来开发游戏和仿真程序等任何 3D 应用。<a href="http://www.ogre3d.org/tikiwiki/PyOgre">官网</a></li><li>  PyOpenGL：OpenGL 的 Python 绑定及其相关 APIs。<a href="http://pyopengl.sourceforge.net/">官网</a></li><li>  PySDL2：SDL2 库的封装，基于 ctypes。<a href="http://pysdl2.readthedocs.org/en/latest/">官网</a></li><li>  RenPy：一个视觉小说（visual novel）引擎。<a href="https://www.renpy.org/">官网</a></li></ul><h3 id="日志"><a href="#日志" class="headerlink" title="日志"></a>日志</h3><p>用来生成和操作日志的库。</p><ul><li>  logging：(Python 标准库) 为 Python 提供日志功能。<a href="https://docs.python.org/2/library/logging.html">python.org</a></li><li>  logbook：Logging 库的替代品。<a href="http://pythonhosted.org/Logbook/">官网</a></li><li>  Eliot：为复杂的和分布式系统创建日志。<a href="https://eliot.readthedocs.org/en/latest/">readthedocs</a></li><li>  Raven：Sentry的 Python 客户端。<a href="http://raven.readthedocs.org/en/latest/">readthedocs</a></li><li>  Sentry：实时记录和收集日志的服务器。<a href="https://pypi.python.org/pypi/sentry">python.org</a></li></ul><h3 id="Testing"><a href="#Testing" class="headerlink" title="Testing"></a>Testing</h3><p>进行代码库测试和生成测试数据的库。</p><ul><li>  测试框架</li><li>  unittest：(Python 标准库) 单元测试框架。<a href="https://docs.python.org/2/library/unittest.html">python.org</a></li><li>  nose：nose 扩展了 unittest 的功能。<a href="https://nose.readthedocs.org/en/latest/">readthedocs</a></li><li>  contexts：一个 Python 3.3+ 的 BDD 框架。受到C# – Machine.Specifications的启发。<a href="https://github.com/benjamin-hodgson/Contexts">Github</a></li><li>  hypothesis：Hypothesis 是一个基于先进的 Quickcheck 风格特性的测试库。<a href="https://github.com/DRMacIver/hypothesis">Github</a></li><li>  mamba：Python 的终极测试工具， 拥护BDD。<a href="http://nestorsalceda.github.io/mamba/">Github</a></li><li>  PyAutoGUI：PyAutoGUI 是一个人性化的跨平台 GUI 自动测试模块。<a href="https://github.com/asweigart/pyautogui">Github</a></li><li>  pyshould：Should 风格的断言，基于 <a href="https://github.com/hamcrest/PyHamcrest">PyHamcrest</a>。<a href="https://github.com/drslump/pyshould">Github</a></li><li>  pytest：一个成熟的全功能 Python 测试工具。<a href="http://pytest.org/latest/">官网</a></li><li>  green：干净，多彩的测试工具。<a href="https://github.com/CleanCut/green">Github</a></li><li>  pyvows：BDD 风格的测试工具，受Vows.js的启发。<a href="http://heynemann.github.io/pyvows/">Github</a>-</li><li>  Robot Framework：一个通用的自动化测试框架。<a href="https://github.com/robotframework/robotframework">Github</a></li><li>  Web 测试</li><li>  Selenium：<a href="http://www.seleniumhq.org/">Selenium</a> WebDriver 的 Python 绑定。<a href="https://pypi.python.org/pypi/selenium">python.org</a></li><li>  locust：使用 Python 编写的，可扩展的用户加载测试工具。<a href="https://github.com/locustio/locust">Github</a></li><li>  sixpack：一个和语言无关的 A/B 测试框架。<a href="https://github.com/seatgeek/sixpack">Github</a></li><li>  splinter：开源的 web 应用测试工具。<a href="https://splinter.readthedocs.org/en/latest/">官网</a></li><li>  Mock测试</li><li>  mock：(Python 标准库) 一个用于伪造测试的库。<a href="https://docs.python.org/3/library/unittest.mock.html">python.org</a></li><li>  doublex：Python 的一个功能强大的 doubles 测试框架。<a href="https://pypi.python.org/pypi/doublex">python.org</a></li><li>  freezegun：通过伪造日期模块来生成不同的时间。<a href="https://github.com/spulec/freezegun">Github</a></li><li>  httmock：针对 Python 2.6+ 和 3.2+ 生成 伪造请求的库。<a href="https://github.com/patrys/httmock">Github</a></li><li>  httpretty：Python 的 HTTP 请求 mock 工具。<a href="http://falcao.it/HTTPretty/">官网</a></li><li>  responses：伪造 Python 中的 requests 库的一个通用库。<a href="https://github.com/getsentry/responses">Github</a></li><li>  VCR.py：在你的测试中记录和重放 HTTP 交互。<a href="https://github.com/kevin1024/vcrpy">Github</a></li><li>  对象工厂</li><li>  factoryboy：一个 Python 用的测试固件 (test fixtures) 替代库。<a href="https://github.com/rbarrois/factoryboy">Github</a></li><li>  mixer：另外一个测试固件 (test fixtures) 替代库，支持 Django, Flask, SQLAlchemy, Peewee 等。<a href="https://github.com/klen/mixer">Github</a></li><li>  modelmommy：为 Django 测试创建随机固件<a href="https://github.com/vandersonmota/modelmommy">Github</a></li><li>  代码覆盖率</li><li>  coverage：代码覆盖率测量。<a href="https://pypi.python.org/pypi/coverage">python.org</a></li><li>  伪数据</li><li>  faker：一个 Python 库，用来生成伪数据。<a href="http://www.joke2k.net/faker/">官网</a></li><li>  fake2db：伪数据库生成器。<a href="https://github.com/emirozer/fake2db">Github</a></li><li>  radar：生成随机的日期/时间。<a href="https://pypi.python.org/pypi/radar">python.org</a></li><li>  错误处理</li><li>  FuckIt.py：FuckIt.py 使用最先进的技术来保证你的 Python 代码无论对错都能继续运行。<a href="https://github.com/ajalt/fuckitpy">Github</a></li></ul><h3 id="代码分析和Lint工具"><a href="#代码分析和Lint工具" class="headerlink" title="代码分析和Lint工具"></a>代码分析和Lint工具</h3><p>进行代码分析，解析和操作代码库的库和工具。</p><ul><li>  代码分析</li><li>  coala：语言独立和易于扩展的代码分析应用程序。<a href="http://coala-analyzer.org/">官网</a></li><li>  code2flow：把你的 Python 和 JavaScript 代码转换为流程图。<a href="https://github.com/scottrogowski/code2flow">Github</a></li><li>  pycallgraph：这个库可以把你的Python 应用的流程(调用图)进行可视化。<a href="https://github.com/gak/pycallgraph">Github</a></li><li>  pysonar2：Python 类型推断和检索工具。<a href="https://github.com/yinwang0/pysonar2">Github</a></li><li>  Lint工具</li><li>  Flake8：模块化源码检查工具: pep8, pyflakes 以及 co。<a href="https://pypi.python.org/pypi/flake8">python.org</a></li><li>  Pylint：一个完全可定制的源码分析器。<a href="https://www.pylint.org/">官网</a></li><li>  pylama：Python 和 JavaScript 的代码审查工具。<a href="https://pylama.readthedocs.org/en/latest/">官网</a></li><li>  代码格式化</li><li>  autopep8：自动格式化 Python 代码，以使其符合 PEP8 规范。<a href="https://github.com/hhatto/autopep8">Github</a></li></ul><h3 id="Debugging-Tools"><a href="#Debugging-Tools" class="headerlink" title="Debugging Tools"></a>Debugging Tools</h3><p>用来进行代码调试的库。</p><ul><li>  调试器</li><li>  ipdb：IPython 启用的 <a href="https://docs.python.org/2/library/pdb.html">pdb</a>。<a href="https://pypi.python.org/pypi/ipdb">python.org</a></li><li>  pudb：全屏，基于控制台的 Python 调试器。<a href="https://pypi.python.org/pypi/pudb">python.org</a></li><li>  pyringe：可以在 Python 进程中附加和注入代码的调试器。<a href="https://github.com/google/pyringe">Github</a></li><li>  wdb：一个奇异的 web 调试器，通过 WebSockets 工作。<a href="https://github.com/Kozea/wdb">Github</a></li><li>  winpdb：一个具有图形用户界面的 Python 调试器，可以进行远程调试，基于 rpdb2。<a href="http://winpdb.org/">官网</a></li><li>  django-debug-toolbar：为 Django 显示各种调试信息。<a href="https://github.com/django-debug-toolbar/django-debug-toolbar">Github</a></li><li>  django-devserver：一个 Django 运行服务器的替代品。<a href="https://github.com/dcramer/django-devserver">Github</a></li><li>  flask-debugtoolbar：django-debug-toolbar 的 flask 版。<a href="https://github.com/mgood/flask-debugtoolbar">Github</a></li><li>  性能分析器</li><li>  lineprofiler：逐行性能分析。<a href="https://github.com/rkern/lineprofiler">Github</a></li><li>  <a href="http://hao.jobbole.com/memory_profiler/">Memory Profiler</a>：监控 Python 代码的内存使用。<a href="http://pypi.python.org/pypi/memory_profiler">官网</a>、<a href="https://github.com/fabianp/memoryprofiler">内存</a></li><li>  profiling：一个交互式 Python 性能分析工具。<a href="https://github.com/what-studio/profiling">Github</a></li><li>  其他</li><li>  pyelftools：解析和分析 ELF 文件以及 DWARF 调试信息。<a href="https://github.com/eliben/pyelftools">Github</a></li><li>  python-statsd：<a href="https://github.com/etsy/statsd/">statsd</a> 服务器的 Python 客户端。<a href="https://github.com/WoLpH/python-statsd">Github</a></li></ul><h3 id="Science-and-Data-Analysis"><a href="#Science-and-Data-Analysis" class="headerlink" title="Science and Data Analysis"></a>Science and Data Analysis</h3><p>用来进行科学计算和数据分析的库。</p><ul><li>  astropy：一个天文学 Python 库。<a href="http://www.astropy.org/">官网</a></li><li>  <a href="http://hao.jobbole.com/bcbio-nextgen/">bcbio-nextgen</a>：这个工具箱为全自动高通量测序分析提供符合最佳实践的处理流程。<a href="https://github.com/chapmanb/bcbio-nextgen">Github</a></li><li>  bccb：生物分析相关代码集合<a href="https://github.com/chapmanb/bcbb">Github</a></li><li>  Biopython：Biopython 是一组可以免费使用的用来进行生物计算的工具。<a href="http://biopython.org/wiki/MainPage">官网</a></li><li>  <a href="http://hao.jobbole.com/blaze/">blaze</a>：NumPy 和 Pandas 的大数据接口。<a href="http://blaze.readthedocs.org/en/latest/index.html">官网</a></li><li>  <a href="http://hao.jobbole.com/cclib/">cclib</a>：一个用来解析和解释计算化学软件包输出结果的库。<a href="http://cclib.github.io/">官网</a></li><li>  NetworkX：一个为复杂网络设计的高性能软件。<a href="https://networkx.github.io/">Github</a></li><li>  Neupy：执行和测试各种不同的人工神经网络算法。<a href="http://neupy.com/pages/home.html">官网</a></li><li>  Numba：Python JIT (just in time) 编译器，针对科学用的 Python ，由Cython 和 NumPy 的开发者开发。<a href="http://numba.pydata.org/">官网</a></li><li>  <a href="http://hao.jobbole.com/numpy/">NumPy</a>：使用 Python 进行科学计算的基础包。<a href="http://www.numpy.org/">官网</a></li><li>  Open Babel：一个化学工具箱，用来描述多种化学数据。<a href="http://openbabel.org/wiki/MainPage">官网</a></li><li>  <a href="http://hao.jobbole.com/open-mining/">Open Mining</a>：使用 Python 挖掘商业情报 (BI) (Pandas web 接口)。<a href="https://github.com/mining/mining">Github</a></li><li>  <a href="http://hao.jobbole.com/orange/">orange</a>：通过可视化编程或 Python 脚本进行数据挖掘，数据可视化，分析和机器学习。<a href="http://orange.biolab.si/">官网</a></li><li>  Pandas：提供高性能，易用的数据结构和数据分析工具。<a href="http://pandas.pydata.org/">官网</a></li><li>  PyDy：PyDy 是 Python Dynamics 的缩写，用来为动力学运动建模工作流程提供帮助， 基于 NumPy, SciPy, IPython 和 matplotlib。<a href="http://www.pydy.org/">官网</a></li><li>  <a href="http://hao.jobbole.com/pymc/">PyMC</a>：马尔科夫链蒙特卡洛采样工具。<a href="https://github.com/pymc-devs/pymc3">Github</a></li><li>  RDKit：化学信息学和机器学习软件。<a href="http://www.rdkit.org/">官网</a></li><li>  <a href="http://hao.jobbole.com/scipy/">SciPy</a>：由一些基于 Python ，用于数学，科学和工程的开源软件构成的生态系统。<a href="http://www.scipy.org/">官网</a></li><li>  <a href="http://hao.jobbole.com/statsmodels/">statsmodels</a>：统计建模和计量经济学。<a href="https://github.com/statsmodels/statsmodels">Github</a></li><li>  SymPy：一个用于符号数学的 Python 库。<a href="https://github.com/sympy/sympy">Github</a></li><li>  zipline：一个 Python 算法交易库。<a href="https://github.com/quantopian/zipline">Github</a></li><li>  <a href="http://hao.jobbole.com/bayesian-belief-networks/">Bayesian-belief-networks</a>：优雅的贝叶斯信念网络框架。<a href="https://github.com/eBay/bayesian-belief-networks">Github</a></li></ul><h3 id="数据可视化"><a href="#数据可视化" class="headerlink" title="数据可视化"></a>数据可视化</h3><p>进行数据可视化的库。 参见: <a href="https://github.com/sorrycc/awesome-javascript#data-visualization">awesome-javascript</a>。</p><ul><li>  matplotlib：一个 Python 2D 绘图库。<a href="http://matplotlib.org/">官网</a></li><li>  bokeh：用 Python 进行交互式 web 绘图。<a href="https://github.com/bokeh/bokeh">Github</a></li><li>  ggplot：ggplot2 给 R 提供的 API 的 Python 版本。<a href="https://github.com/yhat/ggplot">Github</a></li><li>  plotly：协同 Python 和 matplotlib 工作的 web 绘图库。<a href="https://plot.ly/python/">官网</a></li><li>  pygal：一个 Python SVG 图表创建工具。<a href="http://www.pygal.org/en/latest/">官网</a></li><li>  pygraphviz：Graphviz 的 Python 接口。<a href="https://pypi.python.org/pypi/pygraphviz">python.org</a></li><li>  PyQtGraph：交互式实时2D/3D/图像绘制及科学/工程学组件。<a href="http://www.pyqtgraph.org/">官网</a></li><li>  SnakeViz：一个基于浏览器的 Python’s cProfile 模块输出结果查看工具。<a href="http://jiffyclub.github.io/snakeviz/">Github</a></li><li>  vincent：把 Python 转换为 Vega 语法的转换工具。<a href="https://github.com/wrobstory/vincent">Github</a></li><li>  VisPy：基于 OpenGL 的高性能科学可视化工具。<a href="http://vispy.org/">官网</a></li></ul><h3 id="计算机视觉"><a href="#计算机视觉" class="headerlink" title="计算机视觉"></a>计算机视觉</h3><p>计算机视觉库。</p><ul><li>  OpenCV：开源计算机视觉库。<a href="http://opencv.org/">官网</a></li><li>  pyocr：Tesseract和Cuneiform的包装库。<a href="https://github.com/jflesch/pyocr">Github</a></li><li>  pytesseract：<a href="https://github.com/tesseract-ocr">Google Tesseract OCR</a>的另一包装库。<a href="https://github.com/madmaze/pytesseract">Github</a></li><li>  <a href="http://hao.jobbole.com/simplecv/">SimpleCV</a>：一个用来创建计算机视觉应用的开源框架。<a href="http://simplecv.org/">官网</a></li></ul><h3 id="机器学习"><a href="#机器学习" class="headerlink" title="机器学习"></a>机器学习</h3><p>机器学习库。 参见: <a href="https://github.com/josephmisiti/awesome-machine-learning#python">awesome-machine-learning</a>.</p><ul><li>  Crab：灵活、快速的推荐引擎。<a href="https://github.com/muricoca/crab">Github</a></li><li>  gensim：人性化的话题建模库。<a href="https://github.com/piskvorky/gensim">Github</a></li><li>  hebel：GPU 加速的深度学习库。<a href="https://github.com/hannes-brt/hebel">Github</a></li><li>  NuPIC：智能计算 Numenta 平台。<a href="https://github.com/numenta/nupic">Github</a></li><li>  pattern：Python 网络挖掘模块。<a href="https://github.com/clips/pattern">Github</a></li><li>  <a href="http://hao.jobbole.com/pybrain/">PyBrain</a>：另一个 Python 机器学习库。<a href="https://github.com/pybrain/pybrain">Github</a></li><li>  <a href="http://hao.jobbole.com/pylearn2/">Pylearn2</a>：一个基于 <a href="https://github.com/Theano/Theano">Theano</a> 的机器学习库。<a href="https://github.com/lisa-lab/pylearn2">Github</a></li><li>  <a href="http://hao.jobbole.com/python-recsys/">python-recsys</a>：一个用来实现推荐系统的 Python 库。<a href="https://github.com/ocelma/python-recsys">Github</a></li><li>  scikit-learn：基于 SciPy 构建的机器学习 Python 模块。<a href="http://scikit-learn.org/">官网</a></li><li>  pydeep：Python 深度学习库。<a href="https://github.com/andersbll/deeppy">Github</a></li><li>  vowpalporpoise：轻量级 <a href="https://github.com/JohnLangford/vowpalwabbit/">Vowpal Wabbit</a> 的 Python 封装。<a href="https://github.com/josephreisinger/vowpalporpoise">Github</a></li><li>  skflow：一个 <a href="https://github.com/tensorflow/tensorflow">TensorFlow</a> 的简化接口(模仿 scikit-learn)。<a href="https://github.com/tensorflow/skflow">Github</a></li></ul><h3 id="MapReduce"><a href="#MapReduce" class="headerlink" title="MapReduce"></a>MapReduce</h3><p>MapReduce 框架和库。</p><ul><li>  <a href="http://hao.jobbole.com/dpark/">dpark</a>：Spark 的 Python 克隆版，一个类似 MapReduce 的框架。<a href="https://github.com/douban/dpark">Github</a></li><li>  dumbo：这个 Python 模块可以让人轻松的编写和运行 Hadoop 程序。<a href="https://github.com/klbostee/dumbo">Github</a></li><li>  luigi：这个模块帮你构建批处理作业的复杂流水线。<a href="https://github.com/spotify/luigi">Github</a></li><li>  mrjob：在 Hadoop 或 Amazon Web Services 上运行 MapReduce 任务。<a href="https://github.com/Yelp/mrjob">Github</a></li><li>  PySpark：Spark 的 Python API 。<a href="http://spark.apache.org/docs/latest/programming-guide.html">官网</a></li><li>  streamparse：运行针对事实数据流的 Python 代码。集成了<a href="http://storm.apache.org/">Apache Storm</a>。<a href="https://github.com/Parsely/streamparse">Github</a></li></ul><h3 id="函数式编程"><a href="#函数式编程" class="headerlink" title="函数式编程"></a>函数式编程</h3><p>使用 Python 进行函数式编程。</p><ul><li>  CyToolz：Toolz 的 Cython 实现 : 高性能函数式工具。<a href="https://github.com/pytoolz/cytoolz/">Github</a></li><li>  fn.py：在 Python 中进行函数式编程 : 实现了一些享受函数式编程缺失的功能。<a href="https://github.com/kachayev/fn.py">Github</a></li><li>  funcy：炫酷又实用的函数式工具。<a href="https://github.com/Suor/funcy">Github</a></li><li>  Toolz：一组用于迭代器，函数和字典的函数式编程工具。<a href="https://github.com/pytoolz/toolz">Github</a></li></ul><h3 id="第三方-API"><a href="#第三方-API" class="headerlink" title="第三方 API"></a>第三方 API</h3><p>用来访问第三方 API的库。 参见： <a href="https://github.com/realpython/list-of-python-api-wrappers">List of Python API Wrappers and Libraries</a>。</p><ul><li>  apache-libcloud：一个为各种云设计的 Python 库。<a href="https://libcloud.apache.org/">官网</a></li><li>  boto：Amazon Web Services 的 Python 接口。<a href="https://github.com/boto/boto">Github</a></li><li>  django-wordpress：WordPress models and views for Django.<a href="https://github.com/sunlightlabs/django-wordpress/">Github</a></li><li>  facebook-sdk：Facebook 平台的 Python SDK.<a href="https://github.com/mobolic/facebook-sdk">Github</a></li><li>  facepy：Facepy 让和 Facebook’s Graph API 的交互变得更容易。<a href="https://github.com/jgorset/facepy">Github</a></li><li>  gmail：Gmail 的 Python 接口。<a href="https://github.com/charlierguo/gmail">Github</a></li><li>  google-api-python-client：Python 用的 Google APIs 客户端库。<a href="https://github.com/google/google-api-python-client">Github</a></li><li>  gspread：Google 电子表格的 Python API.<a href="https://github.com/burnash/gspread">Github</a></li><li>  twython：Twitter API 的封装。<a href="https://github.com/ryanmcgrath/twython">Github</a></li></ul><h3 id="DevOps-工具"><a href="#DevOps-工具" class="headerlink" title="DevOps 工具"></a>DevOps 工具</h3><p>用于 DevOps 的软件和库。</p><ul><li>  Ansible：一个非常简单的 IT 自动化平台。<a href="https://github.com/ansible/ansible">Github</a></li><li>  SaltStack：基础设施自动化和管理系统。<a href="https://github.com/saltstack/salt">Github</a></li><li>  OpenStack：用于构建私有和公有云的开源软件。<a href="http://www.openstack.org/">官网</a></li><li>  Docker Compose：快速，分离的开发环境，使用 Docker。<a href="https://docs.docker.com/compose/">官网</a></li><li>  Fabric：一个简单的，Python 风格的工具，用来进行远程执行和部署。<a href="http://www.fabfile.org/">官网</a></li><li>  cuisine：为 Fabric 提供一系列高级函数。<a href="https://github.com/sebastien/cuisine">Github</a></li><li>  Fabtools：一个用来编写超赞的 Fabric 文件的工具。<a href="https://github.com/ronnix/fabtools">Github</a></li><li>  gitapi：Git 的纯 Python API。<a href="https://bitbucket.org/haard/gitapi">官网</a></li><li>  hgapi：Mercurial 的纯 Python API。<a href="https://bitbucket.org/haard/hgapi">官网</a></li><li>  honcho：<a href="https://github.com/ddollar/foreman">Foreman</a>的 Python 克隆版，用来管理基于<a href="https://devcenter.heroku.com/articles/procfile">Procfile</a>的应用。<a href="https://github.com/nickstenning/honcho">Github</a></li><li>  pexpect：Controlling interactive programs in a pseudo-terminal like 在一个伪终端中控制交互程序，就像 GNU expect 一样。<a href="https://github.com/pexpect/pexpect">Github</a></li><li>  psutil：一个跨平台进程和系统工具模块。<a href="https://github.com/giampaolo/psutil">Github</a></li><li>  supervisor：UNIX 的进程控制系统。<a href="https://github.com/Supervisor/supervisor">Github</a></li></ul><h3 id="任务调度"><a href="#任务调度" class="headerlink" title="任务调度"></a>任务调度</h3><p>任务调度库。</p><ul><li>  APScheduler：轻巧但强大的进程内任务调度，使你可以调度函数。<a href="http://apscheduler.readthedocs.org/en/latest/">官网</a></li><li>  django-schedule：一个 Django 排程应用。<a href="https://github.com/thauber/django-schedule">Github</a></li><li>  doit：一个任务执行和构建工具。<a href="http://pydoit.org/">官网</a></li><li>  gunnery：分布式系统使用的多用途任务执行工具 ，具有 web 交互界面。<a href="https://github.com/gunnery/gunnery">Github</a></li><li>  Joblib：一组为 Python 提供轻量级作业流水线的工具。<a href="http://pythonhosted.org/joblib/index.html">官网</a></li><li>  Plan：如有神助地编写 crontab 文件。<a href="https://github.com/fengsp/plan">Github</a></li><li>  schedule：人性化的 Python 任务调度库。<a href="https://github.com/dbader/schedule">Github</a></li><li>  Spiff：使用纯 Python 实现的强大的工作流引擎。<a href="https://github.com/knipknap/SpiffWorkflow">Github</a></li><li>  TaskFlow：一个可以让你方便执行任务的 Python 库，一致并且可靠。<a href="http://docs.openstack.org/developer/taskflow/">官网</a></li></ul><h3 id="外来函数接口"><a href="#外来函数接口" class="headerlink" title="外来函数接口"></a>外来函数接口</h3><p>使用外来函数接口的库。</p><ul><li>  cffi：用来调用 C 代码的外来函数接口。<a href="https://pypi.python.org/pypi/cffi">python.org</a></li><li>  <a href="http://hao.jobbole.com/ctypes/">ctypes</a>：(Python 标准库) 用来调用 C 代码的外来函数接口。<a href="https://docs.python.org/2/library/ctypes.html">python.org</a></li><li>  PyCUDA：Nvidia CUDA API 的封装。<a href="https://mathema.tician.de/software/pycuda/">官网</a></li><li>  SWIG：简化的封装和接口生成器。<a href="http://www.swig.org/Doc1.3/Python.html">官网</a></li></ul><h3 id="高性能"><a href="#高性能" class="headerlink" title="高性能"></a>高性能</h3><p>让 Python 更快的库。</p><ul><li>  Cython：优化的 Python 静态编译器。使用类型混合使 Python 编译成 C 或 C++ 模块来获得性能的极大提升。<a href="http://cython.org/">官网</a></li><li>  PeachPy：嵌入 Python 的 x86-64 汇编器。可以被用作 Python 内联的汇编器或者是独立的汇编器，用于 Windows, Linux, OS X, Native Client 或者 Go 。<a href="https://github.com/Maratyszcza/PeachPy">Github</a></li><li>  PyPy：使用 Python 实现的 Python。解释器使用黑魔法加快 Python 运行速度且不需要加入额外的类型信息。<a href="http://pypy.org/">官网</a></li><li>  <a href="http://hao.jobbole.com/pyston-llvm-jit/">Pyston</a>：使用 LLVM 和现代 JIT 技术构建的 Python 实现，目标是为了获得很好的性能。<a href="https://github.com/dropbox/pyston">Github</a></li><li>  Stackless Python：一个强化版的 Python。<a href="https://bitbucket.org/stackless-dev/stackless/overview">官网</a></li></ul><h3 id="微软的-Windows平台"><a href="#微软的-Windows平台" class="headerlink" title="微软的 Windows平台"></a>微软的 Windows平台</h3><p>在 Windows 平台上进行 Python 编程。</p><ul><li>  Python(x,y)：面向科学应用的 Python 发行版，基于 Qt 和 Spyder。<a href="http://python-xy.github.io/">Github</a></li><li>  pythonlibs：非官方的 Windows 平台 Python 扩展二进制包。<a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/">官网</a></li><li>  PythonNet：Python 与 .NET 公共语言运行库 (CLR)的集成。<a href="https://github.com/pythonnet/pythonnet">Github</a></li><li>  PyWin32：针对 Windows 的Python 扩展。<a href="https://sourceforge.net/projects/pywin32/">官网</a></li><li>  WinPython：Windows 7/8 系统下便携式开发环境。<a href="https://winpython.github.io/">Github</a></li></ul><h3 id="网络可视化和SDN"><a href="#网络可视化和SDN" class="headerlink" title="网络可视化和SDN"></a>网络可视化和SDN</h3><p>用来进行网络可视化和SDN(软件定义网络)的工具和库。</p><ul><li>  Mininet：一款流行的网络模拟器以及用 Python 编写的 API。<a href="http://mininet.org/">官网</a></li><li>  POX：一个针对基于 Python 的软件定义网络应用（例如 OpenFlow SDN 控制器）的开源开发平台。<a href="https://github.com/noxrepo/pox">Github</a></li><li>  Pyretic：火热的 SDN 编程语言中的一员，为网络交换机和模拟器提供强大的抽象能力。<a href="http://frenetic-lang.org/pyretic/">官网</a></li><li>  SDX Platform：基于 SDN 的 IXP 实现，影响了 Mininet, POX 和 Pyretic。<a href="https://github.com/sdn-ixp/internet2award">Github</a></li></ul><h3 id="硬件"><a href="#硬件" class="headerlink" title="硬件"></a>硬件</h3><p>用来对硬件进行编程的库。</p><ul><li>  ino：操作<a href="https://www.arduino.cc/">Arduino</a>的命令行工具。<a href="http://inotool.org/">官网</a></li><li>  Pyro：Python 机器人编程库。<a href="http://pyrorobotics.com/">官网</a></li><li>  PyUserInput：跨平台的，控制鼠标和键盘的模块。<a href="https://github.com/SavinaRoja/PyUserInput">Github</a></li><li>  scapy：一个非常棒的操作数据包的库。<a href="https://github.com/secdev/scapy">Github</a></li><li>  wifi：一个 Python 库和命令行工具用来在 Linux 平台上操作WiFi。<a href="https://wifi.readthedocs.org/en/latest/">官网</a></li><li>  Pingo：Pingo 为类似Raspberry Pi，pcDuino， Intel Galileo等设备提供统一的API用以编程。<a href="http://www.pingo.io/">官网</a></li></ul><h3 id="兼容性"><a href="#兼容性" class="headerlink" title="兼容性"></a>兼容性</h3><p>帮助从 Python 2 向 Python 3迁移的库。</p><ul><li>  Python-Future：这就是 Python 2 和 Python 3 之间丢失的那个兼容性层。<a href="http://python-future.org/index.html">官网</a></li><li>  Python-Modernize：使 Python 代码更加现代化以便最终迁移到 Python 3。<a href="https://github.com/mitsuhiko/python-modernize">Github</a></li><li>  Six：Python 2 和 3 的兼容性工具。<a href="https://pypi.python.org/pypi/six">python.org</a></li></ul><h3 id="杂项"><a href="#杂项" class="headerlink" title="杂项"></a>杂项</h3><p>不属于上面任何一个类别，但是非常有用的库。</p><ul><li>  blinker：一个快速的 Python 进程内信号/事件分发系统。<a href="https://github.com/jek/blinker">Github</a></li><li>  itsdangerous：一系列辅助工具用来将可信的数据传入不可信的环境。<a href="https://github.com/pallets/itsdangerous">Github</a></li><li>  pluginbase：一个简单但是非常灵活的 Python 插件系统。<a href="https://github.com/mitsuhiko/pluginbase">Github</a></li><li>  Pychievements：一个用来创建和追踪成就的 Python 框架。<a href="https://github.com/PacketPerception/pychievements">Github</a></li><li>  <a href="http://hao.jobbole.com/tryton/">Tryton</a>：一个通用商务框架。<a href="http://www.tryton.org/">官网</a></li></ul><h3 id="算法和设计模式"><a href="#算法和设计模式" class="headerlink" title="算法和设计模式"></a>算法和设计模式</h3><p>Python 实现的算法和设计模式。</p><ul><li>  <a href="http://hao.jobbole.com/algorithms/">algorithms</a>：一个 Python 算法模块。<a href="https://github.com/nryoung/algorithms">Github</a></li><li>  python-patterns：Python 设计模式的集合。<a href="https://github.com/faif/python-patterns">Github</a></li><li>  sortedcontainers：快速，纯 Python 实现的SortedList，SortedDict 和 SortedSet 类型。<a href="http://www.grantjenks.com/docs/sortedcontainers/">官网</a></li></ul><h3 id="编辑器插件"><a href="#编辑器插件" class="headerlink" title="编辑器插件"></a>编辑器插件</h3><p>编辑器和 IDE 的插件</p><ul><li>  Emacs</li><li>  Elpy：Emacs Python 开发环境。<a href="https://github.com/jorgenschaefer/elpy">Github</a></li><li>  Sublime Text</li><li>  SublimeJEDI：一个 Sublime Text 插件，用来使用超赞的自动补全库 Jedi。<a href="https://github.com/srusskih/SublimeJEDI">Github</a></li><li>  Anaconda：Anaconda 把你的 Sublime Text 3 变成一个功能齐全的 Python IDE。<a href="https://github.com/DamnWidget/anaconda">Github</a></li><li>  Vim</li><li>  <a href="http://hao.jobbole.com/youcompleteme/">YouCompleteMe</a>：引入基于 <a href="https://github.com/davidhalter/jedi">Jedi</a> 的 Python 自动补全引擎。<a href="https://github.com/Valloric/YouCompleteMe">Github</a></li><li>  Jedi-vim：绑定 Vim 和 Jedi 自动补全库对 Python 进行自动补全。<a href="https://github.com/davidhalter/jedi-vim">Github</a></li><li>  Python-mode：将 Vim 变成 Python IDE 的一款多合一插件。<a href="https://github.com/klen/python-mode">Github</a></li><li>  Visual Studio</li><li>  PTVS：Visual Studio 的 Python 工具<a href="https://github.com/Microsoft/PTVS">Github</a></li></ul><h3 id="集成开发环境"><a href="#集成开发环境" class="headerlink" title="集成开发环境"></a>集成开发环境</h3><p>流行的 Python 集成开发环境。</p><ul><li>  PyCharm：商业化的 Python IDE ，由 JetBrains 开发。也有免费的社区版提供。<a href="https://www.jetbrains.com/pycharm/">官网</a></li><li>  LiClipse：基于 Eclipse 的免费多语言 IDE 。使用 PyDev 来支持 Python 。<a href="http://www.liclipse.com/">官网</a></li><li>  Spyder：开源 Python IDE。<a href="https://github.com/spyder-ide/spyder">Github</a></li></ul><h3 id="自动聊天工具"><a href="#自动聊天工具" class="headerlink" title="自动聊天工具"></a>自动聊天工具</h3><p>用于开发聊天机器人的库</p><ul><li>  Errbot：最简单和最流行的聊天机器人用来实现自动聊天工具。<a href="http://errbot.io/en/latest/">官网</a></li></ul><h2 id="服务"><a href="#服务" class="headerlink" title="服务"></a>服务</h2><p>在线工具和简化开发的 API 。</p><h3 id="持续集成"><a href="#持续集成" class="headerlink" title="持续集成"></a>持续集成</h3><p>参见: <a href="https://github.com/ciandcd/awesome-ciandcd#online-build-system">awesome-CIandCD</a>.</p><ul><li>  Travis CI：一个流行的工具，为你的开源和<a href="https://travis-ci.com/">私人</a>项目提供持续集成服务。(仅支持 GitHub)<a href="https://travis-ci.org/">官网</a></li><li>  CircleCI：一个持续集成工具，可以非常快速的进行并行测试。 (仅支持 GitHub)<a href="https://circleci.com/">官网</a></li><li>  Vexor CI：一个为私人 app 提供持续集成的工具，支持按分钟付费。<a href="https://vexor.io/">官网</a></li><li>  Wercker：基于 Docker 平台，用来构建和部署微服务。<a href="http://wercker.com/">官网</a></li></ul><h3 id="代码质量"><a href="#代码质量" class="headerlink" title="代码质量"></a>代码质量</h3><ul><li>  Codacy：自动化代码审查，更加快速的发布高质量代码。对于开源项目是免费的。<a href="https://www.codacy.com/">官网</a></li><li>  QuantifiedCode：一个数据驱动、自动、持续的代码审查工具。<a href="https://www.quantifiedcode.com/">官网</a></li></ul><h2 id="资源"><a href="#资源" class="headerlink" title="资源"></a>资源</h2><p>在这里可以找到新的 Python 库。</p><h3 id="网站"><a href="#网站" class="headerlink" title="网站"></a>网站</h3><ul><li>  <a href="https://www.reddit.com/r/python">r/Python</a></li><li>  <a href="https://www.coolgithubprojects.com/">CoolGithubProjects</a></li><li>  <a href="https://www.djangopackages.com/">Django Packages</a></li><li>  <a href="http://www.fullstackpython.com/">Full Stack Python</a></li><li>  <a href="http://python3wos.appspot.com/">Python 3 Wall of Superpowers</a></li><li>  <a href="http://pythonhackers.com/open-source/">Python Hackers</a></li><li>  <a href="https://python.zeef.com/alan.richmond">Python ZEEF</a></li><li>  <a href="https://github.com/trending?l=python">Trending Python repositories on GitHub today</a></li><li>  <a href="http://pypi-ranking.info/alltime">PyPI Ranking</a></li></ul><h3 id="学习指南"><a href="#学习指南" class="headerlink" title="学习指南"></a>学习指南</h3><ul><li>  <a href="http://hao.jobbole.com/scipy-lecture-notes/">Scipy-lecture-notes</a>：如何用Python来做学术？<a href="https://github.com/scipy-lectures/scipy-lecture-notes">Github</a></li><li>  <a href="http://hao.jobbole.com/scientific-python-lectures/">SScientific-python-lectures</a>：Python科学计算的资料。<a href="https://github.com/jrjohansson/scientific-python-lectures">Github</a></li><li>  <a href="http://hao.jobbole.com/mario-level-1/">Mario-Level-1</a>：用Python和Pygame写的超级马里奥第一关。<a href="https://github.com/justinmeister/Mario-Level-1">Github</a></li><li>  <a href="http://hao.jobbole.com/python-koans/">Python Koans</a>：Python的交互式学习工具。<a href="https://github.com/gregmalcolm/python_koans">Github</a></li><li>  <a href="http://hao.jobbole.com/minecraft-python/">Minecraft</a>：用python写的Minecraft游戏。<a href="https://github.com/fogleman/Minecraft">Github</a></li><li>  <a href="http://hao.jobbole.com/python-pycrumbs/">pycrumbs</a>：Python资源大全。<a href="https://github.com/kirang89/pycrumbs/blob/master/pycrumbs.md">Github</a></li><li>  <a href="http://hao.jobbole.com/python-patterns/">python-patterns</a>：使用python实现设计模式。<a href="https://github.com/faif/python-patterns">Github</a></li><li>  <a href="http://hao.jobbole.com/python-projects/">Projects</a>：Python项目大集合。<a href="https://github.com/karan/Projects">Github</a></li><li>  <a href="http://hao.jobbole.com/the-hitchhikers-guide-to-python/">The Hitchhiker’s Guide to Python</a>：旅行者的Python学习指南。<a href="http://docs.python-guide.org/en/latest/">官网</a></li></ul>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Python高级编程之反爬虫及应对方案(可能是最全的应对方案)</title>
    <link href="/2021/11/19/Python%E9%AB%98%E7%BA%A7%E7%BC%96%E7%A8%8B%E4%B9%8B%E5%8F%8D%E7%88%AC%E8%99%AB%E5%8F%8A%E5%BA%94%E5%AF%B9%E6%96%B9%E6%A1%88(%E5%8F%AF%E8%83%BD%E6%98%AF%E6%9C%80%E5%85%A8%E7%9A%84%E5%BA%94%E5%AF%B9%E6%96%B9%E6%A1%88)/"/>
    <url>/2021/11/19/Python%E9%AB%98%E7%BA%A7%E7%BC%96%E7%A8%8B%E4%B9%8B%E5%8F%8D%E7%88%AC%E8%99%AB%E5%8F%8A%E5%BA%94%E5%AF%B9%E6%96%B9%E6%A1%88(%E5%8F%AF%E8%83%BD%E6%98%AF%E6%9C%80%E5%85%A8%E7%9A%84%E5%BA%94%E5%AF%B9%E6%96%B9%E6%A1%88)/</url>
    
    <content type="html"><![CDATA[<h1 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h1><p>爬虫是 Python 的一个常见应用场景，很多练习项目就是让大家去爬某某网站<br>爬取网页的时候，你大概率会碰到一些反爬措施<br>这种情况下，你该如何应对呢？<br>本文梳理了常见的反爬措施和应对方案<br>接着往下看吧<br>本文章原本链接<a href="https://syjun.vip/archives/271.html">https://syjun.vip/archives/271.html</a></p><h1 id="通过User-Agent来控制访问"><a href="#通过User-Agent来控制访问" class="headerlink" title="通过User-Agent来控制访问"></a>通过User-Agent来控制访问</h1><p>无论是浏览器还是爬虫程序，在向服务器发起网络请求的时候，都会发过去一个头文件：<strong>headers</strong><br>以本网页为例,点击鼠标右键,接着点击[检查],可以看到如下的示例<br><img src="https://syjun.vip/usr/uploads/2020/10/514935391.jpg" alt="图1"></p><p>这里面的大多数的字段都是浏览器向服务<strong>表明身份</strong>用的<br>对于爬虫程序来说，最需要注意的字段就是：<strong>User-Agent</strong><br>很多网站都会建立<strong>User-Agent</strong>白名单，只有属于正常范围的<strong>user-agent</strong>才能够正常访问</p><h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><p>可以自己设置一下<strong>user-agent</strong>，或者更好的是，可以从一系列的<strong>user-agent</strong>里随机挑出一个符合标准的使用<br><img src="https://syjun.vip/usr/uploads/2020/10/2783538949.png" alt="图2"></p><p>[scode type=”blue”]实现难度：★[/scode]</p><h1 id="IP限制"><a href="#IP限制" class="headerlink" title="IP限制"></a>IP限制</h1><p>如果一个固定的ip在短暂的时间内，快速大量的访问一个网站，后台管理员可以编写IP限制，不让该IP继续访问</p><h2 id="解决方法-1"><a href="#解决方法-1" class="headerlink" title="解决方法"></a>解决方法</h2><p>比较成熟的方式是：<strong>IP代{过}{滤}理池</strong><br><img src="https://syjun.vip/usr/uploads/2020/10/3764900710.png" alt="图3"></p><p>简单的说，就是通过ip代{过}{滤}理，从不同的ip进行访问，这样就不会被封掉ip了</p><p>可是ip代{过}{滤}理的获取本身就是一个很麻烦的事情，网上有免费和付费的，但是质量都层次不齐<br>如果是企业里需要的话，可以通过自己购买集群云服务来自建代{过}{滤}理池</p><p>实现难度：★</p><h1 id="SESSION访问限制"><a href="#SESSION访问限制" class="headerlink" title="SESSION访问限制"></a>SESSION访问限制</h1><p>后台统计登录用户的操作，比如短时间的点击事件，请求数据事件，与正常值比对，用于区分用户是否处理异常状态，如果是，则限制登录用户操作权限</p><p>但是这种访问限制,需要增加数据埋点功能，阈值设置不好，容易造成误操作</p><h2 id="解决方法-2"><a href="#解决方法-2" class="headerlink" title="解决方法"></a>解决方法</h2><p>注册多个账号、模拟正常操作<br>实现难度：★★★</p><h1 id="Spider-Trap"><a href="#Spider-Trap" class="headerlink" title="Spider Trap"></a>Spider Trap</h1><p>蜘蛛陷阱导致网络爬虫进入无限循环之类的东西，这会浪费蜘蛛的资源，降低其生产力，并且在编写得不好的爬虫的情况下，可能导致程序崩溃</p><p>礼貌蜘蛛在不同主机之间交替请求，并且不会每隔几秒钟从同一服务器请求多次文档，这意味着“礼貌”网络爬虫比“不礼貌”爬虫的影响程度要小得多</p><h2 id="反爬方式"><a href="#反爬方式" class="headerlink" title="反爬方式"></a>反爬方式</h2><ol><li> 创建无限深度的目录结构 HTTP：//example.com/bar/foo/bar/foo/bar/foo/bar/</li><li> 动态页面，为网络爬虫生成无限数量的文档。如由算法生成杂乱的文章页面</li><li> 文档中填充了大量字符，使解析文档的词法分析器崩溃</li></ol><p>此外，带蜘蛛陷阱的网站通常都有robots.txt告诉机器人不要进入陷阱，因此合法的“礼貌”机器人不会陷入陷阱，而忽视robots.txt设置的“不礼貌”机器人会受到陷阱的影响</p><p>但是,反爬方式1，2会增加很多无用目录或文件，造成资源浪费，也对正常的SEO十分不友好，可能会被惩罚</p><h2 id="解决方法-3"><a href="#解决方法-3" class="headerlink" title="解决方法"></a>解决方法</h2><p>把网页按照所引用的css文件进行聚类，通过控制类里最大能包含的网页数量防止爬虫进入trap后出不来，对不含css的网页会给一个penalty，限制它能产生的链接数量。这个办法理论上不保证能避免爬虫陷入死循环，但是实际上这个方案工作得挺好，因为绝大多数网页都使用了css，动态网页更是如此</p><p>实现难度：★★★</p><h1 id="验证码"><a href="#验证码" class="headerlink" title="验证码"></a>验证码</h1><p>验证码是一种区分用户是计算机还是人的公共全自动程序</p><p>可以防止：恶意破解密码、刷票、论坛灌水，有效防止某个黑客对某一个特定注册用户用特定程序暴力破解方式进行不断的登陆尝试，实际上用验证码是现在很多网站通行的方式</p><h2 id="1-图片验证码"><a href="#1-图片验证码" class="headerlink" title="1.图片验证码"></a>1.图片验证码</h2><h3 id="复杂型"><a href="#复杂型" class="headerlink" title="复杂型"></a>复杂型</h3><p><img src="https://syjun.vip/usr/uploads/2020/10/2105455197.jpg" alt="图4"></p><p>打码平台雇佣了人力，专门帮人识别验证码。识别完把结果传回去。总共的过程用不了几秒时间。这样的打码平台还有记忆功能。图片被识别为“锅铲”之后，那么下次这张图片再出现的时候，系统就直接判断它是“锅铲”。时间一长，图片验证码服务器里的图片就被标记完了，机器就能自动识别了</p><h3 id="简单型"><a href="#简单型" class="headerlink" title="简单型"></a>简单型</h3><p><img src="https://syjun.vip/usr/uploads/2020/10/91268905.jpg" alt="图5"></p><p>上面两个不用处理直接可以用OCR识别技术(利用python第三方库–esserocr)来识别<br><img src="https://syjun.vip/usr/uploads/2020/10/2627894991.jpg" alt="背景比较糊"></p><p><img src="https://syjun.vip/usr/uploads/2020/10/145368777.jpg" alt="清晰可见"></p><p>经过灰度变换和二值化后,由模糊的验证码背景变成清晰可见的验证码</p><p><img src="https://syjun.vip/usr/uploads/2020/10/1353113584.jpg" alt="图8"></p><p>容易迷惑人的图片验证码</p><p>对于在这种验证码,语言一般自带图形库,添加上扭曲就成了这个样子,我们可以利用9万张图片进行训练,完成类似人的精准度,到达识别验证码的效果</p><h2 id="2-短信验证码"><a href="#2-短信验证码" class="headerlink" title="2.短信验证码"></a>2.短信验证码</h2><p>打开手机,查看验证码(好像是废话…)</p><h2 id="3-计算题图片验证码"><a href="#3-计算题图片验证码" class="headerlink" title="3.计算题图片验证码"></a>3.计算题图片验证码</h2><p><img src="https://syjun.vip/usr/uploads/2020/10/1354055895.jpg" alt="图9"></p><p>把所有可能出现的汉字都人工取出来，保存为黑白图片,把验证码按照字体颜色二值化，去除噪点,然后将所有图片依次与之进行像素对比,计算出相似值,找到最像的那张图片</p><h2 id="4-滑动验证码"><a href="#4-滑动验证码" class="headerlink" title="4.滑动验证码"></a>4.滑动验证码</h2><p><img src="https://syjun.vip/usr/uploads/2020/10/3863133702.jpg" alt="图10"></p><p>对于滑动验证码</p><p>我们可以利用图片的像素作为线索,确定好基本属性值,查看位置的差值,对于差值超过基本属性值,我们就可以确定图片的大概位置</p><h2 id="5-图案验证码"><a href="#5-图案验证码" class="headerlink" title="5.图案验证码"></a>5.图案验证码</h2><p><img src="https://syjun.vip/usr/uploads/2020/10/2705471450.jpg" alt="图11"></p><p>对于这种每次拖动的顺序不一样,结果就不一样,我们怎么做来识别呢?</p><ul><li>  利用机器学习所有的拖动顺序,利用1万张图片进行训练,完成类似人的操作,最终将其识别</li><li>  利用selenium技术来模拟人的拖动顺序,穷尽所有拖动方式,这样达到是别的效果</li></ul><h2 id="6-标记倒立文字验证码"><a href="#6-标记倒立文字验证码" class="headerlink" title="6.标记倒立文字验证码"></a>6.标记倒立文字验证码</h2><p><img src="https://syjun.vip/usr/uploads/2020/10/4042049370.jpg" alt="图12"></p><p>我们不妨分析下:对于汉字而言,有中华五千年庞大的文字库,加上文字的不同字体、文字的扭曲和噪点,难度更大了</p><p>**方法:**先点击前两个倒立的文字,可确定7个文字的坐标， 验证码中7个汉字的位置是确定的，只需要提前确认每个字所在的坐标并将其放入列表中，然后人工确定倒立文字的文字序号，将列表中序号对应的坐标即可实现成功登录</p><p>悄悄的说一句,验证码越复杂,网站体验感越差</p><p>实现难度：★★</p><h1 id="通过robots-txt来限制爬虫"><a href="#通过robots-txt来限制爬虫" class="headerlink" title="通过robots.txt来限制爬虫"></a>通过robots.txt来限制爬虫</h1><p><strong>robots.txt</strong>（统一小写）是一种存放于网站根目录下的ASCII编码的文本文件，它通常告诉网络搜索引擎的漫游器（又称网络蜘蛛），此网站中的哪些内容是不应被搜索引擎的漫游器获取的，哪些是可以被漫游器获取的</p><p><strong>robots.txt</strong>协议并不是一个规范，而只是约定俗成的，所以并不能保证网站的隐私。注意robots.txt是用字符串比较来确定是否获取URL，所以目录末尾有与没有斜杠“/”表示的是不同的URL</p><p><img src="https://syjun.vip/usr/uploads/2020/10/3305206814.jpg" alt="图13"></p><p>但是,这只是一个君子协议，对于良好的爬虫比如搜索引擎有效果，对于有目的性的爬虫不起作用</p><h2 id="解决方法-4"><a href="#解决方法-4" class="headerlink" title="解决方法"></a>解决方法</h2><p>如果使用scrapy框架，只需将settings文件里的<strong>ROBOTSTXT_OBEY</strong>设置值为 False</p><p>实现难度：★</p><h1 id="数据动态加载"><a href="#数据动态加载" class="headerlink" title="数据动态加载"></a>数据动态加载</h1><p>python的requests库只能爬取静态页面，爬取不了动态加载的页面<br>使用JS加载数据方式，能提高爬虫门槛</p><h2 id="解决方法-5"><a href="#解决方法-5" class="headerlink" title="解决方法"></a>解决方法</h2><ul><li>  抓包获取数据url</li></ul><p>通过抓包方式可以获取数据的请求url，再通过分析和更改url参数来进行数据的抓取。<br>示例</p><p>一. 如下<a href="https://image.baidu.com/">https://image.baidu.com</a> 这部分的包。可以看到，这部分包里面，search下面的那个 url和我们访问的地址完全是一样的，但是它的response却包含了js代码</p><p><img src="https://syjun.vip/usr/uploads/2020/10/1365627987.png" alt="图14"></p><p>二. 当在动物图片首页往下滑动页面，想看到更多的时候，更多的包出现了。从图片可以看到，下滑页面后得到的是一连串json数据。在data里面，可以看到thumbURL等字样,它的值是一个url,这个就是图片的链接</p><p><img src="https://syjun.vip/usr/uploads/2020/10/3157996263.png" alt="图15"></p><p>三.打开一个浏览器页面，访问thumbURL=”<a href="https://ss1.bdstatic.com/70cFvXSh_Q1YnxGkpoWK1HF6hhy/it/u=1968180540,4118301545&fm=27&gp=0.jpg">https://ss1.bdstatic.com/70cFvXSh_Q1YnxGkpoWK1HF6hhy/it/u=1968180540,4118301545&amp;fm=27&amp;gp=0.jpg</a>“ 发现搜索结果里的图片</p><p>四.根据前面的分析，就可以知道，请求所需要的url</p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs perl">URL=<span class="hljs-string">&quot;https://image.baidu.com/search/acjsontn=resultjson_com&amp;ipn=rj&amp;ct=201326592&amp;is=&amp;fp=result&amp;queryWord=%E5%8A%A8%E7%89%A9%E5%9B%BE%E7%89%87&amp;cl=2&amp;lm=-1&amp;ie=utf8&amp;oe=utf8&amp;adpicid=&amp;st=-1&amp;z=&amp;ic=0&amp;word=%E5%8A%A8%E7%89%A9%E5%9B%BE%E7%89%87&amp;s=&amp;se=&amp;tab=&amp;width=&amp;height=&amp;face=0&amp;istype=2&amp;qc=&amp;nc=1&amp;fr=&amp;pn=30&amp;rn=30&amp;gsm=1e&amp;1531038037275=&quot;</span><br></code></pre></td></tr></table></figure><p>用浏览器访问这个链接确定他是公开的</p><p>五.最后就可以寻找URL的规律，对URL进行构造便可获取所有照片</p><ul><li>  使用selenium</li></ul><p>过使用selenium来实现模拟用户操作浏览器，然后结合BeautifulSoup等包来解析网页通过这种方法获取数据，简单，也比较直观，缺点是速度比较慢</p><p>但是这种反爬方式如果数据API没做加密处理，容易曝光接口，让爬虫用户更容易获取数据</p><p>实现难度：★</p><h1 id="数据加密-使用加密算法"><a href="#数据加密-使用加密算法" class="headerlink" title="数据加密-使用加密算法"></a>数据加密-使用加密算法</h1><ul><li>前端加密<br>  通过对查询参数、user-agent、验证码、cookie等前端数据进行加密生成一串加密指令，将加密指令作为参数，再进行服务器数据请求。该加密参数为空或者错误，服务器都不对请求进行响应</li><li>服务器端加密<br>  在服务器端同样有一段加密逻辑，生成一串编码，与请求的编码进行匹配，匹配通过则会返回数据</li></ul><h2 id="解决方法-6"><a href="#解决方法-6" class="headerlink" title="解决方法"></a>解决方法</h2><p>JS加密破解方式，就是要找到JS的加密代码，然后使用第三方库js2py在Python中运行JS代码，从而得到相应的编码</p><p>案列参考:</p><p><a href="https://blog.csdn.net/lsh19950928/article/details/81585881">https://blog.csdn.net/lsh19950928/article/details/81585881</a></p><p>实现难度：★★★</p><h1 id="数据加密-使用字体文件映射"><a href="#数据加密-使用字体文件映射" class="headerlink" title="数据加密-使用字体文件映射"></a>数据加密-使用字体文件映射</h1><p>服务器端根据字体映射文件先将客户端查询的数据进行变换再传回前端，前端根据字体文件进行逆向解密</p><p>映射方式可以是数字乱序显示，这样爬虫可以爬取数据，但是数据是错误的</p><h2 id="破解方式"><a href="#破解方式" class="headerlink" title="破解方式"></a>破解方式</h2><p>其实，如果能看懂JS代码，这样的方式还是很容易破解的，所以需要做以下几个操作来加大破解难度</p><ul><li>  对JS加密</li><li>  使用多个不同的字体文件，然后约定使用指定字体文件方式，比如时间戳取模，这样每次爬取到的数据映射方式都不一样，映射结果就不一样，极大提高了破解的难度</li></ul><p>该种方式相比使用加密算法方式难度更高，因为加密算法是固定的几种，对方很容易获取并破解，而字体文件映射可以按任意规则映射，正常的数据使之错误显示，爬虫不容易察觉</p><p>实现难度：★★★★</p><h1 id="非可视区域遮挡"><a href="#非可视区域遮挡" class="headerlink" title="非可视区域遮挡"></a>非可视区域遮挡</h1><p>此方式主要针对使用senlium进行的爬虫，如果模拟界面未进入可视区域，则对未见数据进行遮挡，防止senlium的click()操作。这种方式只能稍稍降低爬虫的爬取速度，并不能阻止继续进行数据爬取</p><hr><p>世界因代码而改变   Peace</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>战略狗和执行狗</title>
    <link href="/2021/11/01/%E6%88%98%E7%95%A5%E7%8B%97%E5%92%8C%E6%89%A7%E8%A1%8C%E7%8B%97/"/>
    <url>/2021/11/01/%E6%88%98%E7%95%A5%E7%8B%97%E5%92%8C%E6%89%A7%E8%A1%8C%E7%8B%97/</url>
    
    <content type="html"><![CDATA[<p>战略定了就必须执行和复盘</p><p>离不开的问题先想好，想清楚了，一辈子都不会白活。<br>生死有命富贵在天<br>1、想下自己退休需要多少钱？<br>2、退休需要做什么事？<br>3、死后留点啥给下一代</p><p>人生三个核心需要执行的指标<br>1、生存概率<br>2、逃离成本线<br>3、成功率</p><p>ps:看谁活得更久才是真正战略<br>对标企业来说以上就是护城河。</p><p>没有太多可能成功的话千万别高负债行为<br>始于利润表，陷于现金流量表，忠于资产负债表<br><a href="https://baijiahao.baidu.com/s?id=1669015379237671072&amp;wfr=spider&amp;for=pc">https://baijiahao.baidu.com/s?id=1669015379237671072&amp;wfr=spider&amp;for=pc</a></p><p>项目的自动化的尽量自动化和系统化，人的变数太大，主要因为人性。<br>交学费不是白交，何为有价值的交？<br>1、输出可用的一套认知投资系统；<br>2、积累相关重要的核心资源，生产资料或流量IP；<br>3、什么时候套现利润出场是非常重要；<br>4、黑天鹅识别。</p><p>凡事在初期必须要自己死磕，除非你超级有钱。<br>就最近几年的观察来看，当初谈论的风声水起的项目，以这种心态做事的创始人，都灰溜溜的离场了。 反而那些自己踏实的切入，一点点积累的人，反而做出了一些可见的成绩。 普通人，唯有踏实的干，做自己想做的，喜欢做的，能亲自上手做的，路才能越走越宽。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>2021-11-认知吃饭学习</title>
    <link href="/2021/11/01/2021-11-%E8%AE%A4%E7%9F%A5%E5%90%83%E9%A5%AD%E5%AD%A6%E4%B9%A0%E5%88%86%E7%B1%BB/"/>
    <url>/2021/11/01/2021-11-%E8%AE%A4%E7%9F%A5%E5%90%83%E9%A5%AD%E5%AD%A6%E4%B9%A0%E5%88%86%E7%B1%BB/</url>
    
    <content type="html"><![CDATA[<p><a href="https://www.ghxi.com/drawio.html">https://www.ghxi.com/drawio.html</a><br>【惊奇软件】Drawio v15.7.3 开源跨平台绘图软件<br>在线使用：<a href="https://app.diagrams.net/?src=about">https://app.diagrams.net/?src=about</a> （语言设置先创建一个项目，右上角）<br>GitHub：<a href="https://get.diagrams.net/">https://get.diagrams.net/</a><br><a href="https://ghpym.lanzoui.com/b00zplh8h">https://ghpym.lanzoui.com/b00zplh8h</a><br>原有方案是： xmind+processon.com<br>目前可以为：xmind+Drawio</p><p><a href="https://www.tuicool.com/articles/rIbMFvq">https://www.tuicool.com/articles/rIbMFvq</a><br>Gartner2021新兴技术成熟度曲线，AI与超自动化支撑数字化变革<br>RPA、低代码开发平台、流程挖掘、AI等创新技术。<br><a href="https://www.tuicool.com/articles/e6vqayV">https://www.tuicool.com/articles/e6vqayV</a><br>工业企业工控安全人才能力矩阵</p><p>靠谱是比聪明更重要的品质。 </p><p>普通女孩没必要在深圳内卷，如果你外貌不差，阿姨指你一条明路，拿出所有的积蓄，去香港城大理大教大读个一年的水硕，不难申请的。<br>然后在这一年里以及毕业后的一年签证期限里用尽办法找工作留下来，重点关注在港中资企业，保险公司，国际学校……只要你为人够实际够拼，肯定能找到的。<br>有了工签就慢慢混嫁人这条路吧，这边男港漂挺多的，港女和他们有壁不太好找老婆，可以物色一下；找港男和老外也不是不行，但要识别出那些空心老倌和各类黄丝，而且这个群体拍拖爱AA，爱晚婚，还不爱买房，大概率浪费你的青春，谨慎。<br>讲真我发现不少内地人来港以后简直是降维打击，混得不要太好，说到底还是回去内卷太苦了，一来这边顿觉周围都是傻白甜。尤其是题主万一有几分姿色，那已经打败好多东南亚长相的港女，姿态放得够低的话，嫁个人肯定不成问题，而且港男根本不在乎你是内地哪个地方来的，毕竟他们眼里大陆人都是乡下人，娶你和娶个深圳人根本没差，好看听话就行。</p><p><a href="https://www.tuicool.com/articles/YF3Y7nU">https://www.tuicool.com/articles/YF3Y7nU</a><br>双11刚过，杭州市税务局向雪梨、林珊珊追缴近亿税款</p><p>SAMSUNG 三星 S32AM700PC 32英寸显示器（4K、65W）<br>1800<br>二手屏幕32寸2K屏幕-700-900</p><p><a href="https://masuit.com/1995">https://masuit.com/1995</a><br><a href="https://masuit.com/author/%E7%BE%8E%E5%9B%BE%E5%9D%8A">https://masuit.com/author/%E7%BE%8E%E5%9B%BE%E5%9D%8A</a> 美图坊<br><a href="https://www.tuicool.com/search?kw=Final+Cut+Pro+X&amp;t=1">https://www.tuicool.com/search?kw=Final+Cut+Pro+X&amp;t=1</a><br>MacOS最强视频剪辑软件——Apple Final Cut Pro X 10.6.1学习版<br>macOS 10.15.6 或更高版本、4GB 内存（建议 8GB 以用于 4K 编辑、3D 字幕和 360° 视频编辑）、支持 Metal 的图形卡（建议 1GB 显存以用于 4K 编辑、3D 字幕和 360° 视频编辑）、3.8GB 可用磁盘空间。<br><a href="https://www.tuicool.com/articles/memI3m">https://www.tuicool.com/articles/memI3m</a><br>好莱坞新片《焦点》用Final Cut Pro X剪辑<br>整个剪辑过程，他们用到了多种苹果设备和软件，包括：<br>• Mac Pro<br>• iMac<br>• MacBook Pro<br>• iPad<br>• iPhone<br>• OS X<br>• Final Cut Pro X<br>• Logic Pro X（专业作曲、录音、编辑和混音的工具）<br>• Motion 5（配合 Final Cut Pro 使用的字幕、转场效果和特效工具）<br>• Xsan（公司企业级储存区域网络（SAN）解决方案）<br>某些功能需要互联网连接；上网可能需要付费。刻录 Blu-ray 光盘需要 Blu-ray 刻录机。</p><p>吾爱破解python主题<br><a href="https://www.52pojie.cn/forum.php?mod=forumdisplay&amp;fid=24&amp;filter=typeid&amp;typeid=29">https://www.52pojie.cn/forum.php?mod=forumdisplay&amp;fid=24&amp;filter=typeid&amp;typeid=29</a></p><p>主机VPS腿甲<br>vultr<br>linode</p><p><a href="https://mp.weixin.qq.com/s/urgubkqCpjpSQsOYUuj_tg">https://mp.weixin.qq.com/s/urgubkqCpjpSQsOYUuj_tg</a><br>几种常见疾病的防与治！</p><p><a href="http://icyfenix.cn/">http://icyfenix.cn/</a><br>凤凰架构：构筑可靠的大型分布式系统</p><p><a href="https://www.tuicool.com/articles/vmeYRrz">https://www.tuicool.com/articles/vmeYRrz</a><br>当连锁药店开始卖彩票<br>药店，便利店，水果店，钱大妈</p><p>Crypto.com</p><p><a href="https://post.smzdm.com/p/amx086pv/">https://post.smzdm.com/p/amx086pv/</a><br>10个知乎值得收藏的高赞高质量回答最强汇总（附问题链接，免费拿走！）</p><p>目前来看迪拜很有可能成为未来的区块链之度，币安和迪拜高层开始谈判，10月14日 Binance 宣布前迪拜金融服务管理局局长 Mark McGinness 加入担任首席监管联络官。迪拜对于中国签证落地签，工作签证也十分容易，买房可以获得3-10年签证。并且迪拜是免税港，没有公司所得税，个人所得税，资本利得税，天然适合虚拟货币交易。目前也就有个5%的VAT,相对于美国动辄10%的SALES TAX这已经十分仁慈了。美国真是万税万税万万税，有一瞬间绿卡不想要了。</p><p>卖课，社群，培训</p><p>1，聊‬天式成交销售<br>2，持续行‬动如何‬做成1件事<br>3,  从35岁转型‬职场到创业‬者</p><p>孙宏斌的钱来自八个方面，（俗称八爪鱼）<br>一，启动资金，来自于原始积累（很少），绝非血汗钱和炒股收益。<br>二，来路不明的地下黑钱，包括美国财团，与红二代三代官倒有关，不太干净。<br>三、境内合作央企及国企资金，这是混合所有制的猫腻，官商勾结，利益输送。<br>四、房屋及土地杠杆撬来的银行贷款，搞地产的人都懂，他的套路深，盘子大。<br>五、民间融资，包括发债、基金、商票等等。<br>六、股东资金，包括明股实债，平安集团是主力军，平安是谁家的，你猜？<br>七、销售收入带来的现金流。并购资金庞大，开发利润无法支撑这个数据。<br>八、诈骗所得赃款，敲诈万达王健林及打劫金科黄红云。还伪造新疆商会会长赵长兵签名，伪造房产证及合同书，已涉嫌犯罪。</p><p><a href="https://www.toutiao.com/i7028617393467294220/">https://www.toutiao.com/i7028617393467294220/</a><br>这7款游戏让大家知道，没有什么“3A”是NS带不动的<br><a href="https://www.toutiao.com/i7030615180384027168/">https://www.toutiao.com/i7030615180384027168/</a><br>人过三十，不要在朋友圈“显摆”这些</p><p>三口之家来说，每年到手收入三十万，没有房贷车贷，正常生活已经没问题了。买点小保险，支付宝或者微信买就成，一年大概也就五六千，足够应对意外。吃饭七八万，实话说，已经可以经常下馆子了。孩子七八万，基本的培训费都有了。每年外出旅游两次，花费四五万也可以了。七七八八下来，每年开支其实就是在二十五万左右。<br>对普通人而言，年被动收入达到三十万，三口之家，基本就是宽松的财务自由了。在这个基础上，没想法岁月静好，安稳一生也很好。有想法，没有后顾之忧，大胆前进也不错。</p><p>-》河南抖玩互娱网络科技有限公司，tk美元<br><a href="https://www.zhihu.com/people/xun-dun-fang-bao-ruan-jian">https://www.zhihu.com/people/xun-dun-fang-bao-ruan-jian</a><br><a href="https://www.zhihu.com/people/zhao-ze-peng-1">https://www.zhihu.com/people/zhao-ze-peng-1</a><br><strong>dating和game属于推广类任务</strong>，就是拿任务链接让用户注册即可，单任务佣金在2-7美金左右，这种具体的操作方法可以参考<a href="https://zhuanlan.zhihu.com/p/422323245">利用TikTok做CPA/CPS项目实现月入十万，干货分享</a><br><strong>C任务的话是属于EMU模式</strong>，<a href="https://zhuanlan.zhihu.com/p/423417177">国外CPA注册类offer的EMU操作案例！</a>，大家可以参考这个EMU，EMU说白了就是模拟真人完成任务操作，听着很复杂，其实做起来很简单</p><p>北交所，吸纳流动性</p><p>极限竞速——地平线5 Forza Horizon 5 v1.405.2 直装学习版<br><a href="https://masuit.com/1633">https://masuit.com/1633</a><br>magnet:?xt=urn:btih:de6c18e009aaca54845e8b998abc7f6e88a6a2ca&amp;dn=rutor.info_Forza+Horizon+5%3A+Premium+Edition+%5Bv+1.405.2.0+%2B+DLCs%5D+%282021%29++PC+%7C+RePack+%D0%BE%D1%82+Chovka&amp;tr=udp://opentor.net:6969&amp;tr=udp://opentor.org:2710&amp;tr=<a href="http://retracker.local/announce">http://retracker.local/announce</a><br>B站视频<br><a href="https://www.bilibili.com/video/av34646946?zw">https://www.bilibili.com/video/av34646946?zw</a><br>买个方向盘撸赛车？<br><a href="https://item.jd.com/30741781221.html">https://item.jd.com/30741781221.html</a></p><p>测试转研发的一年总结<br><a href="https://testerhome.com/topics/31643">https://testerhome.com/topics/31643</a></p><p>通胀买入最稀缺资产！BTC，芯片</p><p>抖音靠推荐算法-用户画像-喂食-吃广告-写作者分佣<br><a href="https://www.tuicool.com/search?kw=%E6%8E%A8%E8%8D%90%E7%AE%97%E6%B3%95&amp;t=1">https://www.tuicool.com/search?kw=%E6%8E%A8%E8%8D%90%E7%AE%97%E6%B3%95&amp;t=1</a></p><p>不忘初心,继续前行 只有不停奔跑,才能留在原地!<br>大佬基本都是收割大佬才能搞到钱<br>尼采：凡不能毁灭我的，必使我更强大</p><p>人算不如天算，玄学还事需要个算卦，自己没有主意的话让给天算<br>别老说吗，吧，可能，好像，应该，你要玩就搜哈</p><p>TokenPocket是全球最大的数字货币_钱包_,支持包括BTC、ETH、BSC、HECO、TRON、OKExChain、Polkadot、Kusama、EOS等在内的所有主流公链及Layer 2,已为全球近千万用户提供可信赖的数字货币资产管理服</p><p>清华大学：2021 元宇宙研究报告！<br><a href="https://mp.weixin.qq.com/s/jUyt0H9kw84_TdvmQQj6xw">https://mp.weixin.qq.com/s/jUyt0H9kw84_TdvmQQj6xw</a><br>目前进场：<br>FB,TX，字节 还有其他，NFT<br>目前应用还是各种链币-平台币-NFT游戏平台，Play to Earn模式是个不错的玩法，入门门槛不高，然后有钱，模式就可以持续，有点变相传销的感觉。</p><p>Facebook的VR产品 Oculus Quest2一体机VR眼镜steam头戴虚拟性游乐设备体感游戏用品<br>字节跳动 pico<br>pico neo3</p><p>元宇宙<br><a href="https://www.tuicool.com/search?kw=%E5%85%83%E5%AE%87%E5%AE%99&amp;t=1">https://www.tuicool.com/search?kw=%E5%85%83%E5%AE%87%E5%AE%99&amp;t=1</a><br>机构-币圈-消费端-元宇宙-》新增<br>算力-》芯片-》交易和流量-》币圈造神</p><p>P2E(Play to Earn)模式简析 - Axie Infinity为例 小白也能看懂的区块链游戏科普文<br><a href="https://zhuanlan.zhihu.com/p/394983283">https://zhuanlan.zhihu.com/p/394983283</a><br>趣味的游戏机制：所有人都想玩游戏的同时赚钱<br>疫情下的菲律宾经济状况持续恶化，大学毕业生面临着将近1/3的失业率。一位在当地经营家庭超市的老人抱怨道“平日里50到60的买卖到了如今变成可怜的五、六美刀”。与此同时。Axie能让任何一个愿意全身心投入的市民最高可获得300的收入（正常工作也堪堪提供200$，且多为体力劳动）。这也就不难理解Axie在当地病毒式的流行，上至耄耋之年的老年人口下至中学生，无论是很少接到客人三轮车司机，抑或是失业在家的大学毕业生都在切身地实践何为“Play to Earn”<br><a href="https://zhuanlan.zhihu.com/p/387414055">https://zhuanlan.zhihu.com/p/387414055</a><br><a href="https://axieinfinity.com/">https://axieinfinity.com/</a><br>目前的入门最低也要500U</p><p>区块链<br><a href="https://www.zhihu.com/topic/19901773/hot">https://www.zhihu.com/topic/19901773/hot</a></p><p>律师被“白嫖”是一种怎样的体验？<br><a href="http://www.360doc.com/content/19/1015/10/53381643_866885652.shtml">http://www.360doc.com/content/19/1015/10/53381643_866885652.shtml</a></p><p>干货！复盘TFAAMG超级科技股的财报季操作！<br><a href="https://www.laohu8.com/post/840765112?lang=zh_CN&amp;invite=ZTNZC">https://www.laohu8.com/post/840765112?lang=zh_CN&amp;invite=ZTNZC</a><br>2021年股市输的最惨一年（复盘）<br><a href="https://www.laohu8.com/post/849813490">https://www.laohu8.com/post/849813490</a></p><p>450天41万倍，他创造了人类投资史的奇迹<br><a href="https://zhuanlan.zhihu.com/p/427131991">https://zhuanlan.zhihu.com/p/427131991</a><br>毕竟，在1年多的时间里，看着账户里1.3万美元升值至57亿美元，没有几个人能无动于衷。<br>币圈稳健投资9大方法分享<br><a href="https://zhuanlan.zhihu.com/p/401998055">https://zhuanlan.zhihu.com/p/401998055</a><br><a href="https://www.shibatoken.com/">https://www.shibatoken.com/</a></p><p>如何看待李笑来新书《财富自由之路》在豆瓣获得9.4评分？<br><a href="https://www.zhihu.com/answer/2192340984">https://www.zhihu.com/answer/2192340984</a></p><p>千尺豪宅，多数也是普通人买的。我告诉你套路，主要是置换。<br>1，外地大学生小王，和他那个小县城的中产媳妇，在老家拼死拼活凑出了，100个首付，接盘了张阿姨的老破小。<br>2，张阿姨用300个首付，接盘了赵阿姨的老破中。<br>以此类推，分级改善。<br>3，最后，李老伯卖掉了25年前爸妈老单位分的老破大，得款680，再加上自己家这些年存款，一步登天，为儿子搞了一个1100w的千尺豪宅，幸福的生活在了漂亮小区里面了。李老伯的孙儿就是大户人家的娃了。<br>这个连环套，分级改善，一般要50年。丝丝怒了，“什么时候发房子？我不想辛苦了。”呵呵，你慢慢等，不要急，急生不出儿子。</p><p>跟随着 iPhone 一年一更的脚步，我在这三年里也从 11 Pro Max 一路用到了 13 Pro。我总是和不少数码爱好者们一样期待，iPhone 能给我带来什么不一样的东西，但 Apple 这些年推出的产品却在让我们「可持续性地让失望」。Apple 还是那个 Apple，iPhone 也还是那个 iPhone。如果我有 1 万元的预算成本，买一台 Android 手机和相机，也能过得非常舒服，干起活来其实也比 iPhone 更带劲。</p><p>感觉每个人都在保命保位置，或者说活着，现实太残酷，唯有苟活着。</p><p>稻盛和夫<br>稻盛和夫曾说，“利己则生,利他则久。敬人者人恒敬之,爱人者人恒爱之”，利他是一种高级的“利己”。<br>利他思维<br>真正优秀的人，都懂得通过“利他”来成就自己<br><a href="https://zhuanlan.zhihu.com/p/77390140">https://zhuanlan.zhihu.com/p/77390140</a></p><p>关于我作为睿派克论坛站长被抓捕的那些事情<br><a href="https://mp.weixin.qq.com/s/4UOKO5hirXWF5qaoIggR8Q">https://mp.weixin.qq.com/s/4UOKO5hirXWF5qaoIggR8Q</a></p><p>云原生安全：攻防实践与体系构建》资料仓库<br><a href="https://github.com/shellsec/cloud-native-security-book">https://github.com/shellsec/cloud-native-security-book</a></p><p>一个20几万粉丝的vlog博主，每个月能赚多少钱？＃短视频 ＃赚钱<br><a href="https://v.ixigua.com/RrSeTof/">https://v.ixigua.com/RrSeTof/</a></p><p>Real Vision 创始人：加密资产不是泡沫，是当今年轻一代逆天改命的希望<br><a href="https://www.chainnews.com/articles/593853693287.htm">https://www.chainnews.com/articles/593853693287.htm</a></p><p> 美股情报局<br>微信号<br>mgqbj666<br>功能介绍<br>华盛通（新浪集团成员）美股资讯栏目，全天候追踪热点，解读上市公司最新动作，帮助投资者掌握最新行情！</p><p>VNPY全套课程<br><a href="https://www.bilibili.com/video/BV1sz4y1f7FP?p=1">https://www.bilibili.com/video/BV1sz4y1f7FP?p=1</a><br><a href="https://github.com/vnpy/vnpy">https://github.com/vnpy/vnpy</a></p><p>5分钟，4万人账户清零，创始人突然跑路，“鱿鱼币”从2861美元跌到0.0007美元，投资者：“真是鱿鱼游戏”<br>8000美元十四个月变57亿！柴犬币暴涨造就史上最赚钱交易<br><a href="https://www.36kr.com/p/1468809909373696">https://www.36kr.com/p/1468809909373696</a><br><a href="https://new.qq.com/omn/20211030/20211030A00CLX00.html?utm_source=tuicool&amp;utm_medium=referral">https://new.qq.com/omn/20211030/20211030A00CLX00.html?utm_source=tuicool&amp;utm_medium=referral</a></p><p>支付宝开始猛喊私域<br><a href="https://mp.weixin.qq.com/s?__biz=MzU3NTU5NDc0NA==&amp;mid=2247530620&amp;idx=1&amp;sn=e4bb5e2cb84cbe523800c1b7ce7cb8f9">https://mp.weixin.qq.com/s?__biz=MzU3NTU5NDc0NA==&amp;mid=2247530620&amp;idx=1&amp;sn=e4bb5e2cb84cbe523800c1b7ce7cb8f9</a></p><p>“不用多久，我就会升职加薪、当上总经理、出任CEO、迎娶白富美、走上人生巅峰，想想还有点小激动。”</p><p><a href="https://www.reddit.com/">https://www.reddit.com/</a><br>马斯克的探月激情就传播到了Telegram、TikTok和Reddit上</p><p>Messari报告：Solana NFT发展开始挑战以太坊NFT主导地位<br><a href="http://www.ccvalue.cn/article/1368055.html">http://www.ccvalue.cn/article/1368055.html</a><br>上上个月已经调研出来，SOL公链和FTT交易所为下一代NFT主币</p><p>根据相关的规定：参保人死亡后，个人账户余额是可以继承的，那这里也分为两种情况，一是参保人在退休前死亡的，个人账户余额可以全部继承，二是参保人在退休后死亡的，个人账户继承额度按以下公式计算：<br>个人账户继承额＝本人退休时个人账户储存额＋退休后个人账户利息-个人账户月养老金×已领取养老金的月数。<br>简单来说，参保人在退休前死亡的，个人账户的本息都可以一次性继承，参保人员在退休后死亡的，个人账户的本息减去已领养老金的额度，剩余的部分可以一次性继承。</p><p>Java资深开发：这不得40k起步呀 最近一直在研究成为大佬，需要掌握那些技术<br><a href="https://www.tuicool.com/articles/VRNVzqY">https://www.tuicool.com/articles/VRNVzqY</a></p><p>哦，这就是大佬的生活？sunware<br>存款一亿的黑客大佬怒怼银行，开劳斯莱斯取500w现金，顶级程序员的炫富生活我看不懂<br><a href="https://mp.weixin.qq.com/s?__biz=MzA5MjE3NDQ1Mw==&amp;mid=2649721183&amp;idx=1&amp;sn=a298235dbc4ba415debd2d7f142bb01e&amp;utm_source=tuicool&amp;utm_medium=referral">https://mp.weixin.qq.com/s?__biz=MzA5MjE3NDQ1Mw==&amp;mid=2649721183&amp;idx=1&amp;sn=a298235dbc4ba415debd2d7f142bb01e&amp;utm_source=tuicool&amp;utm_medium=referral</a></p><p>币圈大佬，V神，孙宇晨<br>要多向大佬学习</p><p>16孙宇晨：财务自由（完结）<br><a href="https://pan.baidu.com/s/1xbscrwU26Soynh83PQ-Pfw">https://pan.baidu.com/s/1xbscrwU26Soynh83PQ-Pfw</a></p><p>互联网超级地图合集高清电子版（62张）<br><a href="https://pan.baidu.com/s/10tqv0jyDFbw1Sa6YrNxY1w">https://pan.baidu.com/s/10tqv0jyDFbw1Sa6YrNxY1w</a><br>cpts</p><p>068_清华EMBA课程<br><a href="https://pan.baidu.com/s/1bxMAm1qQWFRy3JICYO3-LQ">https://pan.baidu.com/s/1bxMAm1qQWFRy3JICYO3-LQ</a><br>0dez</p><p>经得起各种诱惑和烦恼的考验，才算达到了最完美的心灵健康。——弗·培根</p><p>人人都能听懂的项目管理课<br><a href="https://www.aliyundrive.com/s/RNDwuCqcoKo">https://www.aliyundrive.com/s/RNDwuCqcoKo</a><br>最全行业地图<br><a href="https://www.aliyundrive.com/s/XdtMBJfJJLE">https://www.aliyundrive.com/s/XdtMBJfJJLE</a></p><p>在无效的市场中赚有效的钱<br><a href="https://mp.weixin.qq.com/s/EGpbVN_nWWpD9HdWVgSQdA">https://mp.weixin.qq.com/s/EGpbVN_nWWpD9HdWVgSQdA</a><br>懂分析趋势、政策、指数、市场、行业与企业。</p><p>学知识和种树一样，在前期可能只是浇水，浇肥料，再浇水，重复性的动作可能会让人感觉很乏累。<br>学知识也是如此，可能在前期会很累，但是当它生根，发芽，结出果实时，才会发现，原来前面浇的肥料，真的有用。<br>你输入的每个知识，都是在种一棵树，在未来的某一天，它们终会发芽结果。<br>愿你我都能等到，它茁壮成长的一天。<br>成长的关键在于外部的信息促进，信息就是很好的肥料，当你拥有优质的信息源，有优质的信息进行学习，吸收时，成长才会与之而来。</p><p>生财有术<br><a href="https://www.aliyundrive.com/s/NFv1tcM5KZa">https://www.aliyundrive.com/s/NFv1tcM5KZa</a><br><a href="https://www.aliyundrive.com/s/nPksQK7N9FD">https://www.aliyundrive.com/s/nPksQK7N9FD</a><br>生财日历2020 生财有术2020高清完整pdf.pdf<br><a href="https://pan.baidu.com/s/1sGSiOHOReNwreqwbi3kCIw">https://pan.baidu.com/s/1sGSiOHOReNwreqwbi3kCIw</a><br><a href="https://pan.baidu.com/s/1d_IQv_ilccK0o9dG7S7RTg">https://pan.baidu.com/s/1d_IQv_ilccK0o9dG7S7RTg</a><br>王叔也加入了生财社群，然后在实战，目前社群人数4k人，变现数打码<br>总结：<br>做啥都需要圈子和执行力才能看到更远</p><p>项目可参考生财有术-圈子<br><a href="https://www.shengcaiyoushu.com/">https://www.shengcaiyoushu.com/</a><br><a href="http://search.shengcaiyoushu.com/">http://search.shengcaiyoushu.com/</a><br>我从生财有术学到 2 件事，彻底破除了赚钱焦虑<br><a href="https://baijiahao.baidu.com/s?id=1690669306129654073">https://baijiahao.baidu.com/s?id=1690669306129654073</a><br>从状态上看，人为赚钱焦虑，可以分为 2 点 ——<br>1 现在赚钱少，所以焦虑2 未来赚钱少，所以焦虑<br>事实上，大部分人都是为后者焦虑，而不是前者。<br>因为「现在赚钱少」，这是一个事实。一件已经发生的事情，人们普遍不会焦虑。<br>我们更担心的是，这件事情会造成什么巨大的影响？<br>换句话说，我们看到自己现在赚钱少，会莫名的担心，自己未来是不是还会赚钱少？<br>如果是的话，那就太恐怖了。<br>因为一想到未来要结婚、要生孩子、要买房、买车、教育，而自己却没有足够的收入来负担，一股未知的恐惧就扑面而来，焦虑就由此产生。<br><a href="https://www.kindkp.com/">https://www.kindkp.com/</a><br>生财有术解答问题：<br><a href="https://www.zhihu.com/question/59757721/answer/1039064118">https://www.zhihu.com/question/59757721/answer/1039064118</a><br><a href="https://www.zhihu.com/question/450094644/answer/1788506393">https://www.zhihu.com/question/450094644/answer/1788506393</a> 要看下面的回答帖子<br><a href="https://zhuanlan.zhihu.com/p/363029936">https://zhuanlan.zhihu.com/p/363029936</a><br><a href="https://zhuanlan.zhihu.com/p/362142297">https://zhuanlan.zhihu.com/p/362142297</a><br>生财日历2020完整版.pdf<br><a href="https://max.book118.com/html/2020/1220/6040155020003040.shtm">https://max.book118.com/html/2020/1220/6040155020003040.shtm</a><br>知识星球2021生财有术第5期价值2465元<br><a href="https://52kt.net/7978.html">https://52kt.net/7978.html</a><br><a href="https://www.aliyundrive.com/s/RHBMWAAqBay">https://www.aliyundrive.com/s/RHBMWAAqBay</a><br>2021年第五期生财有术（全）<br><a href="http://www.mmfang.cc/">http://www.mmfang.cc/</a><br>只要我们能找到用户需求，就是找到了一件能赚钱的事情。</p><p>字节重新调整产品线<br>抖音、大力教育、飞书、火山引擎、朝夕光年和TikTok</p><p><a href="https://www.jiguang.cn/portal/">https://www.jiguang.cn/portal/</a><br>开发者后台-智能营销有大数据人群分析</p><p>海参，石斛，鱼胶，白兰氏鸡精<br>日常枸杞和人参水补气，戒色吧，少吃冷的和甜食，白开水</p><p>币圈半个月，人间一辈子。<br>10.22，投1000买入狗自拉，3天500倍，本金变了50万。<br>10.28，把60万投入自拉狗，一小时10倍，本金变600万。<br>11.2日，600万投入鱿鱼，3天500倍，本金变3个亿。<br>11.4日，3个亿投入老鹰，十分钟，貔貅跑路。归零。<br>11.5日，睡桥洞 </p><p>南孚5号一次性电池(碱性电池、聚能环技术)的额定电压为1.5V ,1500毫安。可用在电动玩具、剃须刀、遥控器等家用设备中。 南孚5号镍氢充电电池是标有额定容量的,数码型的南孚5号镍氢充电电池额定容量在2450mAh左右,耐用型的南孚5号镍氢充电电池额定容量在1650mAh左右。<br>需求：<br>电池一起充虽然都是绿灯，但是实际上没充满，用电量检测<br>需要对每个电池有精准的充电状态，独立通道<br>飞狮（Camelion) 八槽多功能LCD智能液晶显示快速充电套装(8节5号2700毫安充电电池）玩具/KTV麦克风/闪光灯<br><a href="https://item.jd.com/100005826983.html">https://item.jd.com/100005826983.html</a><br>原理跟红绿灯其实也差不多，充电确实挺快的，2700的电池三个多小时就充好了，有2种接口，C口很方便，不过测试了下不支持20W以上的C2C的大功率充电器，最后还是用U2C的10W充电器，不过速度也足够快了<br><a href="https://item.jd.com/100005826981.html">https://item.jd.com/100005826981.html</a><br>飞狮（Camelion) 八槽多功能LCD智能液晶显示快速充电器（单充电器）可充1号/2号/5号/7号 镍氢/镍镉充电电池<br>实测<br>买的是充电器和5号7号各4个，有电源显示充满进度比较舒服，送的是TP-C线，自己准备个充电头即可。</p><p>互联网产品各种会员购买<br>购物类<br>JD-茅台-99-ok30元无限制卷<br>TB-全家桶-优酷网易云饿了么天猫-88-ok<br>工具类-日常下载还是要的<br>wps<br><a href="https://www.jd.com/pinpai/1-4053-408950.html">https://www.jd.com/pinpai/1-4053-408950.html</a>  329<br>WPS超级会员3年卡1116天 加送6个月 PPT等模板资源 客服消息自动发兑换码 秒到账<br>JD 280 两年<br>淘宝 两年 300 加送6个月<br>淘宝 179 年卡<br>迅雷会员<br>玩客云-ok+BT<br>—官网3年送6个月339-ok<br>百度云<br>百度网盘超级会员SVIP年卡12个月自动充值 官方直充到账 178-ok<br>一年 298<br><a href="https://search.jd.com/Search?keyword=%E7%99%BE%E5%BA%A6%E4%BA%91%E8%B6%85%E7%BA%A7%E4%BC%9A%E5%91%98">https://search.jd.com/Search?keyword=百度云超级会员</a> 年<br>淘宝的 228<br>视频类-貌似没时间看了，而且淘宝+优酷了<br>爱优腾B站<br>音频类<br>酷我-破解的<br>网易云<br>山姆会员店-ok<br>其他联名<br>爱企查<br>吃饭类<br>美团会员<br>饿了么-TB会员自带<br>超级会员类<br><a href="https://s.taobao.com/search?q=%E4%BC%9A%E5%91%98+%E5%85%85%E5%80%BC">https://s.taobao.com/search?q=会员+充值</a><br><a href="https://s.taobao.com/search?q=%E8%B6%85%E7%BA%A7%E4%BC%9A%E5%91%98">https://s.taobao.com/search?q=超级会员</a><br>P站？<br>总费用<br>99+88+178+329=694</p><p>早上开车想到的，烧钱不是烧品牌就是烧连接<br>C2C<br>B2C<br>B2B2C<br>M2C<br>M2B2C<br>资本都在往源头前置，垄断源头，流量，生产，销售，服务<br>操盘手需要精通复盘和预判</p><p><a href="https://bigbenthings.com/">https://bigbenthings.com/</a><br>大班哥的事 - 各式 APP 開箱/實測<br>蛮好玩的一个站，实测</p><p><a href="https://earning.tw/">https://earning.tw/</a><br>懒人经济学</p><p><a href="https://github.com/shellsec/regular-investing-in-box">https://github.com/shellsec/regular-investing-in-box</a><br>定投 —— 大佬的自我修养</p><p>Tradeingview.com</p><p><a href="https://www.zhihu.com/search?type=content&amp;q=%E4%B9%A6%E5%8D%95">https://www.zhihu.com/search?type=content&amp;q=%E4%B9%A6%E5%8D%95</a><br>书单-》之前撸的口袋阅和kindle+wifi热点<br><a href="https://www.tuicool.com/articles/FfYZZre">https://www.tuicool.com/articles/FfYZZre</a><br>首先，成为一个好的投资者，需要具备资金、判断、耐心、运气4个因素。<br>一级基金投资要具备看底层项目的判断能力。判断基金也要预判未来收益率，保持定期比对更新，对优质项目要主动跟踪。<br>二级投资要结合分析情况，“资金＋心理作用＝发展趋势”，估值的评估其实是一项心理变量。<br>第二，长期跟踪和研究，拥抱变化。<br>要保持长期深入研究，才能沉淀出自己的认知体系，从而理解变化，具有洞察力和判断力，并抓住先机。<br>当然，对事物本质的深刻研究，方法见仁见智。我们看趋势，不只看1-2年，而是要看5-10年。<br>同时，为了增加确定性，我们看趋势也会结合国家的发展战略，“在时代发展的潮流中发展”，国家支持的产业发展方向往往是雪厚坡长的好赛道。<br>比如，国家现在强调科技自立自强，提出碳达峰、碳中和目标，建设健康中国，这些对应着在硬科技、新能源和生物医药等赛道将有历史性机会。<br>同时，我们还会结合社会需要，看一个项目、一个企业有没有创造价值，有没有解决实际问题。只要能够给社会持续创造价值，公司就会有成长性，就有投资意义。<br>要研究新的趋势，提升全员认知，努力从国家政策、产业趋势、社会价值、科创前沿等方面早一些发掘增长型企业。<br>只有这样，才有机会早于市场和他人发现优秀的企业。<br>第三，设立一个市场化的有效激励机制。<br>好的激励机制才能促进团队的拼劲，干劲，发挥主观能动性，最终形成利益一致的绑定，构建内部核心竞争力。<br>打造学习型组织，全员提升认知水平，家办对团队的跟投机制需灵活开放。<br>第四，学会分享和帮助。<br>生活的秘诀是给予，强者的标志也是给予，而非索取。与他人分享，会提升你的快乐体验，而且会重新系统化自己的思考，这是一个反省自己的良好契机。<br>把自己置于一种给予别人的状态，每天找到一种方式，让自己感激别人更多。当你每天都能给予别人时，说明你每天都在进步。<br>第五，学会复盘，多学习交流。<br>家办职业经理人要经常见优秀人才，交流学习。每个项目、每次投资都要复盘，与高手学习才能形成专业化的判断能力。能力进化、认知提升，最重要的阶梯就是学习。学习不停歇，成长进步不停歇，给予不停歇。<br>第六，建立一个高效的内部沟通和审批流程机制。<br>线上办公、审批，拨付资金，系统化流程管理，这样能提升决策和执行效率，也可以很好地控制风险。<br>第七，长期价值投资。<br>由于家办通常为自有资金，因此投资时多以长期发展的角度看待问题，可以经受周期和波动。</p><p>门槛越低，参与感越强，付费率越高<br><a href="https://www.niaogebiji.com/article-82156-1.html">https://www.niaogebiji.com/article-82156-1.html</a><br>「终身学习」的职场人，该如何搭建你的知识系统</p><p>数据运营增长黑客-鸟哥<br><a href="https://www.niaogebiji.com/pc/article/search?keyword=%E6%95%B0%E6%8D%AE">https://www.niaogebiji.com/pc/article/search?keyword=%E6%95%B0%E6%8D%AE</a></p><p>战略层，战术层，执行层</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>RobotFrameWork+Appium+python3 MAC环境安装</title>
    <link href="/2021/11/01/RobotFrameWork+Appium+python3%20MAC%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85/"/>
    <url>/2021/11/01/RobotFrameWork+Appium+python3%20MAC%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85/</url>
    
    <content type="html"><![CDATA[<p>RobotFrameWork+Appium+python3 MAC环境安装</p><p>Robotframework的官方nokia公司已经推出了支持Python3的图形界面编辑工具RED<strong>，</strong>下载链接：<br><a href="https://links.jianshu.com/go?to=https://github.com/nokia/RED">https://github.com/nokia/RED</a></p><h3 id="1、安装python3（有很多方法，这里只提供一种，已安装的跳过）"><a href="#1、安装python3（有很多方法，这里只提供一种，已安装的跳过）" class="headerlink" title="1、安装python3（有很多方法，这里只提供一种，已安装的跳过）"></a>1、安装python3（有很多方法，这里只提供一种，已安装的跳过）</h3><h4 id="安装homebrew："><a href="#安装homebrew：" class="headerlink" title="安装homebrew："></a>安装homebrew：</h4><p>/usr/bin/ruby -e “$(curl -fsSL <a href="https://raw.githubusercontent.com/Homebrew/install/master/install">https://raw.githubusercontent.com/Homebrew/install/master/install</a>)”</p><h4 id="检查brew："><a href="#检查brew：" class="headerlink" title="检查brew："></a>检查brew：</h4><p>brew doctor       #输出：“Your system is ready to brew” 表示安装成功</p><h4 id="查找python3"><a href="#查找python3" class="headerlink" title="查找python3:"></a>查找python3:</h4><p>brew search python3</p><h4 id="安装python3"><a href="#安装python3" class="headerlink" title="安装python3:"></a>安装python3:</h4><p>brew  install python3</p><h4 id="配置环境变量："><a href="#配置环境变量：" class="headerlink" title="配置环境变量："></a>配置环境变量：</h4><p>open -e .bash_profile</p><p>打开的文件内粘贴以下内容</p><p>    PATH=/usr/local/Cellar/python/3.6.5/bin:${PATH} </p><p>    export PATH</p><p>保存关闭文件，输入  source /etc/.bash_profile并回车，使配置生效</p><h3 id="2、安装JAVA-SDK（已安装的跳过）"><a href="#2、安装JAVA-SDK（已安装的跳过）" class="headerlink" title="2、安装JAVA SDK（已安装的跳过）"></a>2、安装JAVA SDK（已安装的跳过）</h3><h4 id="下载java："><a href="#下载java：" class="headerlink" title="下载java："></a>下载java：</h4><p>从<a href="https://link.jianshu.com/?t=http://www.oracle.com/technetwork/java/javase/downloads/index.html">官网</a>下载需要的JDK版本</p><p>链接：<a href="https://link.jianshu.com/?t=http://www.oracle.com/technetwork/java/javase/downloads/">http://www.oracle.com/technetwork/java/javase/downloads/</a></p><h4 id="配置环境变量：-1"><a href="#配置环境变量：-1" class="headerlink" title="配置环境变量："></a>配置环境变量：</h4><p>cd ~</p><p>open e .open .bash_profile</p><p>打开配置文件</p><p>在文件中加入以下配置</p><p>JAVA_HOME=/Library/Java/JavaVirtualMachines/jdk1.8.0_101.jdk/Contents/Home/    #配置为当前环境实际java SDK地址</p><p>CLASSPAHT=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar</p><p>PATH=$JAVA_HOME/bin:$PATH:</p><p>export JAVA_HOME</p><p>export CLASSPATH</p><p>export PATH</p><p>修改文档之后，保存退出，输入  source /etc/.bash_profile并回车，使配置生效</p><h3 id="3、安装Robotframework-3-0"><a href="#3、安装Robotframework-3-0" class="headerlink" title="3、安装Robotframework 3.0"></a>3、安装Robotframework 3.0</h3><p>pip install robotframework</p><h3 id="4、安装RED："><a href="#4、安装RED：" class="headerlink" title="4、安装RED："></a>4、安装RED：</h3><p><a href="https://links.jianshu.com/go?to=https://github.com/nokia/RED">https://github.com/nokia/RED</a></p><h3 id="5、安装Appium"><a href="#5、安装Appium" class="headerlink" title="5、安装Appium"></a>5、安装Appium</h3><p>Appium官网：<a href="http://appium.io/">http://appium.io/</a></p><h3 id="6、安装Android-Studio"><a href="#6、安装Android-Studio" class="headerlink" title="6、安装Android Studio"></a>6、安装Android Studio</h3><p>主要目的是提供打包工具和Android SDK，提供adb命令支持，安装完成要给adb 命令添加</p><p>环境变量配置，加在java配置之下：</p><p>export ANDROID_HOME=/Users/cynthia/Library/Android/sdk</p><p>export ANDROID_TOOLS=”$ANDROID_HOME/tools/“</p><p>export ANDROID_BUILD_TOOLS=”$ANDROID_HOME/build-tools/28.0.3/“</p><p>export PATH=”$ANDROID_HOME/:$PATH”</p><p>export PATH=”$ANDROID_HOME/platform-tools/:$PATH”</p><p>export PATH=”$ANDROID_HOME/tools/:$PATH”</p><p>export PATH=”$ANDROID_HOME/emulator/:$PATH”</p><p>export PATH=”$ANDROID_BUILD_TOOLS:$PATH”</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><br></code></pre></td></tr></table></figure><p>配置完成，保存退出，输入  source /etc/.bash_profile并回车，使配置生效</p><p>命令行检查是否生效：</p><p>echo $JAVA_HOME</p><p>/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home</p><p>echo $ANDROID_HOME</p><p>/Users/cynthia/Library/Android/sdk</p><p>文件配置完成后示例（我本人的）：</p><p><img src="https://cdn.jsdelivr.net/gh/shellsec/shellsec_gitblog_imgdoc//img/image2020-4-7_14-0-23.png"></p><h3 id="7、安装wxPython"><a href="#7、安装wxPython" class="headerlink" title="7、安装wxPython"></a>7、安装wxPython</h3><p>用于支持robotframework的IDE ride，下载地址选择对应版本即可  <a href="http://wxpython.org/download.php#stable">http://wxpython.org/download.php#stable</a></p><h3 id="8、robotframework-ride安装："><a href="#8、robotframework-ride安装：" class="headerlink" title="8、robotframework-ride安装："></a>8、robotframework-ride安装：</h3><p>pip install robotframework-ride</p><p>pip install robotframework-ride -i <a href="http://mirrors.aliyun.com/pypi/simple">http://mirrors.aliyun.com/pypi/simple</a> –trusted-host <a href="http://mirrors.aliyun.com/">mirrors.aliyun.com</a></p><p>也可以用附件文件</p><p><img src="https://cdn.jsdelivr.net/gh/shellsec/shellsec_gitblog_imgdoc//img/robotframework-ride-1.7.4.1.zip"></p><h3 id="9、Appium-Python-Client安装-："><a href="#9、Appium-Python-Client安装-：" class="headerlink" title="9、Appium-Python-Client安装 ："></a>9、Appium-Python-Client安装 ：</h3><p>pip install Appium-Python-Client</p><p>pip install Appium-Python-Client -i <a href="http://mirrors.aliyun.com/pypi/simple">http://mirrors.aliyun.com/pypi/simple</a> –trusted-host <a href="http://mirrors.aliyun.com/">mirrors.aliyun.com</a></p><h3 id="10、robotframework-appiumlibrary安装："><a href="#10、robotframework-appiumlibrary安装：" class="headerlink" title="10、robotframework appiumlibrary安装："></a>10、robotframework appiumlibrary安装：</h3><p> pip install robotframework-appiumlibrary</p><p>pip install robotframework-appiumlibrary -i <a href="http://mirrors.aliyun.com/pypi/simple">http://mirrors.aliyun.com/pypi/simple</a> –trusted-host <a href="http://mirrors.aliyun.com/">mirrors.aliyun.com</a></p><h3 id="11、robotframework-selenium2library安装："><a href="#11、robotframework-selenium2library安装：" class="headerlink" title="11、robotframework-selenium2library安装："></a>11、robotframework-selenium2library安装：</h3><p>pip install robotframework-selenium2library</p><h3 id="12、设置Appium"><a href="#12、设置Appium" class="headerlink" title="12、设置Appium"></a>12、设置Appium</h3><p>SDK自动化用例是使用命令行启动Appium，可不用设置</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>残酷事实：程序员没有真正的「睡后收入」，解决办法是利用「复利思维」放大「复业收入」，MBA 学历</title>
    <link href="/2021/10/28/%E6%AE%8B%E9%85%B7%E4%BA%8B%E5%AE%9E%EF%BC%9A%E7%A8%8B%E5%BA%8F%E5%91%98%E6%B2%A1%E6%9C%89%E7%9C%9F%E6%AD%A3%E7%9A%84%E3%80%8C%E7%9D%A1%E5%90%8E%E6%94%B6%E5%85%A5%E3%80%8D%EF%BC%8C%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95%E6%98%AF%E5%88%A9%E7%94%A8%E3%80%8C%E5%A4%8D%E5%88%A9%E6%80%9D%E7%BB%B4%E3%80%8D%E6%94%BE%E5%A4%A7%E3%80%8C%E5%A4%8D%E4%B8%9A%E6%94%B6%E5%85%A5%E3%80%8D%EF%BC%8CMBA%20%E5%AD%A6%E5%8E%86/"/>
    <url>/2021/10/28/%E6%AE%8B%E9%85%B7%E4%BA%8B%E5%AE%9E%EF%BC%9A%E7%A8%8B%E5%BA%8F%E5%91%98%E6%B2%A1%E6%9C%89%E7%9C%9F%E6%AD%A3%E7%9A%84%E3%80%8C%E7%9D%A1%E5%90%8E%E6%94%B6%E5%85%A5%E3%80%8D%EF%BC%8C%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95%E6%98%AF%E5%88%A9%E7%94%A8%E3%80%8C%E5%A4%8D%E5%88%A9%E6%80%9D%E7%BB%B4%E3%80%8D%E6%94%BE%E5%A4%A7%E3%80%8C%E5%A4%8D%E4%B8%9A%E6%94%B6%E5%85%A5%E3%80%8D%EF%BC%8CMBA%20%E5%AD%A6%E5%8E%86/</url>
    
    <content type="html"><![CDATA[<p>残酷事实：程序员没有真正的「睡后收入」，解决办法是利用「复利思维」放大「复业收入」<br><a href="https://mp.weixin.qq.com/s?__biz=MjM5NDkxMTgyNw==&amp;mid=2653070203&amp;idx=1&amp;sn=fb49f40436c732278b58684ce10fa224&amp;utm_source=tuicool&amp;utm_medium=referral">https://mp.weixin.qq.com/s?__biz=MjM5NDkxMTgyNw==&amp;mid=2653070203&amp;idx=1&amp;sn=fb49f40436c732278b58684ce10fa224&amp;utm_source=tuicool&amp;utm_medium=referral</a></p><p>这个思维可以支持 利用「复利思维」放大「复业收入」<br>复业 = 收入 * 技能 <em>*</em> 新知 * 人脉**</p><p>比如我自身，因为我自己已经坚持写作了 8 年，取得了一些成绩，进入一个新的平台，我都会用我的这项技能去创造财富。不管是复业赚赚赚，还是传播写作价值，其实都是写作这项技能多重变现，它们都是我的复业。</p><p>比如：你是程序员，你出了上班敲代码挣钱之外，完全可以根据自己敲代码的主业，去拓展一个复业，比如：在网上录技术视频课程出售，比如写技术文章，分享给大家，传播技术价值，这都可以赚钱。</p><p>比如：你是非常擅长使用 office 办公软件的行政人员，你可以依据你的主业，衍生复业，平时业余时间可以做 PPT 美化师，可以做 Excel 整理师，深刻可以录制 office 办公软件使用技巧视频课程去卖，都可以赚钱。</p><p>公众号：非著名程序员</p><p>故事参考：# 80后清北夫妻淘宝卖女装，收获了一个IPO<br><a href="http://www.chinaventure.com.cn/news/80-20211028-365191.html?utm_source=tuicool&utm_medium=referral">http://www.chinaventure.com.cn/news/80-20211028-365191.html</a></p><p>干货重点：<br>戎美股份的背后，是一对80后学霸夫妻。</p><p>温迪是一位土生土长的江苏女孩，她的家乡常熟市是中国服装产业外贸基地，拥有中国十大服装专业市场之一的“常熟服装城”，因此她自小就对服装行业耳濡目染。</p><p>2006年，温迪决定开一家淘宝店，取名“戎美”。凭借地理优势，温迪经常能拿到一些当地工厂的外贸精品尾单，并以现货秒杀的形式进行销售，也因此积累了戎美品牌的最初粉丝群体和客户。2009 年6月，温迪取得【清华大学MBA 学历】后，开始全职运营淘宝店铺。</p><p>随着戎美的品牌口碑在淘宝平台的逐步形成和业务规模的不断增长，温迪不甘于只是“小打小闹”，于是在2012年3月，温迪首先拉来了丈夫郭健，共同设立了戎美有限。</p><p>郭健虽然没有服装行业的从业经验，但对金融、交易十分了解。郭健本科毕业于北大生物学专业，有清华工商管理硕士的学位。毕业后曾在大庆石化担任项目经理，并先后在BP、Cargill、Glencore等世界500强公司担任分析员、交易员职位。</p><p>戎美有限成立后，温迪主要负责公司的企划设计相关工作，并以其为核心，组建了公司的企划与设计团队。郭健则主要负责组建和管理公司的电商运营团队，并利用其交易员生涯中积累的数据分析能力管理品牌的线上推广，同时还负责管理和维护公司的供应商网络。自此，戎美开启了公司化运营之路。</p><p><strong>14年做出一家上市公司，年入8亿</strong></p><p>先活着，再想飞<br>很多是想着飞，都没怎么想活</p><p>放弃上海60w年薪搏一张绿卡，值吗？<br><a href="https://www.tuicool.com/articles/vUFBzmJ">https://www.tuicool.com/articles/vUFBzmJ</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title></title>
    <link href="/2021/10/28/%E7%A9%BA/"/>
    <url>/2021/10/28/%E7%A9%BA/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>2020年_MBA_书单 学习_MBA课程_前必读书目清单，建议收藏</title>
    <link href="/2021/10/28/%E5%AD%A6%E4%B9%A0_MBA%E8%AF%BE%E7%A8%8B_%E5%89%8D%E5%BF%85%E8%AF%BB%E4%B9%A6%E7%9B%AE%E6%B8%85%E5%8D%95%EF%BC%8C%E5%BB%BA%E8%AE%AE%E6%94%B6%E8%97%8F/"/>
    <url>/2021/10/28/%E5%AD%A6%E4%B9%A0_MBA%E8%AF%BE%E7%A8%8B_%E5%89%8D%E5%BF%85%E8%AF%BB%E4%B9%A6%E7%9B%AE%E6%B8%85%E5%8D%95%EF%BC%8C%E5%BB%BA%E8%AE%AE%E6%94%B6%E8%97%8F/</url>
    
    <content type="html"><![CDATA[<p>书单必读<br><a href="https://www.zhihu.com/search?type=content&amp;q=%E4%B9%A6%E5%8D%95">https://www.zhihu.com/search?type=content&amp;q=%E4%B9%A6%E5%8D%95</a></p><p>最近有一位出发，考入交大MBA的学员和我们说，他发现刚入学时，每个人的商业知识和思维认知水平差距非常大，如果把他各位MBA在读同学的商业认知和运作能力拿车速作比喻的话，那相当于马车和高铁的距离。</p><p>这也让我深刻意识到：对商业更了解的人能更能快速适应MBA课程和生活，可以迅速吸收知识，收获更大；同时商业知识的认知绝不只是在MBA入学后才开始的。</p><p>为了不和大牛同学产生太大的差距，最近在帮助大家紧张备考MBA联考的同时，也收集整理了一些大咖推荐的值得一读的书籍，供大家在踏入MBA商学院前恶补一下。</p><p><strong>必读书单之个人成长 &amp; 思维灵感类</strong></p><p><strong>《思维导图》</strong> —<strong>陈国钦</strong></p><p>思维导图法就是一种生活的心法及技法，陈国钦著的《思维导图（提升你的职场核心竞争力）》是其任跨国企业副总经理、HP亚洲经理人等的经验浓缩。通过学习后，工作效率提升很快，不论在消化大量信息、团队沟通、演讲或学习上都能快速抓到重点，并为公司带来百亿业绩。本书对思维能力的锻炼帮助很大，让你在提前面试中侃侃而谈，脱颖而出。</p><p><strong>《疯狂的简洁》</strong>—肯·西格尔</p><p>这本书关注的是创意和流程。它不仅关注如何创造最好的作品，如何为它争得发展空间，也关注如何高效运作以获得更圆满的结果。作者曾担任宝马、IBM、NeXT和苹果公司的创意总监，与史蒂夫·乔布斯共事17年，参与了苹果“不同凡想”广告的制作、iMac的命名等苹果历史。</p><p><strong>《从0到1》</strong>—<a href="https://link.zhihu.com/?target=https://baike.baidu.com/item/%25E5%25BD%25BC%25E5%25BE%2597%25C2%25B7%25E8%2592%2582%25E5%25B0%2594">彼得·蒂尔</a>、<a href="https://link.zhihu.com/?target=https://baike.baidu.com/item/%25E5%25B8%2583%25E8%258E%25B1%25E5%2585%258B%25C2%25B7%25E9%25A9%25AC%25E6%2596%25AF%25E7%2589%25B9%25E6%2596%25AF">布莱克·马斯特斯</a></p><p>《从0到1》无疑是最近最棒的创业思维书! 硅谷创投教父、PayPal创始人<a href="https://link.zhihu.com/?target=https://baike.baidu.com/item/%25E5%25BD%25BC%25E5%25BE%2597%25C2%25B7%25E8%2592%2582%25E5%25B0%2594">彼得·蒂尔</a>、<a href="https://link.zhihu.com/?target=https://baike.baidu.com/item/%25E5%25B8%2583%25E8%258E%25B1%25E5%2585%258B%25C2%25B7%25E9%25A9%25AC%25E6%2596%25AF%25E7%2589%25B9%25E6%2596%25AF/16969055">布莱克·马斯特斯</a>写了这本人人都能看懂的资本、创业专著!在这里你会明白：从0到1，就是创新;从1到N，是不断的模仿。创新：不是从1到N，而是从0到1。</p><p><strong>《异类》</strong>—马尔科姆·格拉德威尔</p><p>了解成功的真正奥秘，以及人们成功的方式。马尔科姆·格拉德威尔揭示了10,000小时定律。书中提到努力和运气（家庭出身、出生地、甚至出生日期）在成功的公式当中都是划等号的。</p><p><strong>《引爆点》</strong>—马尔科姆·格拉德威尔</p><p>马尔科姆·格拉德威尔向我们揭示了当一个趋势或者一个想法到达了神奇的“引爆点”以后，会像火山一样喷发出来。</p><p><strong>《从优秀到卓越》</strong>—吉姆·柯林斯</p><p>作者用了长达5年的时间去研究优秀的公司和卓越的公司的差别。这本书能教会你从长远的角度运营公司而不是给公司寻找偏方。</p><p><strong>《习惯的力量》</strong>—查尔斯·都希格</p><p>通过学习习惯养成的科学原理，可以改掉你的一些坏习惯。书中同样讲到了公司是如何使用习惯来销售产品的故事。</p><p><strong>必读书单之工作效率类</strong></p><p><strong>《管理学》</strong> —<strong>罗宾斯</strong></p><p>世界上最畅销的管理学教科书，自出版以来，持续畅销数十年，受到世界各地管理学界师生和企业界管理者的普遍好评。作者罗宾斯博士是世界上管理学与组织行为学领域最畅销教科书的作者，他的书被1000多所美国高校选用，并被译为16种文字在世界各地广泛使用。</p><p><strong>《每周工作4小时》</strong>—蒂姆·费里斯</p><p>通过更少地工作挣更多的钱这一新奇的想法，不论你是不是企业家，你都应该读读这本书。</p><p><strong>《复合效应》</strong>—达伦·海迪</p><p>这本书是引领卓越人生的指南，里面的公式值得一用。</p><p><strong>《80/20法则》</strong>—理查德·科赫</p><p>这本书提到集中20%的努力到关键的任务上，能够产生80%的结果。</p><p><strong>必读书单之商业类</strong></p><p><strong>《商业的本质》</strong>—杰克·韦尔奇</p><p>这是“全球第一CEO”杰克·韦尔奇继管理圣经《赢》之后，潜心十年的封笔之作，是对过去十几年商业变革的反思和总结。他指出，科技革命给市场带来了巨大变化和诸多杂音，但作为管理者，不能迷失商业中最核心的东西。在如今的新商业环境下，要想“赢”，就必须遵从商业的规则，回归商业的本质。</p><p><strong>《大败局》</strong>—吴晓波</p><p>本书被评为“影响中国商业界的20本图书”之一，是关于中国企业失败的MBA式教案！吴晓波通过对近百位影响中国企业发展的重要人物的专访，探寻中国企业“中国式失败”的基因。</p><p><strong>《精益创业:新创企业的成长思维》</strong>—埃里克・莱斯</p><p>《精益创业》是创业管理领域的重磅之作，也绝对有潜质经受时间的考验，成为创业管理的经典图书。这本书被誉为市面上最为正确描写硅谷的书籍，它提供了不同于传统管理理论的、针对新创公司或大企业新创业务的科学管理模式。</p><p><strong>《终极问题：创造好利润，促进真成长》</strong>—赖克哈尔德</p><p>本书是写给那些希望摆脱公司两难困境、真正获取利润，并实现企业成长的企业领导的。是一本阐述客户关系和利润增长之间关系的书，本书透彻地阐述了良性利润和不良利润之间的区别，它将改变我们衡量企业成功与否的看法。</p><p><strong>《在家就能读MBA》</strong>—乔希·考夫曼</p><p>这本书包含了创业需要知道的大部分知识（或许还有更多），书中全部都是干货，语言通俗易懂。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>参考下资产配置组合</title>
    <link href="/2021/10/27/%E5%AD%A6%E4%B9%A0%E8%B5%84%E4%BA%A7%E9%85%8D%E7%BD%AE%E7%BB%84%E5%90%88/"/>
    <url>/2021/10/27/%E5%AD%A6%E4%B9%A0%E8%B5%84%E4%BA%A7%E9%85%8D%E7%BD%AE%E7%BB%84%E5%90%88/</url>
    
    <content type="html"><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/shellsec/shellsec_gitblog_imgdoc//img/%E7%BE%8E%E6%9E%97%E6%8A%95%E8%B5%84%E6%97%B6%E9%92%9F.png"></p><p>看到某社区某V写的<br>组合配置<br>配置要结合个人的财力；<br>风险承受程度；投资偏好；中长期战略等，没有同一的模式。<br>我个人采取的是如下策略：<br>1:家庭负债率控制在50%。这是风险总控的要点。负债太高，会出问题，太低，不利于发发展。<br>2:资产币种：<br>人民币与美元是8:2。美元资产主要是港股及美股，数字货币。<br>3:人民币资产：<br>房产为5，股票为3，比特币为1，茶及古钱币为1。<br>4:房产主要是一线城市及新一线城市；股票是基金为主；数字货币按热点来；茶是白茶。<br>5:今年正在减持不动产比例，增加流动资产投入。房产虽然在减持，但同时也再升级，全部换到前海新房。<br>6:股票投资除二级市场外，正在布局一级市场，即创投：参与拟上市公司的增发。这是一个潜力巨大的方向，需要集中资源去做。</p><p>家族办公室<br>股权投资、房地产REITS基金、大宗商品等投资额度，争取在美联储提前加息情况下仍然实现年化9%的回报率。<br>高信用评级且收益率相对较高的新兴市场美元债<br>高收益的结构性房地产类票据</p><p>三家基金公司主动权益类基金4682万名个人投资者共计5.65亿笔交易数据分析发现，持仓时间越长，投资者平均收益率越高，其中3个月的持仓时间是明显的分界线。持仓时长小于3个月时，平均收益率为负，盈利人数比例39.10%；超过3个月时，盈利人数占比明显提升至63.72%，平均收益率也由负转正。随着持仓时间提升，平均收益率也越高。</p><p>——深圳湾一号 据闻两种人买，拆迁和跨境电商—–<br>资产分为五大类：<br>1、现金等价物：货币基金、定期存款等<br>优点：安全、灵活 ，收益率：1.5%（无风险/波动收益）<br>缺点：收益低，面临贬值的风险<br>适用：平时应急资金</p><p>2、债权资产（固定收入类）<br>本质是借贷关系，固定的时间，固定的一笔钱，给付固定的利息。<br>按照债务人的信用等级分为ABCD四个等级，<br>AB为投资债券，例如：政府债券，银行理财产品，国内的信托；<br>CD为投机债券，例如：P2P，高利贷。<br>适用：为1-3年的目标做准备</p><p>3、股权资产<br>可以分为成熟市场，新兴市场，前沿市场，股权收益和公司业绩相挂钩。<br>优点：合理的配置可以战胜通胀<br>缺点：单一个股风险极高<br>沪深300–新兴市场—以中国股市走势为例：</p><p>特点：波动大，走势无确定性，股市走势没有和经济走势匹配。<br>原因可能有以下几点：<br>一是投资者80%的散户，跟风投资；<br>二是股市上市和退市制度，导致好的企业不能顺利上市，经营不好的企业不能退市，整个股市一潭死水，不能长期持有，不能做价值性投资；<br>三是股市分红的企业太少， 收益只能来自于买卖。<br>适用：短期的投机操作，但是对个人来说风险太高。</p><p>当然，我们的制度正在慢慢完善中，我相信不久的将来我们的股市也会有长期价值投资的机会。<br>标普500—成熟市场–以美国股市走势为代表：<br>特点：长期呈现上升趋势，股市走势和经济走势相同。</p><p>4、实物资产：房产、黄金、白银、农产品等等<br>特点：波动大，风险大，是时代发展的产物，受人的主观意识影响大。<br>实物类资产不具有内在增值动力，不可以复制，价格的上升与人的预期相关。同时变现能力太差。</p><p>5、衍生品：期货、期权等<br>特点：利用准备金的制度，使用杠杆的作用，赚取最高的收益。<br>这个就不建议普通家庭投资了，风险太高。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>图片自动人脸、场景智能识别处理和归类软件、硬盘存储保存，硬盘健康检查，数据恢复，安卓端管理图片方案</title>
    <link href="/2021/10/08/%E5%9B%BE%E7%89%87%E8%87%AA%E5%8A%A8%E4%BA%BA%E8%84%B8%E3%80%81%E5%9C%BA%E6%99%AF%E6%99%BA%E8%83%BD%E8%AF%86%E5%88%AB%E5%A4%84%E7%90%86%E5%92%8C%E5%BD%92%E7%B1%BB%E8%BD%AF%E4%BB%B6%E3%80%81%E7%A1%AC%E7%9B%98%E5%AD%98%E5%82%A8%E4%BF%9D%E5%AD%98%EF%BC%8C%E7%A1%AC%E7%9B%98%E5%81%A5%E5%BA%B7%E6%A3%80%E6%9F%A5%EF%BC%8C%E6%95%B0%E6%8D%AE%E6%81%A2%E5%A4%8D%EF%BC%8C%E5%AE%89%E5%8D%93%E7%AB%AF%E7%AE%A1%E7%90%86%E5%9B%BE%E7%89%87%E3%80%81NAS%E7%BE%A4%E8%BE%89%E6%96%B9%E6%A1%88/"/>
    <url>/2021/10/08/%E5%9B%BE%E7%89%87%E8%87%AA%E5%8A%A8%E4%BA%BA%E8%84%B8%E3%80%81%E5%9C%BA%E6%99%AF%E6%99%BA%E8%83%BD%E8%AF%86%E5%88%AB%E5%A4%84%E7%90%86%E5%92%8C%E5%BD%92%E7%B1%BB%E8%BD%AF%E4%BB%B6%E3%80%81%E7%A1%AC%E7%9B%98%E5%AD%98%E5%82%A8%E4%BF%9D%E5%AD%98%EF%BC%8C%E7%A1%AC%E7%9B%98%E5%81%A5%E5%BA%B7%E6%A3%80%E6%9F%A5%EF%BC%8C%E6%95%B0%E6%8D%AE%E6%81%A2%E5%A4%8D%EF%BC%8C%E5%AE%89%E5%8D%93%E7%AB%AF%E7%AE%A1%E7%90%86%E5%9B%BE%E7%89%87%E3%80%81NAS%E7%BE%A4%E8%BE%89%E6%96%B9%E6%A1%88/</url>
    
    <content type="html"><![CDATA[<p>图片太多，需要备份，需求升级：<br>1、按时间文件夹归类丢进去，发现找很难，没有啥索引<br>2、需要自动识别和分类，打标签功能<br>3、多盘备份</p><p>解决方案测评：<br>人脸、场景智能识别，20多万张照片自动归类，难怪群晖让人用了就离不开<br><a href="https://post.smzdm.com/p/a25dxrvq/">https://post.smzdm.com/p/a25dxrvq/</a><br>关键词：<br>弱电箱<br>DS220+<br>8T双盘=16T<br>自带的软件Photo Station<br>图片管理 自动归类<br>NAS-》2047.63元起，不含硬盘，纯系统</p><p>-》其实我只需要个自动分类的软件，处理完后备份到硬盘即可，最好带点自动P图功能</p><p>ACDSee Photo Studio Ultimate 2022 v15.0.2798 旗舰破解版+mac版<br><a href="https://masuit.com/1190">https://masuit.com/1190</a><br>ACDSee Photo Studio Ultimate是一款非常专业的电脑照片文件管理工具。软件功能非常全面，功能强劲实用，可以说是最受欢迎和最权威的照片文件助手工具。用户使用该软件，可以很容易的把照相机的拍摄照片轻松导入进电脑，帮助用户识别图片，使其自动分类，将所有的照片按照时间和大小排序，同时它还有一个最大的功能就是可以将你重复的照片轻松删除，这样不仅节省了空间还节省了很多东西，设计非常很人性化，满足不同用户的不同需求。另外，电脑小白也可以使用这个软件，这个软件操作简单，不存在技术上的问题，基本上可以说是傻瓜操作，这无疑保障工作的延续性和高效率性。</p><p>专业级图像处理工具——Serif Affinity Photo 1.10.1学习版<br><a href="https://masuit.com/1814">https://masuit.com/1814</a></p><p>软件下载TAG：<br><a href="http://www.sd173.com/picture/tuxiangzhuanhuan/">http://www.sd173.com/picture/tuxiangzhuanhuan/</a><br>ACDSee Photo Studio Professional 2022 15.0 Build<br>DxO PhotoLab 5.0.0 Build 4639 x64 激活版</p><p>多盘备份：功能越简单，硬盘越安全！方案如下：<br>1、直接买品牌类桌面硬盘，如希捷，西数，桌面硬盘<br>2、硬盘盒多盘位+裸盘+USB3.0+带休眠功能-》硬盘可以往后继续增加</p><p>需求1、<br>Seagate希捷移动硬盘10t苹果桌面外接官方旗舰店大容量存储移动盘<br><a href="https://detail.tmall.com/item.htm?id=653228996636&amp;sku_properties=5919063:6536025">https://detail.tmall.com/item.htm?id=653228996636&amp;sku_properties=5919063:6536025</a><br>1749</p><p>需求2、<br>Orico/奥睿科 2.5/3.5英寸磁盘阵列硬盘柜多双盘位机械外接扩展raid外置改sata移动通用底座架笼盒箱坞读取器<br>硬盘盒多盘位 双盒<br><a href="https://detail.tmall.com/item.htm?id=38430528843&amp;skuId=3989639785666">https://detail.tmall.com/item.htm?id=38430528843&amp;skuId=3989639785666</a><br>299<br>希捷10T氦气硬盘ST10000NM0016银河系列企业级 NAS 监控 存储10TB<br>1108*2=20T</p><p>备份方案：<br>一个盘放图片，一个盘放视频，各自X2，搭建RAID，最好状态<br>即需要4个盘位，4个盘</p><p>最后<br>需要功能强大的话可以选择NAS，多硬盘，可以手机端直接管理和预览播放</p><p>想要在手机端也可以管理的：<br>买个支持usb3.0的路由器接入硬盘，app连入即可<br>ES文件浏览器 v4.2.7.1 去除广告解锁VIP版<br><a href="https://masuit.com/1926">https://masuit.com/1926</a></p><p>其他：</p><p>硬盘健康检查<br>硬盘状态检测工具 CrystalDiskInfo 8.12.9标准版<br><a href="https://masuit.com/1377">https://masuit.com/1377</a><br>硬盘<br><a href="https://masuit.com/search?wd=%E7%A1%AC%E7%9B%98">https://masuit.com/search?wd=%E7%A1%AC%E7%9B%98</a></p><p>数据恢复<br>数据恢复精灵 付费版<br><a href="https://www.eassos.cn/cr/">https://www.eassos.cn/cr/</a><br>恢复<br><a href="https://masuit.com/search?wd=%E6%81%A2%E5%A4%8D">https://masuit.com/search?wd=%E6%81%A2%E5%A4%8D</a></p><p>补充：<br>以前，360云盘号称免费，并且有个每日签到领随机大小的云盘空间。我就注册了四个云盘账号。我的主号每天签到，空间总量我记得到了100T以上。然后那段时间就把自己每次拍照的RAW文件，以及自己玩PT时下载的东西上传360云盘，前后一共上传了将近20T，这是我做的蠢事之一。蠢事之二是，我把RAW文件给压缩了，做成了带密码的RAR文件。后来的事大家都知道了，360云盘宣布退出服务。我买了几个台式机硬盘，试图以5kb/s的速度疯狂下载，然后直到360云盘服务彻底不能用，我的数据大概下载了不到一半。</p><p>为什么问阿里云盘我却在说360云盘？</p><p>1.没有免费的互联网服务，这也是我至今始终不敢再把自己的数据放到我自己百度云盘账号的原因，有些事情经历过一次就怕了。</p><p>2.个人隐私。当初考虑到个人隐私才把所有个人数据都做成了带密码的RAR，以阿里系在个人隐私保护方面的互联网口碑，我个人是不放心的。</p><p>从360云盘事件以后，我的个人数据就坚持用硬盘进行多重备份了，这样放在手上省心又靠得住。</p><p>综上所述，不是不想用，是真的不敢用啊！</p><p>要上云，除非数据加密传输，否则都是裸奔~<br>百度云<br><a href="https://pan.baidu.com/">https://pan.baidu.com</a><br>阿里云盘<br><a href="https://www.aliyundrive.com/">https://www.aliyundrive.com/</a></p><p>总结：<br>机械的东西还是很容易坏，修复是昂贵的！除非放动作片~<br>所以做好日常备份是非常重要的！</p><p>20211026<br>买了群辉DS218+这个产品一年，原以为我会替代百度网盘成为我的主要生产力工具一部分，没想到时至今日，我又默默续费了百度网盘。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>楼顶天台玩啥_可玩性活动拆解分析</title>
    <link href="/2021/09/30/%E6%A5%BC%E9%A1%B6%E5%A4%A9%E5%8F%B0%E7%8E%A9%E5%95%A5_%E5%8F%AF%E7%8E%A9%E6%80%A7%E6%B4%BB%E5%8A%A8%E6%8B%86%E8%A7%A3%E5%88%86%E6%9E%90/"/>
    <url>/2021/09/30/%E6%A5%BC%E9%A1%B6%E5%A4%A9%E5%8F%B0%E7%8E%A9%E5%95%A5_%E5%8F%AF%E7%8E%A9%E6%80%A7%E6%B4%BB%E5%8A%A8%E6%8B%86%E8%A7%A3%E5%88%86%E6%9E%90/</url>
    
    <content type="html"><![CDATA[<p>==== 不需要环境整改的，利用现有的</p><p>极限运动<br>街头文化中，action sports领域，滑板凭借其发展时间长且能够充分体现出个性，而被广泛认可为比肩Hip-Hop、punk rock、涂鸦插画等的头等街头文化源头。在休闲极限运动中，鄙视链大概是：<br>滑板＞BMX（小轮车）＞FGFS（动作死飞）＞轮滑＞滑板车</p><p>健身器材<br><a href="https://search.smzdm.com/?c=home&amp;s=%E5%81%A5%E8%BA%AB%E5%99%A8%E6%9D%90&amp;v=b">https://search.smzdm.com/?c=home&amp;s=%E5%81%A5%E8%BA%AB%E5%99%A8%E6%9D%90&amp;v=b</a><br>飞力棒<br>射箭<br>飞镖<br>高尔夫<br>扔沙包<br>划船机<br>俄挺俯卧撑支架<br>滑板溜冰</p><p>可玩性强的<br><a href="https://www.dji.com/">https://www.dji.com</a><br>无人机 无人机会有干扰<br><a href="https://search.smzdm.com/?c=home&amp;s=%E6%97%A0%E4%BA%BA%E6%9C%BA&amp;v=b">https://search.smzdm.com/?c=home&amp;s=%E6%97%A0%E4%BA%BA%E6%9C%BA&amp;v=b</a><br>竞速无人机FPV<br>竞速遥控游戏<br><a href="https://search.smzdm.com/?c=home&amp;s=%E7%AB%9E%E9%80%9F+%E9%81%A5%E6%8E%A7&amp;v=b">https://search.smzdm.com/?c=home&amp;s=%E7%AB%9E%E9%80%9F+%E9%81%A5%E6%8E%A7&amp;v=b</a><br>遥控越野车<br>遥控赛车</p><p>打水战<br>CSGO水弹，水弹坦克<br>回旋镖</p><p>玩音乐<br>24v光波鼓灯带<br>录音室+乐器（吉他，鼓，琴）</p><p>==== 需要环境改造<br>清吧咖、喝茶-茶盘家伙<br>攀岩-<br>主题展览</p><p>天台电影，音乐节-幕布-音响-播放器-投影仪-桌子凳子-饮料-风扇<br>轰趴烧烤-烧烤-碳-垃圾收拾<br>德州扑克，剧本杀，塔罗牌，现金流游戏大富翁，桌游-桌子即可<br>小型游戏机，桌球，打麻将，4人以上<br>电竞机室<br>switch<br>PS5<br>屏幕<br>街机一体机<br>VR眼镜体感</p><p>充气城堡-小孩玩<br>网红外拍-场地租赁<br>天台无边游泳池<br>无土栽培、智能管控<br>养狗宠物-围栏和遛狗拉屎</p><p>太阳能电源-热水器-蓄电器</p><p>装置艺术</p><p>==== 场地增加空间房间<br>涉及违建</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>键盘鼠标录制_办公自动化_加快效率</title>
    <link href="/2021/09/28/%E9%94%AE%E7%9B%98%E9%BC%A0%E6%A0%87%E5%BD%95%E5%88%B6_%E5%8A%9E%E5%85%AC%E8%87%AA%E5%8A%A8%E5%8C%96_%E5%8A%A0%E5%BF%AB%E6%95%88%E7%8E%87/"/>
    <url>/2021/09/28/%E9%94%AE%E7%9B%98%E9%BC%A0%E6%A0%87%E5%BD%95%E5%88%B6_%E5%8A%9E%E5%85%AC%E8%87%AA%E5%8A%A8%E5%8C%96_%E5%8A%A0%E5%BF%AB%E6%95%88%E7%8E%87/</url>
    
    <content type="html"><![CDATA[<p>需要：<br>win10下，自动签到和其他自动化工具或页面执行。<br>测试了以下几个：</p><p>按键精灵 版本:2014.06   大小:22.9M<br><a href="http://www.anjian.com/">http://www.anjian.com/</a><br>win10放大分辨率后会移位</p><p><a href="https://masuit.com/2003">https://masuit.com/2003</a><br>Move Mouse 移动鼠标 v3.6.0 汉化版<br>过于简单</p><p><a href="https://thetinytask.com/">https://thetinytask.com/</a><br><a href="https://masuit.com/1536">https://masuit.com/1536</a><br>TinyTask鼠标键盘作录制助手v1.77绿+单文件版.rar<br>![](<a href="https://cdn.jsdelivr.net/gh/shellsec/shellsec_gitblog_imgdoc//img/TinyTask%E9%BC%A0%E6%A0%87%E9%94%AE%E7%9B%98%E4%BD%9C%E5%BD%95%E5%88%B6%E5%8A%A9%E6%89%8Bv1.77%E7%BB%BF">https://cdn.jsdelivr.net/gh/shellsec/shellsec_gitblog_imgdoc//img/TinyTask鼠标键盘作录制助手v1.77绿</a> 单文件版.rar)<br>优势是可以输出exe，直接执行</p><p>微海鼠标自动点击器<br><a href="https://www.52pojie.cn/thread-1493447-1-1.html">https://www.52pojie.cn/thread-1493447-1-1.html</a><br>比较傻瓜，功能单一</p><p>搜索：<br><a href="https://www.52pojie.cn/search.php?mod=forum&amp;searchid=15278&amp;orderby=lastpost&amp;ascdesc=desc&amp;searchsubmit=yes&amp;kw=%EF%BF%BD%EF%BF%BD%EF%BF%BD">https://www.52pojie.cn/search.php?mod=forum&amp;searchid=15278&amp;orderby=lastpost&amp;ascdesc=desc&amp;searchsubmit=yes&amp;kw=%CA%F3%B1%EA</a></p><p>最终：<br><a href="https://masuit.com/1536">https://masuit.com/1536</a><br>TinyTask鼠标键盘作录制助手v1.77绿+单文件版.rar<br>![](<a href="https://cdn.jsdelivr.net/gh/shellsec/shellsec_gitblog_imgdoc//img/TinyTask%E9%BC%A0%E6%A0%87%E9%94%AE%E7%9B%98%E4%BD%9C%E5%BD%95%E5%88%B6%E5%8A%A9%E6%89%8Bv1.77%E7%BB%BF">https://cdn.jsdelivr.net/gh/shellsec/shellsec_gitblog_imgdoc//img/TinyTask鼠标键盘作录制助手v1.77绿</a> 单文件版.rar)<br>优势是可以输出exe，直接执行</p><p>然后加入定时任务执行即可，简单粗暴！</p><p>缺点是没有一些复杂的，不过也够用了！<br>复杂点需要找图，易语言或python页面开发~</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>2021各个板块的主流币介绍</title>
    <link href="/2021/09/23/2021%E5%90%84%E4%B8%AA%E6%9D%BF%E5%9D%97%E7%9A%84%E4%B8%BB%E6%B5%81%E5%B8%81%E4%BB%8B%E7%BB%8D/"/>
    <url>/2021/09/23/2021%E5%90%84%E4%B8%AA%E6%9D%BF%E5%9D%97%E7%9A%84%E4%B8%BB%E6%B5%81%E5%B8%81%E4%BB%8B%E7%BB%8D/</url>
    
    <content type="html"><![CDATA[<p>一、NFT大板块<br>重要基础设施：<br>公链：Flow（layer1）、Near（layer2）；<br>侧链：matic<br>应用概念：<br>先看：Theat（视频流媒体）、enj（在线游戏）、chz（体育电竞）、mana（虚拟现实）；<br>次看：sand（虚拟游戏）、axs（数字宠物）、rari（数字收藏与交易）、rndr（3D渲染）；paint（NFT制作平台）。<br>（ps：应用概念这里没有细分，只列出最重要的）</p><p>二、DEFI大金融板块<br>三大借贷基础设施：Aave（去中心化借贷协议）、Mkr（基于以太坊的去中心化自治组织和智能合约系统）、Comp（基于以太坊上的金融协议）；<br>DEX：uni；（老二老三就是cake、sushi）；<br>预言机：link（老二看band）<br>聚合器：YFI（老二看看1inch）；<br>DAO：ant<br>（ps：defi这个大金融板块，最重要的就是基础设施）</p><p>三、生态系统（跨链、侧链、分片）<br>1、dot生态（分片）：dot、ksm；<br>2、Cosmos生态（跨链）：atom、matic、theta；<br>3、Near生态：near<br>4、Solana生态（公链）：sol<br>（ps：生态板块里面的基础设施和应用这些，自己去找文章看，很多介绍的很详细，看完基本上对整个生态的情况就非常清楚了）</p><p>四、web3.0概念<br>1、底层区块链：dot；<br>2、数据存储和传输：fil；<br>3、通信与计算：eth、ankr、pha；<br>4、分布式网络：nkn；（分布式网络加速cdn；私有专属网络vpn；物联网iot）<br>5、去中心化应用：<br>搜索grt、广告bat、数据交换协议ocean、数据库band、算力租赁gnt；<br>6、去中心化身份索引：lit；</p><p>五、去中心化存储大板块：<br>1、基于合约的存储：fil；<br>2、基于永久的存储：ar；<br>3、运存储平台：sc；<br>4、基于web3.0存储：cru；</p><p>六：ETH2.0板块<br>1、去中心矿池：rpl、ldo<br>2、去中心存储：swarm</p><p>七：其他相关<br>1、社交通讯：steem；<br>2、支付：xlm；<br>3、山寨：doge、ltc；<br>4、资产交易：xrp；<br>5、公链系列：ada、vet（国产）、trx（国产）、neo（国产）、eos（除大饼和姨太之外的）；<br>6、匿名：zec、zen、dash；<br>7、加密钱包：cro；<br>8、物联网：itoa、iotx；<br>9、体育竞技：chz<br>10、广告娱乐：bat<br>11、游戏概念：enj、mana<br>12、Layer2和平台币：matic stake bnb okb ht</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Epik Prime-火币首发垃圾-记录割韭菜</title>
    <link href="/2021/09/22/Epik%20Prime-%E7%81%AB%E5%B8%81%E9%A6%96%E5%8F%91%E5%9E%83%E5%9C%BE-%E8%AE%B0%E5%BD%95%E5%89%B2%E9%9F%AD%E8%8F%9C/"/>
    <url>/2021/09/22/Epik%20Prime-%E7%81%AB%E5%B8%81%E9%A6%96%E5%8F%91%E5%9E%83%E5%9C%BE-%E8%AE%B0%E5%BD%95%E5%89%B2%E9%9F%AD%E8%8F%9C/</url>
    
    <content type="html"><![CDATA[<p>Epik Prime<br>8.27上市8.29下跌，b也跌，吸筹码</p><p>拿了一周，活活拿成合约 -51%</p><p>介绍还是可以看下：<br>ip 版权 数字资产加密货币<br>知识图谱唯一<br>b2b，出高质量的可收藏的作品，价格飙升<br>和传统的名画收藏品差不多<br>同时很适合wash</p><p>分析：<br>第一目前币圈新热点nft<br>第二作为nft平台化，撮合交易，已经运营且盈利<br>第三已经与各个游戏大厂合作3aaa，输出作品可靠，以后更多厂商合作尝试，ip衍生品<br>第四开局即龙头，火币独家上市，流量足够，可破圈可涨<br>第五交易平台目前对标OpenSea<br>第六nft具备天然社交属性，适合病毒传播社群，腾讯fb抖音必然进场，元宇宙无敌<br>商业价值巨大，估值10倍以上<br>进场价格0.46，目标价格 4.5</p><p>NFT大火，新增流量。</p><p><a href="https://www.huobi.com/zh-cn/exchange/epik_usdt">https://www.huobi.com/zh-cn/exchange/epik_usdt</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>好评语30字通用_可复制万能好评评语大全(附使用提示）</title>
    <link href="/2021/09/22/%E5%A5%BD%E8%AF%84%E8%AF%AD30%E5%AD%97%E9%80%9A%E7%94%A8_%E5%8F%AF%E5%A4%8D%E5%88%B6%E4%B8%87%E8%83%BD%E5%A5%BD%E8%AF%84%E8%AF%84%E8%AF%AD%E5%A4%A7%E5%85%A8(%E9%99%84%E4%BD%BF%E7%94%A8%E6%8F%90%E7%A4%BA%EF%BC%89/"/>
    <url>/2021/09/22/%E5%A5%BD%E8%AF%84%E8%AF%AD30%E5%AD%97%E9%80%9A%E7%94%A8_%E5%8F%AF%E5%A4%8D%E5%88%B6%E4%B8%87%E8%83%BD%E5%A5%BD%E8%AF%84%E8%AF%84%E8%AF%AD%E5%A4%A7%E5%85%A8(%E9%99%84%E4%BD%BF%E7%94%A8%E6%8F%90%E7%A4%BA%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<h3 id="30字以上好评语通用模板大全"><a href="#30字以上好评语通用模板大全" class="headerlink" title="30字以上好评语通用模板大全"></a>30字以上好评语通用模板大全</h3><p><strong>通用模板1</strong></p><p>我真的非常喜欢它，非常支持它，质量非常好，和卖家描述的一模一样，我非常满意，我真的很喜欢它，它完全超出了我的预期，发货速度非常快，包装非常仔细和紧凑，物流公司的服务态度非常好，发货速度非常快，我对购物非常满意。</p><p><strong>通用模板2</strong></p><p>1.质量非常好，完全符合卖家对百氏杜的描述，非常满意。我真的很喜欢芝，这完全出乎意料。送货速度很快，包装很细致，物流公司的服务态度很好，送货速度很快，我对购物很满意。</p><p><strong>通用模板3</strong></p><p>2.收到货物后，我第一次打开包装。我觉得质量还是比较好的，这和卖家的描述是一致的。我非常满意。传送速度相对较快。物流公司服务态度好，交货速度快。总的来说，这是一次非常令人满意的购物。多亏了卖家。</p><p><strong>通用模板4</strong></p><p>3、宝贝收到了，卖家发货很快，物流也很强大，客服态度极好，很有耐心，给人一种亲切感，非常喜欢。还有精美的包装，高端的氛围;可以看出卖家非常细心。宝贝真的很好，和图片一致，没有区别，真的很物有所值。</p><p><strong>通用模板5</strong></p><p>4.我认为它相当好。当我买它的时候，我看到评论说它很好。当我看到发货时，我非常高兴。当送达时，我很高兴能从快递员那里拿回来。试试看，效果很好!此外，客服小姐姐很好，也很有礼貌。客服小姐姐也会每隔一秒回答我的问题。嘻嘻，下次我会回来买的。</p><p><strong>通用模板6</strong></p><p>宝宝收到了，卖家交货很快，物流非常强大，客户服务态度非常好，耐心和友好，我非常喜欢。还有精美的包装，高端的氛围;可以</p><p><strong>通用模板7</strong></p><p>它非常好而且便宜。感谢掌柜!说实话，这是我在淘宝购物时最满意的一次购物。我对掌柜的态度和商品都很满意。掌柜的态度既专业又热情。他快速回答问题。我问了很多问题，但他不觉得无聊，会认真回答我。我向掌柜表达我由衷的敬意，这样好的掌柜并不多，何况，宝贝正是我所需要的。当我收到它的时候，包裹已经完成了。打开后让我惊讶的是，宝贝比我想象的要好!不，不要竖起大拇指。下次需要的时候我会再来，所以请给掌柜打折!</p><p><strong>通用模板8</strong></p><p>看出卖家非常细心。宝贝真的很好，和图片一致，没有区别，真的很物有所值，质量好，价格低。质量很好，我们下次会再处理的!快递非常强大，受到高度赞扬!发货快，性价比高，满分!</p><p><strong>通用模板9</strong></p><p>这是第一个在我们村， 淘宝买东西的人，那里大多数人不在网上购物。他们通常只花不超过五元钱买东西。听说我在淘宝，买东西后，整个村子都震惊了。村长来到我家，告诉我爸爸我疯了!媳妇跟我离婚了，说这一天过不去!面对沉重的压力和五种力量，我坚持买和买!我相信这个月的工资不会浪费。终于，快递到了，我怀着激动的心情颤抖着打开了包裹。那一刻，我觉得我的眼睛将会明亮和盲目，啊.这种价值和这种品质!这只是因为我学习不多，而且我不能用华丽的语言来描述它。我骄傲地站在村子的入口处，整个村子都沸腾了。太棒了，值得。一些人绝望地大叫。如果他们不给他们看，他们就跳进井里。吓得我带着我的孩子跑了。为了测试宝宝的效果，我马上去了我们村250米高的村长山试了试。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>番茄时间推荐</title>
    <link href="/2021/09/10/%E7%95%AA%E8%8C%84%E6%97%B6%E9%97%B4%E6%8E%A8%E8%8D%90/"/>
    <url>/2021/09/10/%E7%95%AA%E8%8C%84%E6%97%B6%E9%97%B4%E6%8E%A8%E8%8D%90/</url>
    
    <content type="html"><![CDATA[<p>需求：<br>专注做好一件事，然后让大脑休息下~<br>7款好用的番茄钟软件推荐<br><a href="https://www.v1tx.com/post/best-pomodoro-apps/">https://www.v1tx.com/post/best-pomodoro-apps/</a><br>Pomodoro 番茄工作法<br><a href="https://github.com/coolcode/tomato-clock">https://github.com/coolcode/tomato-clock</a><br>大道至简</p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs elixir">pip install tomato-clock<br><span class="hljs-variable">$ </span>./tomato.py         <span class="hljs-comment"># start a 25 minutes tomato clock + 5 minutes break</span><br><span class="hljs-variable">$ </span>./tomato.py -t      <span class="hljs-comment"># start a 25 minutes tomato clock</span><br><span class="hljs-variable">$ </span>./tomato.py -t &lt;n&gt;  <span class="hljs-comment"># start a &lt;n&gt; minutes tomato clock</span><br><span class="hljs-variable">$ </span>./tomato.py -b      <span class="hljs-comment"># take a 5 minutes break</span><br><span class="hljs-variable">$ </span>./tomato.py -b &lt;n&gt;  <span class="hljs-comment"># take a &lt;n&gt; minutes break</span><br><span class="hljs-variable">$ </span>./tomato.py -h      <span class="hljs-comment"># help</span><br></code></pre></td></tr></table></figure><p>一个我自认为相对美观实用的番茄钟<br><a href="https://www.52pojie.cn/thread-1509888-1-1.html">https://www.52pojie.cn/thread-1509888-1-1.html</a></p><p>自动格式化文本 非代码<br><a href="https://info.xcar.com.cn/cheshi/sichuan/201506/195/">https://info.xcar.com.cn/cheshi/sichuan/201506/195/</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>电子书阅读器-口袋阅读-微信阅读-音频-质量书籍</title>
    <link href="/2021/09/08/%E7%94%B5%E5%AD%90%E4%B9%A6%E9%98%85%E8%AF%BB%E5%99%A8-%E5%8F%A3%E8%A2%8B%E9%98%85%E8%AF%BB-%E5%BE%AE%E4%BF%A1%E9%98%85%E8%AF%BB-%E9%9F%B3%E9%A2%91-%E8%B4%A8%E9%87%8F%E4%B9%A6%E7%B1%8D/"/>
    <url>/2021/09/08/%E7%94%B5%E5%AD%90%E4%B9%A6%E9%98%85%E8%AF%BB%E5%99%A8-%E5%8F%A3%E8%A2%8B%E9%98%85%E8%AF%BB-%E5%BE%AE%E4%BF%A1%E9%98%85%E8%AF%BB-%E9%9F%B3%E9%A2%91-%E8%B4%A8%E9%87%8F%E4%B9%A6%E7%B1%8D/</url>
    
    <content type="html"><![CDATA[<p>电子书阅读器-口袋阅读-微信阅读-音频-质量书籍</p><p>各种评分高的<br><a href="https://book.douban.com/">https://book.douban.com/</a></p><p>豆瓣最受欢迎的书评<br><a href="https://book.douban.com/review/best/">https://book.douban.com/review/best/</a><br><a href="https://github.com/search?o=desc&amp;q=pdf&amp;s=&amp;type=Repositories">https://github.com/search?o=desc&amp;q=pdf&amp;s=&amp;type=Repositories</a><br><a href="https://github.com/search?q=%E7%94%B5%E5%AD%90%E4%B9%A6">https://github.com/search?q=%E7%94%B5%E5%AD%90%E4%B9%A6</a></p><p>亚马逊<br><a href="https://www.amazon.cn/gp/bestsellers/digital-text/116169071/ref=zg_bs_unv_kinc_2_144154071_1">https://www.amazon.cn/gp/bestsellers/digital-text/116169071/ref=zg_bs_unv_kinc_2_144154071_1</a><br><a href="https://bookfere.com/">https://bookfere.com/</a></p><p>关键词：<br>kindle 打包</p><p><a href="http://www.luckyboy.cc/">http://www.luckyboy.cc/</a><br><a href="http://www.china-pub.com/">http://www.china-pub.com/</a><br><a href="http://product.china-pub.com/cache/rank3/onlinecenter.html">http://product.china-pub.com/cache/rank3/onlinecenter.html</a><br><a href="http://product.china-pub.com/8083550">http://product.china-pub.com/8083550</a><br><a href="http://www.china-pub.com/computers/common/mianfeisd.asp?id=8083550">http://www.china-pub.com/computers/common/mianfeisd.asp?id=8083550</a><br><a href="http://www.520mac.com/">http://www.520mac.com/</a></p><p>专题：<br><a href="http://www.j9p.com/k/ndsyjgsj/">http://www.j9p.com/k/ndsyjgsj/</a><br><a href="http://www.j9p.com/search.asp?keyword=epub&amp;searchType=">http://www.j9p.com/search.asp?keyword=epub&amp;searchType=</a><br>电子书<br><a href="https://www.52pojie.cn/forum-37-1.html">https://www.52pojie.cn/forum-37-1.html</a><br><a href="https://www.ghxi.com/category/all/course/ebook">https://www.ghxi.com/category/all/course/ebook</a><br>福利<br><a href="https://www.52pojie.cn/forum-66-1.html">https://www.52pojie.cn/forum-66-1.html</a></p><p>其他：<br>什么值得买推荐<br><a href="https://search.smzdm.com/?c=home&amp;s=%E7%94%B5%E5%AD%90%E4%B9%A6&amp;v=a">https://search.smzdm.com/?c=home&amp;s=%E7%94%B5%E5%AD%90%E4%B9%A6&amp;v=a</a></p><p>《价值：我对投资的思考》 <a href="https://www.xiaogegh.com/wlzy/10734.html">https://www.xiaogegh.com/wlzy/10734.html</a><br>Jia Zhi (Gao Ling Chuang Shi Ren Ji (127).rar 下载：<br><img src="https://cdn.jsdelivr.net/gh/shellsec/shellsec_gitblog_imgdoc//img/Jia%20Zhi%20(Gao%20Ling%20Chuang%20Shi%20Ren%20Ji%20(127).rar"></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title></title>
    <link href="/2021/09/07/python3.9%E5%AE%89%E8%A3%85/"/>
    <url>/2021/09/07/python3.9%E5%AE%89%E8%A3%85/</url>
    
    <content type="html"><![CDATA[<p><a href="https://www.python.org/">https://www.python.org/</a><br>down：<br><a href="https://www.python.org/downloads/source/">https://www.python.org/downloads/source/</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">yum -y install zlib-devel bzip2-devel openssl-devel ncurses-devel sqlite-devel readline-devel tk-devel gdbm-devel db4-devel libpcap-devel xz-devel<br></code></pre></td></tr></table></figure><p><a href="https://www.python.org/ftp/python/3.9.6/Python-3.9.6.tgz">https://www.python.org/ftp/python/3.9.6/Python-3.9.6.tgz</a></p><p>安装目录到<br>/usr/local/</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell">mkdir -p /usr/local/python3.9<br>mv Python-3.9.6.tgz /tmp<br>tar -zxvf Python-3.9.6.tgz<br>cd Python-3.9.6<br>./configure --prefix=/usr/local/python3.9<br>make &amp;&amp; make install<br>/usr/local/python3.9/bin/python3.9<br></code></pre></td></tr></table></figure><p>vi /etc/profile</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">export PYTHON_HOME=/usr/local/python3.9<br>export PATH=$&#123;PYTHON_HOME&#125;/bin:$PATH<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">source /etc/profile<br></code></pre></td></tr></table></figure><p><a href="https://www.jetbrains.com/zh-cn/pycharm/whatsnew/">https://www.jetbrains.com/zh-cn/pycharm/whatsnew/</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title></title>
    <link href="/2021/09/07/PYTHON%E5%85%A8%E6%A0%88%E5%B7%A5%E7%A8%8B%E5%B8%88%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%A8%8B/"/>
    <url>/2021/09/07/PYTHON%E5%85%A8%E6%A0%88%E5%B7%A5%E7%A8%8B%E5%B8%88%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%A8%8B/</url>
    
    <content type="html"><![CDATA[<p>目标：<br>从构建PC端页面功能，系统，到小程序、APP端构建生成。</p><p>1、<br>黑马Python6.5就业班学习-基础-高级-miniweb应用<br>主要PPT和命令，最好敲代码<br>工具：<br><a href="https://www.python.org/">https://www.python.org/</a><br>down：<br><a href="https://www.python.org/downloads/source/">https://www.python.org/downloads/source/</a><br>或简单点下这个：<br>Anaconda3<br><a href="https://www.anaconda.com/">https://www.anaconda.com/</a><br>pycharm激活版本<br><a href="https://www.ghxi.com/pycharm.html">https://www.ghxi.com/pycharm.html</a></p><p>2、Django+vue全栈管理系统<br>VUE前端官网：<br><a href="https://cn.vuejs.org/">https://cn.vuejs.org/</a></p><p><a href="https://www.django-vue-admin.com/">https://www.django-vue-admin.com/</a><br>环境跑起来，前后端分离，前段模块js<br>学习文档<br><a href="https://www.django-vue-admin.com/document/">https://www.django-vue-admin.com/document/</a><br><a href="https://gitee.com/liqianglog/django-vue-admin">https://gitee.com/liqianglog/django-vue-admin</a></p><p>最好学习docker，环境配置是个很烦的问题，而且到时上线docker也很方便，后期可熟悉K8S,容器化必会，后期CICD<br><a href="https://www.runoob.com/docker/docker-compose.html">https://www.runoob.com/docker/docker-compose.html</a><br><a href="https://docs.microsoft.com/zh-cn/windows/wsl/install-win10">https://docs.microsoft.com/zh-cn/windows/wsl/install-win10</a><br>PowerShell<br>wsl –list –verbose<br>wsl –set-default-version 2<br>wsl –list –online<br>wsl.exe –update<br>wsl –install –d Debian<br>一开始装wsl –install –d Ubuntu-20.04，然后发现docker文件里是Debian，所以更换了<br>wsl 删除<br>先输入 wslconfig /l<br>再输入 wslconfig /u docker-desktop-data #debian替换为你想卸载的名字<br>win10怎么卸载wsl子系统<br><a href="https://jingyan.baidu.com/article/a17d52852b37aac199c8f251.html">https://jingyan.baidu.com/article/a17d52852b37aac199c8f251.html</a><br>win10 WSL2问题解决WslRegisterDistribution failed with error: 0x800701bc<br><a href="https://blog.csdn.net/qq_18625805/article/details/109732122">https://blog.csdn.net/qq_18625805/article/details/109732122</a><br>Win10 WSL2 安装Docker<br><a href="https://www.jianshu.com/p/a20c2d58eaac">https://www.jianshu.com/p/a20c2d58eaac</a><br>替换下加速配置：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs json">&#123;<br>  <span class="hljs-attr">&quot;registry-mirrors&quot;</span>:[<span class="hljs-string">&quot;https://hub-mirror.c.163.com/&quot;</span>,<br>    <span class="hljs-string">&quot;https://reg-mirror.qiniu.com&quot;</span>,<br>    <span class="hljs-string">&quot;https://docker.mirrors.ustc.edu.cn&quot;</span>],<br>  <span class="hljs-attr">&quot;insecure-registries&quot;</span>: [],<br>  <span class="hljs-attr">&quot;debug&quot;</span>: <span class="hljs-literal">false</span>,<br>  <span class="hljs-attr">&quot;experimental&quot;</span>: <span class="hljs-literal">false</span>,<br>  <span class="hljs-attr">&quot;features&quot;</span>: &#123;<br>    <span class="hljs-attr">&quot;buildkit&quot;</span>: <span class="hljs-literal">true</span><br>  &#125;,<br>  <span class="hljs-attr">&quot;builder&quot;</span>: &#123;<br>    <span class="hljs-attr">&quot;gc&quot;</span>: &#123;<br>      <span class="hljs-attr">&quot;enabled&quot;</span>: <span class="hljs-literal">true</span>,<br>      <span class="hljs-attr">&quot;defaultKeepStorage&quot;</span>: <span class="hljs-string">&quot;20GB&quot;</span><br>    &#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>下载源码解压：<br><a href="https://gitee.com/liqianglog/django-vue-admin">https://gitee.com/liqianglog/django-vue-admin</a><br> Docker-compose 部署<br> <a href="https://www.django-vue-admin.com/document/hjbs.html#docker-compose-%E9%83%A8%E7%BD%B2-%E6%8E%A8%E8%8D%90">https://www.django-vue-admin.com/document/hjbs.html#docker-compose-%E9%83%A8%E7%BD%B2-%E6%8E%A8%E8%8D%90</a><br> 先安装docker-compose (自行百度安装),执行此命令等待安装<br>docker-compose up</p><p>–》运行完毕后关掉再次运行，执行下面的即可<br>初始化后端数据(第一次执行即可)<br>docker exec -ti dvadmin-django bash<br>python3 manage.py init -y<br>exit<br>前端地址：<a href="http://127.0.0.1:8080/">http://127.0.0.1:8080</a><br>后端地址：<a href="http://127.0.0.1:8000/">http://127.0.0.1:8000</a><br>账号：admin 密码：123456</p><p>docker exec -ti dvadmin-django bash<br>apt-get install -y python3.7-dev libpq-dev libopencv-dev python-opencv<br>apt-get install python3-dev </p><p>0、去掉每次django覆盖配置文件操作<br>django-vue-admin\docker_env\django\Dockerfile<br>django-vue-admin\docker_env\celery\Dockerfile</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gradle"><span class="hljs-keyword">COPY</span> .<span class="hljs-regexp">/dvadmin-backend/</span>conf<span class="hljs-regexp">/env.example.py /</span>dvadmin-backend<span class="hljs-regexp">/conf/</span>env.py<br></code></pre></td></tr></table></figure><p>1、去除登录验证码<br>django-vue-admin\dvadmin-backend\conf\env.py</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-comment"># 只允许访问的ip地址列表</span><br><span class="hljs-attr">ALLOWED_HOSTS</span> = [<span class="hljs-string">&#x27;*&#x27;</span>]<br><span class="hljs-comment"># 允许跨域源</span><br><span class="hljs-attr">CORS_ORIGIN_ALLOW_ALL</span> = <span class="hljs-literal">True</span><br><span class="hljs-comment"># 允许ajax请求携带cookie</span><br><span class="hljs-attr">CORS_ALLOW_CREDENTIALS</span> = <span class="hljs-literal">False</span><br><span class="hljs-comment"># 验证码状态</span><br><span class="hljs-attr">CAPTCHA_STATE</span> = <span class="hljs-literal">False</span><br><span class="hljs-comment"># 操作日志配置</span><br><span class="hljs-attr">API_LOG_ENABLE</span> = <span class="hljs-literal">True</span><br><span class="hljs-attr">API_LOG_METHODS</span> = [<span class="hljs-string">&#x27;POST&#x27;</span>, <span class="hljs-string">&#x27;DELETE&#x27;</span>, <span class="hljs-string">&#x27;PUT&#x27;</span>] <span class="hljs-comment"># &#x27;ALL&#x27; or [&#x27;POST&#x27;, &#x27;DELETE&#x27;]</span><br><span class="hljs-comment"># 接口权限</span><br><span class="hljs-attr">INTERFACE_PERMISSION</span> = <span class="hljs-literal">False</span><br><span class="hljs-comment"># 是否开启登录ip转换成城市位置</span><br><span class="hljs-attr">ENABLE_LOGIN_LOCATION</span> = <span class="hljs-literal">True</span><br></code></pre></td></tr></table></figure><p>验证码状态<br>2、去掉每次vue打包-docker-compose.yml</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs dts"><br>        <span class="hljs-meta"># npm install --registry=https:<span class="hljs-comment">//registry.npm.taobao.org</span></span><br>        <span class="hljs-meta"># rm -rf /dvadmin-ui/dist</span><br>        <span class="hljs-meta"># npm run build:prod</span><br><span class="hljs-symbol"></span><br><span class="hljs-symbol">version:</span> <span class="hljs-string">&quot;3&quot;</span><br><span class="hljs-symbol">services:</span><br>  dvadmin-ui:<br><span class="hljs-symbol">    container_name:</span> dvadmin-ui<br><span class="hljs-symbol">    ports:</span><br>      - <span class="hljs-string">&quot;8080:8080&quot;</span><br><span class="hljs-symbol">    build:</span><br><span class="hljs-symbol">      context:</span> ./<br><span class="hljs-symbol">      dockerfile:</span> ./docker_env<span class="hljs-meta-keyword">/vue-ui/</span>Dockerfile<br><span class="hljs-symbol">    environment:</span><br><span class="hljs-symbol">      TZ:</span> Asia/Shanghai<br><span class="hljs-symbol">    volumes:</span><br>      - <span class="hljs-string">&quot;./dvadmin-ui:/dvadmin-ui&quot;</span><br><span class="hljs-symbol">    command:</span><br>      - <span class="hljs-meta-keyword">/bin/</span>bash<br>      - -c<br>      - |<br>        cd /dvadmin-ui<br>        npm run dev<br></code></pre></td></tr></table></figure><p>3、Python报错：OperationalError:(MySQLdb._exceptions.OperationalError) (1366, “Incorrect string value:)  uft8m64<br><a href="https://blog.csdn.net/happy_wealthy/article/details/118157397">https://blog.csdn.net/happy_wealthy/article/details/118157397</a><br>utf8mb4_unicode_ci<br><a href="https://blog.csdn.net/yzh_1346983557/article/details/89643071">https://blog.csdn.net/yzh_1346983557/article/details/89643071</a></p><p>4、为啥后台登录会错误<br>数据导入还需要初始化<br>django-vue-admin\dvadmin-backend\docker_start.sh<br>python ./manage.py makemigrations<br>python ./manage.py migrate</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vim"><span class="hljs-keyword">python</span> ./manage.<span class="hljs-keyword">py</span> init<br></code></pre></td></tr></table></figure><p>linux安装docker-compose<br><a href="https://github.com/docker/compose">https://github.com/docker/compose</a><br><a href="https://www.cnblogs.com/shary-blue/p/14002987.html">https://www.cnblogs.com/shary-blue/p/14002987.html</a><br><a href="https://www.cnblogs.com/pzk7788/p/10180197.html">https://www.cnblogs.com/pzk7788/p/10180197.html</a><br>网络报错：<a href="https://theorangeone.net/posts/increase-docker-ip-space/">https://theorangeone.net/posts/increase-docker-ip-space/</a><br><code>vi /etc/docker/daemon.json</code><br>{<br>    “registry-mirrors”: [<br>        “<a href="https://hub-mirror.c.163.com/&quot;">https://hub-mirror.c.163.com/&quot;</a>,<br>        “<a href="https://reg-mirror.qiniu.com&quot;/">https://reg-mirror.qiniu.com&quot;</a>,<br>        “<a href="https://docker.mirrors.ustc.edu.cn&quot;/">https://docker.mirrors.ustc.edu.cn&quot;</a><br>    ],<br> “default-address-pools”:[{“base”:”172.80.0.0/16”,”size”:24},<br>    {“base”:”172.90.0.0/16”,”size”:24}]<br>}</p><p>案例：<br>Django+Vue+Docker搭建接口测试平台实战<br><a href="https://www.cnblogs.com/jinjiangongzuoshi/p/14711858.html">https://www.cnblogs.com/jinjiangongzuoshi/p/14711858.html</a></p><p>利用python,jieba,bm25,django,nginx半小时打造一个基本可用的中文全文检索的搜索引擎<br><a href="http://blog.54chen.com/post/chinese-search/">http://blog.54chen.com/post/chinese-search/</a></p><p>其他ps：<br>python+vue<br>pip3.9 install –user -r requirements.txt</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">tar -xvf node-v16.8.0-linux-x64.tar.xz -C /usr/<span class="hljs-built_in">local</span>/<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">ln -s /usr/<span class="hljs-built_in">local</span>/node-v16.8.0-linux-x64/bin/node /usr/bin/node<br>ln -s /usr/<span class="hljs-built_in">local</span>/node-v16.8.0-linux-x64/bin/npm /usr/bin/npm<br></code></pre></td></tr></table></figure><p>创建虚拟环境<br><a href="https://docs.python.org/zh-cn/3/tutorial/venv.html">https://docs.python.org/zh-cn/3/tutorial/venv.html</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>2021投资总结和下半年操作</title>
    <link href="/2021/09/04/2021%E6%8A%95%E8%B5%84%E6%80%BB%E7%BB%93%E5%92%8C%E4%B8%8B%E5%8D%8A%E5%B9%B4%E6%93%8D%E4%BD%9C/"/>
    <url>/2021/09/04/2021%E6%8A%95%E8%B5%84%E6%80%BB%E7%BB%93%E5%92%8C%E4%B8%8B%E5%8D%8A%E5%B9%B4%E6%93%8D%E4%BD%9C/</url>
    
    <content type="html"><![CDATA[<p>今年是个不平常的一年，也是大时代大空头的一年，从开年的阿里蚂蚁停止上市，国内清除矿机计划，深房严控，经营贷深房理，滴滴上市被安全法查，各位明星吴签，三胎概念清理教育，996列为违法，金融大v封号入刑，股市大白马和腾讯阿里各种回撤，明显各大资金在退出，一切现金为王，安全第一。<br>今年投资失利，回撤了。</p><ol><li>阿里大跌时抄底，现实比想象中严重，贵圈真乱是真的，上面关门打狗是真的狠，不听话，一下就不给活路，股价一直插水。-40%</li><li>coin上市，当时btc大概5.8w，我高位出了，买了点coin，也插了回去，-20%，这货像极了币圈。</li><li>狗币拉涨带着shib飞的时候，当天晚上进场手操了几次，利润来回折腾，索性看了白皮书，去0的梦想还是要有的，毕竟热点还在，直接搜哈，75%，心跳的感觉，历史称为shib利润。</li><li>清理矿机，btc大跌，在2-3w多开始进场，坐等拉飞，还在老美继续放水，拉了回来。</li><li>无意看到币圈nft大热，这几天火币又上了新币epik，白皮书写得非常完美，什么各种aaa，腾讯合作，B2b平台，在高高高位接了盘，然后接下来开启每天-10%点跌。。写时已经50%腰斩，那天晚上我还梦见这个币直线插水，我还不是很敢相信。。。对了，shib的时候是梦见拉盘了哈哈哈，真的，有时由不得你。–已割-60%，没了shib利润</li><li>a股还是那句话，白酒yyds，然后一直插。。。囧，个股与基金齐飞，-20%<br>去年涨得多凶，今年就会跌得多厉害，完全就是今天涨，明天跌停，不断存量厮杀。<br>俗话说得好，赚10块亏2块，也还行吧，至少大头利润在的。<br>到年底，剩下的筹码就拿着了，大头资金全部回笼，全部！<br>一句话，休息~送外卖跑现金流不香吗？<br>大头回来：<br>搬砖开白金卡，小玩卡，打新科创板，小撸怡情<br>搬砖吃利息，看看到时老美加息爆破情况<br>搬砖。。。</li></ol><p>现金为王，赌场出清！</p><p>————–20210930<br>恒大不爆中国不稳，老美不加息世界不稳，坚决别进场当韭菜，开源节流，现金为王<br>参考电影：东方华尔街<br><a href="https://www.zhihu.com/question/281158155">https://www.zhihu.com/question/281158155</a><br><img src="https://cdn.jsdelivr.net/gh/shellsec/shellsec_gitblog_imgdoc//img/%E4%B8%9C%E6%96%B9%E5%8D%8E%E5%B0%94%E8%A1%97-%E9%A3%8E%E6%B0%B4%E6%9C%BA%E4%BC%9A.jpg"></p><p>人人皆输，香港股市输了，大财团输了，财长输了，叶抱一输了，万千股民都输了。<br>等待世界重启</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>一些免费鸡场_2021-09-03</title>
    <link href="/2021/09/03/%E4%B8%80%E4%BA%9B%E5%85%8D%E8%B4%B9%E9%B8%A1%E5%9C%BA_2021-09-03/"/>
    <url>/2021/09/03/%E4%B8%80%E4%BA%9B%E5%85%8D%E8%B4%B9%E9%B8%A1%E5%9C%BA_2021-09-03/</url>
    
    <content type="html"><![CDATA[<p>BSE64加解密<br><a href="http://tool.chinaz.com/tools/base64.aspx">http://tool.chinaz.com/tools/base64.aspx</a></p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">DQrmiYDmnInotKblj7flnYfmnaXoh6rkupLogZTnvZHvvIzpnZ7nm4jliKnnm67nmoTvvIzku4XkvpvlpKflrrbkuqTmtYHlrabkuaDkvb</span>/nlKjvvIzlh<span class="hljs-number">7</span>rnjrDkuIDliIfpl<span class="hljs-number">67</span>popjmnKznq<span class="hljs-number">5</span>nkvZzogIXmpoLkuI<span class="hljs-number">3</span>otJ/otKPjgIINCg<span class="hljs-number">0</span>K<span class="hljs-number">6</span>K<span class="hljs-number">6</span>i<span class="hljs-number">6</span>ZiF<span class="hljs-number">6</span>ZO+<span class="hljs-number">5</span>o<span class="hljs-number">6</span>l<span class="hljs-number">77</span>yaDQoNCmh<span class="hljs-number">0</span>dHBzOi<span class="hljs-number">8</span>vaXd<span class="hljs-number">4</span>Zi<span class="hljs-number">5</span>uZXRsaWZ<span class="hljs-number">5</span>LmFwcA<span class="hljs-number">0</span>KDQrlhbPplK<span class="hljs-number">7</span>or<span class="hljs-number">43</span>mkJzkuIvvvIwyNEjkuYvlhoXmiJbkuIDlkajvvJoNCi<span class="hljs-number">9</span>mcmVlZnEvZnJlZQ<span class="hljs-number">0</span>KZnJlZS<span class="hljs-number">12</span>MnJheQ<span class="hljs-number">0</span>KDQpodHRwczovL<span class="hljs-number">3</span>d<span class="hljs-number">3</span>dy<span class="hljs-number">5</span>tYXR<span class="hljs-number">0</span>a<span class="hljs-number">2</span>F<span class="hljs-number">5</span>ZGlhcnkuY<span class="hljs-number">29</span>tLw<span class="hljs-number">0</span>KaHR<span class="hljs-number">0</span>cHM<span class="hljs-number">6</span>Ly<span class="hljs-number">93</span>d<span class="hljs-number">3</span>cubWF<span class="hljs-number">0</span>dGtheWRpYXJ<span class="hljs-number">5</span>LmNvbS<span class="hljs-number">9</span>zZWFyY<span class="hljs-number">2</span>gvbGFiZWwvdnBuPyZtYXgtcmVzdWx<span class="hljs-number">0</span>cz<span class="hljs-number">03</span>DQpWMnJheS<span class="hljs-number">9</span>DbGFzaOiuoumYhemTvuaOpQ<span class="hljs-number">0</span>KdjJyYXko<span class="hljs-number">6</span>K+<span class="hljs-number">35</span>byA<span class="hljs-number">5</span>ZCv<span class="hljs-number">5</span>Luj<span class="hljs-number">55</span>CG<span class="hljs-number">5</span>ZCO<span class="hljs-number">5</span>YaN<span class="hljs-number">5</span>ouJ<span class="hljs-number">5</span>Y+WKe+<span class="hljs-number">8</span>mg<span class="hljs-number">0</span>KaHR<span class="hljs-number">0</span>cHM<span class="hljs-number">6</span>Ly<span class="hljs-number">9</span>kcml<span class="hljs-number">2</span>ZS<span class="hljs-number">5</span>nb<span class="hljs-number">29</span>nbGUuY<span class="hljs-number">29</span>tL<span class="hljs-number">3</span>VjP<span class="hljs-number">2</span>V<span class="hljs-number">4</span>cG<span class="hljs-number">9</span>ydD<span class="hljs-number">1</span>kb<span class="hljs-number">3</span>dubG<span class="hljs-number">9</span>hZCZpZD<span class="hljs-number">0</span>xLXNMRDlyYkRJR<span class="hljs-number">3</span>VSLTY<span class="hljs-number">1</span>eExROVUwT<span class="hljs-number">0</span>pPWEtMdDVIUFYNCmNsYXNoKOivt+W<span class="hljs-number">8</span>gOWQr+S<span class="hljs-number">7</span>o+eQhuWQjuWGjeaLieWPlinvvJoNCmh<span class="hljs-number">0</span>dHBzOi<span class="hljs-number">8</span>vZHJpdmUuZ<span class="hljs-number">29</span>vZ<span class="hljs-number">2</span>xlLmNvbS<span class="hljs-number">91</span>Yz<span class="hljs-number">9</span>leHBvcnQ<span class="hljs-number">9</span>ZG<span class="hljs-number">93</span>bmxvYWQmaWQ<span class="hljs-number">9</span>MWN<span class="hljs-number">5</span>MlFCNTZUdmVKYnRlRlZncVFQSExpbEhWZDJxZ<span class="hljs-number">01</span>EDQoNCuWQjumdoueci+S<span class="hljs-number">4</span>i+WQjOatpeS<span class="hljs-number">4</span>iy<span class="hljs-number">3</span>ot<span class="hljs-number">7</span>Pmnb/mnLrlkIzmraXvvJ<span class="hljs-number">8</span>NCuWmguS<span class="hljs-number">9</span>lemAmui/h<span class="hljs-number">2</span>N<span class="hljs-number">1</span>cmzmiJZ<span class="hljs-number">3</span>Z<span class="hljs-number">2</span>V<span class="hljs-number">05</span>LiL<span class="hljs-number">6</span>L<span class="hljs-number">29</span>R<span class="hljs-number">29</span>vZ<span class="hljs-number">2</span>xlIERyaXZl<span class="hljs-number">572</span>R<span class="hljs-number">5</span>Z<span class="hljs-number">2</span>AKEhvdyB<span class="hljs-number">0</span>byBkb<span class="hljs-number">3</span>dubG<span class="hljs-number">9</span>hZCBhIEdvb<span class="hljs-number">2</span>dsZSBEcml<span class="hljs-number">2</span>ZSB<span class="hljs-number">1</span>cmwgdmlhIGN<span class="hljs-number">1</span>cmwgb<span class="hljs-number">3</span>Igd<span class="hljs-number">2</span>dldCkNCmh<span class="hljs-number">0</span>dHBzOi<span class="hljs-number">8</span>vd<span class="hljs-number">3</span>d<span class="hljs-number">3</span>Lml<span class="hljs-number">0</span>MTM<span class="hljs-number">1</span>Mi<span class="hljs-number">5</span>jb<span class="hljs-number">20</span>vODIyNzM<span class="hljs-number">3</span>Lmh<span class="hljs-number">0</span>bWwNCg<span class="hljs-number">0</span>K<span class="hljs-number">6</span>Kej<span class="hljs-number">5</span>Yaz<span class="hljs-number">5</span>pa<span class="hljs-number">55</span>qGI<span class="hljs-number">77</span>yaDQpjdXJsIC<span class="hljs-number">1</span>BICJNb<span class="hljs-number">3</span>ppbGxhLzQuMCAoY<span class="hljs-number">29</span>tcGF<span class="hljs-number">0</span>aWJsZTsgTVNJRSA<span class="hljs-number">1</span>LjAxOyBXaW<span class="hljs-number">5</span>kb<span class="hljs-number">3</span>dzIE<span class="hljs-number">5</span>UIDUuMCkiIC<span class="hljs-number">1</span>MIC<span class="hljs-number">1</span>vIHYycmF<span class="hljs-number">5</span>LnR<span class="hljs-number">4</span>dCAiaHR<span class="hljs-number">0</span>cHM<span class="hljs-number">6</span>Ly<span class="hljs-number">9</span>kcml<span class="hljs-number">2</span>ZS<span class="hljs-number">5</span>nb<span class="hljs-number">29</span>nbGUuY<span class="hljs-number">29</span>tL<span class="hljs-number">3</span>VjP<span class="hljs-number">2</span>V<span class="hljs-number">4</span>cG<span class="hljs-number">9</span>ydD<span class="hljs-number">1</span>kb<span class="hljs-number">3</span>dubG<span class="hljs-number">9</span>hZCZpZD<span class="hljs-number">0</span>xLXNMRDlyYkRJR<span class="hljs-number">3</span>VSLTY<span class="hljs-number">1</span>eExROVUwT<span class="hljs-number">0</span>pPWEtMdDVIUFYiDQoNCuWlveS<span class="hljs-number">6</span>hu+<span class="hljs-number">8</span>jOmXrumimOadpeS<span class="hljs-number">6</span>hu+<span class="hljs-number">8</span>jEdvb<span class="hljs-number">2</span>dsZStIb<span class="hljs-number">3</span>N<span class="hljs-number">0</span>c+abtOaWsO+<span class="hljs-number">8</span>ny<span class="hljs-number">0</span>tLeaUvuW<span class="hljs-number">8</span>g++<span class="hljs-number">8</span>jOWimeWkquehrO+<span class="hljs-number">8</span>jOS<span class="hljs-number">9</span>oOS<span class="hljs-number">7</span>rOeci+aAjuS<span class="hljs-number">5</span>iOino+WGs++<span class="hljs-number">8</span>jOWTiOWTiOWTiA<span class="hljs-number">0</span>KDQojZ<span class="hljs-number">29</span>vZ<span class="hljs-number">2</span>xlLWFjY<span class="hljs-number">2</span>Vzcy<span class="hljs-number">1</span>oZWxwZXItLeaXoOaViA<span class="hljs-number">0</span>KaHR<span class="hljs-number">0</span>cHM<span class="hljs-number">6</span>Ly<span class="hljs-number">9</span>naXRodWIuY<span class="hljs-number">29</span>tL<span class="hljs-number">0</span>tlbmd<span class="hljs-number">1</span>YmEvZ<span class="hljs-number">29</span>vZ<span class="hljs-number">2</span>xlLWFjY<span class="hljs-number">2</span>Vzcy<span class="hljs-number">1</span>oZWxwZXINCuWfuuacrOS<span class="hljs-number">4</span>imhvc<span class="hljs-number">3</span>Rz<span class="hljs-number">5</span>aSn<span class="hljs-number">5</span>rOV<span class="hljs-number">5</span>aSx<span class="hljs-number">5</span>pWIfg<span class="hljs-number">0</span>KDQoyMDIxMDkwMzoNCg<span class="hljs-number">0</span>KaHR<span class="hljs-number">0</span>cHM<span class="hljs-number">6</span>Ly<span class="hljs-number">9</span>naXN<span class="hljs-number">0</span>LmdpdGh<span class="hljs-number">1</span>YnVzZXJjb<span class="hljs-number">250</span>ZW<span class="hljs-number">50</span>LmNvbS<span class="hljs-number">9</span>mcmVlbmV<span class="hljs-number">0</span>MjEvZjQ<span class="hljs-number">4</span>NmQ<span class="hljs-number">3</span>NDMxZTMxODRhNWYxYTIxNzE<span class="hljs-number">3</span>NTZiZDJkMjIvcmF<span class="hljs-number">3</span>LzRlYWYyZDQ<span class="hljs-number">2</span>ZWQzNTgxZGUzYTMwYzJkMTljYjQyMWI<span class="hljs-number">0</span>Y<span class="hljs-number">2</span>JmOTg<span class="hljs-number">4</span>NzUvamllZGlhbi<span class="hljs-number">50</span>eHQ=<br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>2021最新生日月和生日当天各家银行多倍积分汇总</title>
    <link href="/2021/09/03/2021%E6%9C%80%E6%96%B0%E7%94%9F%E6%97%A5%E6%9C%88%E5%92%8C%E7%94%9F%E6%97%A5%E5%BD%93%E5%A4%A9%E5%90%84%E5%AE%B6%E9%93%B6%E8%A1%8C%E5%A4%9A%E5%80%8D%E7%A7%AF%E5%88%86%E6%B1%87%E6%80%BB/"/>
    <url>/2021/09/03/2021%E6%9C%80%E6%96%B0%E7%94%9F%E6%97%A5%E6%9C%88%E5%92%8C%E7%94%9F%E6%97%A5%E5%BD%93%E5%A4%A9%E5%90%84%E5%AE%B6%E9%93%B6%E8%A1%8C%E5%A4%9A%E5%80%8D%E7%A7%AF%E5%88%86%E6%B1%87%E6%80%BB/</url>
    
    <content type="html"><![CDATA[<p>薅羊毛最重要的就是积分了，信用卡兑换礼品时基本上都可以全积分支付，但是积分不够，再小的羊毛也薅不了；</p><p><img src="https://p0.itc.cn/images01/20210714/b684ab6a0f10417488cfe7aff0c5f4dd.gif"></p><p>快速累积信用卡积分攻略：</p><p><strong>一、生日月刷卡</strong></p><p>每个银行都会为持卡人赠送一个生日月多倍积分权益；</p><p>像白金卡，金卡，信用卡级别越高，累积的积分就会越多。</p><p><strong>二、银行积分活动</strong></p><p>银行平时会推出一些对应的积分赠送优惠活动；</p><p>比如在规定日期前，使用信用卡消费几笔，或达到一定的金额，就可以获得银行赠送的积分奖励，大家可以多关注银行活动参加。</p><p><img src="https://p4.itc.cn/images01/20210714/772cbf95dd964645849498af7cff68e4.jpeg"></p><p><strong>三、多人刷卡攒积分</strong></p><p>信用卡消费越多，累积的积分就越多；</p><p>大家可以为朋友刷卡支付，让朋友给你转账的方式攒积分；</p><p>也可以为家人办理附属卡，附属卡的积分是可以合并到主卡的。</p><p><strong>四、选择永久积分的卡</strong></p><p>部分银行的信用卡积分有效期只有2年左右，过期后会自动清零。</p><p>也有一些银行信用卡积分的有效期都比较长，像民生，建设，招行的信用卡积分都是永久有效的；</p><p>所以，大家在办理信用卡时，一定要提前问清楚卡片的积分有期限，然后根据自己的需求办卡。</p><p><strong>多家银行信用卡积分累积攻略一览表：</strong></p><p><a href="https://bbs.51credit.com/thread-6485678-1-1.html">https://bbs.51credit.com/thread-6485678-1-1.html</a></p><p><img src="https://cdn.jsdelivr.net/gh/shellsec/shellsec_gitblog_imgdoc//img/051040kc6egb8cv9qz627a.png"></p><p>信用卡积分可以在对应发卡行兑换各种礼品卡券，也可以在收卡云、兑兑回收、小小银家将礼品卡券兑现；</p><p>需要注意的是，大部分银行信用卡积分都是1-2年的有效期，大家最好在积分有效期内将积分使用的，积分一旦过期，就会被清零</p><p>有玩卡的伙伴吗？~</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>机场优云666——多年老牌高速全隧道多节点IPLC超大国际机场，月费低至11.9元</title>
    <link href="/2021/09/02/%E6%9C%BA%E5%9C%BA-%E4%BC%98%E4%BA%91666%E2%80%94%E2%80%94%E5%A4%9A%E5%B9%B4%E8%80%81%E7%89%8C%E9%AB%98%E9%80%9F%E5%85%A8%E9%9A%A7%E9%81%93%E5%A4%9A%E8%8A%82%E7%82%B9IPLC%E8%B6%85%E5%A4%A7%E5%9B%BD%E9%99%85%E6%9C%BA%E5%9C%BA%EF%BC%8C%E6%9C%88%E8%B4%B9%E4%BD%8E%E8%87%B311.9%E5%85%83/"/>
    <url>/2021/09/02/%E6%9C%BA%E5%9C%BA-%E4%BC%98%E4%BA%91666%E2%80%94%E2%80%94%E5%A4%9A%E5%B9%B4%E8%80%81%E7%89%8C%E9%AB%98%E9%80%9F%E5%85%A8%E9%9A%A7%E9%81%93%E5%A4%9A%E8%8A%82%E7%82%B9IPLC%E8%B6%85%E5%A4%A7%E5%9B%BD%E9%99%85%E6%9C%BA%E5%9C%BA%EF%BC%8C%E6%9C%88%E8%B4%B9%E4%BD%8E%E8%87%B311.9%E5%85%83/</url>
    
    <content type="html"><![CDATA[<p>真正大鸡场，100多个节点，V2ray节点50多个。港台美俄均有白嫖节点，新用户注册送10GB流量，每日签到送1-7G流量，BGP中转/Azure/Dmit/HKT/Hinet/多点IPLC/v2ray保证高端用户使用需求。</p><p>同时也提供有很多的付费套餐可选，价格也挺便宜的。  </p><h3 id="IPLC专线科普"><a href="#IPLC专线科普" class="headerlink" title="IPLC专线科普"></a>IPLC专线科普</h3><p>IPLC专线网络是将通过光缆将香港和中国大陆或者其他地区直连，形成高速互访网络。因此，准确地说，IPLC专线网络不是一种带宽类型，而是一种高速的网络传输类型。相比容易受到公网波动或国际出口波动的其他传输类型，LPLC专线网络在速度和稳定性方面具有更高保障。如果客户群体集中在某个国家或地区，可以考虑使用此类带宽。</p><p>IPLC专线网络，是可以在香港与其他地区（包括中国大陆、新加坡、菲律宾、日本、韩国）之间构建物理专线，将香港数据中心与其他地区的数据中心、云、企业分支、办公室或主机托管环境对接起来，实现高速私网通信。这种私网通信可以绕过公网，两端通信低至 5ms，最终形成一种比基于 Internet 连接更为私密、稳定、高速的网络体验。</p><h3 id="使用IPLC专线网络的优势有："><a href="#使用IPLC专线网络的优势有：" class="headerlink" title="使用IPLC专线网络的优势有："></a>使用IPLC专线网络的优势有：</h3><p>1、速度更快，加快后开启国际网站速度更快；</p><p>2、安全系数好，加快专线运输选用私有专线运输出入口，安全性有确保；</p><p>3、可靠性高，加快专线运输的速度更快且平稳，防止忽快忽慢的状况；</p><p>4、网络丢包低，加快专线运输的网络丢包低于1%；</p><p>5、花费划算，加快专线运输价钱仅是国际性专线运输价钱的一些之一，能为企业大大减少成本支出；</p><p>6、安裝便捷、灵便、便捷。</p><p>总而言之，IPLC专线网络是提供高速的网络。为企业提供高效的中港私网直联，时延低至 5ms，彻底解决企业出海业务中的跨境网络互访慢、部署成本昂贵、管理难度高等问题。</p><p><strong>请合理使用机场资源，请勿用于非法用途，责任和风险自担。</strong></p><p><strong>机场偶尔可能会断流，等待机场主修复就好，有问题看他们站内公告或提工单。其他各大机场也是如此。</strong><strong><strong>任何机场都无法100%保证将来提供的服务稳定性，建议按月购买，请不要直接包年！</strong></strong></p><h3 id="官网地址"><a href="#官网地址" class="headerlink" title="官网地址"></a>官网地址</h3><p>优云666：<a href="https://youyun688.net/auth/register?code=jMaL">https://youyun688.net/</a></p><p>备用地址：</p><p>地址一： <a href="https://youyun688.com/">https://youyun688.com</a><br>地址二： <a href="https://youyun688.net/">https://youyun688.net</a><br>地址三： <a href="https://youyun222.com/">https://youyun222.com</a><br>地址四： <a href="https://youyun222.net/">https://youyun222.net</a><br>地址五： <a href="https://youyun55.com/">https://youyun55.com</a><br>地址六： <a href="https://youyun55.net/">https://youyun55.net</a><br>地址七： <a href="https://youyun555.com/">https://youyun555.com</a><br>地址八： <a href="https://youyun555.net/">https://youyun555.net</a><br>地址九： <a href="https://youyun999.com/">https://youyun999.com</a><br>地址十： <a href="https://youyun999.net/">https://youyun999.net</a><br>地址十一： <a href="https://youyun999.vip/">https://youyun999.vip</a><br>地址十二： <a href="https://youyun777.net/">https://youyun777.net</a><br>地址十三： <a href="https://youyun777.com/">https://youyun777.com</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>更新微信运动步数为本地脚本</title>
    <link href="/2021/09/02/%E6%9B%B4%E6%96%B0%E5%BE%AE%E4%BF%A1%E8%BF%90%E5%8A%A8%E6%AD%A5%E6%95%B0%E4%B8%BA%E6%9C%AC%E5%9C%B0%E8%84%9A%E6%9C%AC/"/>
    <url>/2021/09/02/%E6%9B%B4%E6%96%B0%E5%BE%AE%E4%BF%A1%E8%BF%90%E5%8A%A8%E6%AD%A5%E6%95%B0%E4%B8%BA%E6%9C%AC%E5%9C%B0%E8%84%9A%E6%9C%AC/</url>
    
    <content type="html"><![CDATA[<p>微信运动步数重新部署本地-修复-测试运行<br><a href="https://www.52pojie.cn/search.php?mod=forum&amp;searchid=22121&amp;orderby=lastpost&amp;ascdesc=desc&amp;searchsubmit=yes&amp;kw=%D0%A1%EF%BF%BD%EF%BF%BD%EF%BF%BD%CB%B6%EF%BF%BD">https://www.52pojie.cn/search.php?mod=forum&amp;searchid=22121&amp;orderby=lastpost&amp;ascdesc=desc&amp;searchsubmit=yes&amp;kw=%D0%A1%C3%D7%D4%CB%B6%AF</a><br><a href="https://www.52pojie.cn/thread-1497339-1-1.html">https://www.52pojie.cn/thread-1497339-1-1.html</a></p><p>保存为xiaomibs.py<br>python xiaomibs.py 手机号 密码 步数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br></pre></td><td class="code"><pre><code class="hljs python"><br><span class="hljs-comment"># -*- coding: utf8 -*-</span><br><span class="hljs-comment"># python &gt;=3.8</span><br> <br><span class="hljs-keyword">import</span> requests,time,re,json,random<br><span class="hljs-keyword">import</span> os<br><span class="hljs-keyword">import</span> sys  <br> <br><span class="hljs-comment"># TG_BOT_TOKEN = &quot;&quot;           # telegram bot token 自行申请</span><br><span class="hljs-comment"># TG_USER_ID = &quot;&quot;             # telegram 用户ID</span><br> <br><span class="hljs-comment"># def telegram_bot(title, content):</span><br><span class="hljs-comment">#     print(&quot;\n&quot;)</span><br><span class="hljs-comment">#     tg_bot_token = TG_BOT_TOKEN</span><br><span class="hljs-comment">#     tg_user_id = TG_USER_ID</span><br><span class="hljs-comment">#     if &quot;TG_BOT_TOKEN&quot; in os.environ and &quot;TG_USER_ID&quot; in os.environ:</span><br><span class="hljs-comment">#         tg_bot_token = os.environ[&quot;TG_BOT_TOKEN&quot;]</span><br><span class="hljs-comment">#         tg_user_id = os.environ[&quot;TG_USER_ID&quot;]</span><br><span class="hljs-comment">#     if not tg_bot_token or not tg_user_id:</span><br><span class="hljs-comment">#         print(&quot;Telegram推送的tg_bot_token或者tg_user_id未设置!!\n取消推送&quot;)</span><br><span class="hljs-comment">#         return</span><br><span class="hljs-comment">#     print(&quot;Telegram 推送开始&quot;)</span><br><span class="hljs-comment">#     send_data = &#123;&quot;chat_id&quot;: tg_user_id, &quot;text&quot;: title +</span><br><span class="hljs-comment">#                  &#x27;\n\n&#x27;+content, &quot;disable_web_page_preview&quot;: &quot;true&quot;&#125;</span><br><span class="hljs-comment">#     response = requests.post(</span><br><span class="hljs-comment">#         url=&#x27;https://api.telegram.org/bot%s/sendMessage&#x27; % (tg_bot_token), data=send_data)</span><br><span class="hljs-comment">#     print(response.text)</span><br> <br>now = time.strftime(<span class="hljs-string">&quot;%Y-%m-%d %H:%M:%S&quot;</span>, time.localtime())<br>headers = &#123;<br>        <span class="hljs-string">&#x27;User-Agent&#x27;</span>: <span class="hljs-string">&#x27;Dalvik/2.1.0 (Linux; U; Android 9; MI 6 MIUI/20.6.18)&#x27;</span><br>        &#125;<br>  <br><span class="hljs-comment">#获取登录code</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">get_code</span>(<span class="hljs-params">location</span>):</span><br>    code_pattern = re.<span class="hljs-built_in">compile</span>(<span class="hljs-string">&quot;(?&lt;=access=).*?(?=&amp;)&quot;</span>)<br>    code = code_pattern.findall(location)[<span class="hljs-number">0</span>]<br>    <span class="hljs-keyword">return</span> code<br>  <br><span class="hljs-comment">#登录</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">login</span>(<span class="hljs-params">user,password</span>):</span><br>    url1 = <span class="hljs-string">&quot;https://api-user.huami.com/registrations/+86&quot;</span> + user + <span class="hljs-string">&quot;/tokens&quot;</span><br>    headers = &#123;<br>        <span class="hljs-string">&quot;Content-Type&quot;</span>:<span class="hljs-string">&quot;application/x-www-form-urlencoded;charset=UTF-8&quot;</span>,<br>    <span class="hljs-string">&quot;User-Agent&quot;</span>:<span class="hljs-string">&quot;MiFit/4.6.0 (iPhone; iOS 14.0.1; Scale/2.00)&quot;</span><br>        &#125;<br>    data1 = &#123;<br>        <span class="hljs-string">&quot;client_id&quot;</span>:<span class="hljs-string">&quot;HuaMi&quot;</span>,<br>        <span class="hljs-string">&quot;password&quot;</span>:<span class="hljs-string">f&quot;<span class="hljs-subst">&#123;password&#125;</span>&quot;</span>,<br>        <span class="hljs-string">&quot;redirect_uri&quot;</span>:<span class="hljs-string">&quot;https://s3-us-west-2.amazonaws.com/hm-registration/successsignin.html&quot;</span>,<br>        <span class="hljs-string">&quot;token&quot;</span>:<span class="hljs-string">&quot;access&quot;</span><br>        &#125;<br>    r1 = requests.post(url1,data=data1,headers=headers,allow_redirects=<span class="hljs-literal">False</span>)<br>    location = r1.headers[<span class="hljs-string">&quot;Location&quot;</span>]<br>    <span class="hljs-keyword">try</span>:<br>        code = get_code(location)<br>    <span class="hljs-keyword">except</span>:<br>        <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>,<span class="hljs-number">0</span><br>    <span class="hljs-comment">#print(&quot;access_code获取成功！&quot;)ste</span><br>    <span class="hljs-comment">#print(code)</span><br>      <br>    url2 = <span class="hljs-string">&quot;https://account.huami.com/v2/client/login&quot;</span><br>    data2 = &#123;<br>        <span class="hljs-string">&quot;app_name&quot;</span>:<span class="hljs-string">&quot;com.xiaomi.hm.health&quot;</span>,<br>        <span class="hljs-string">&quot;app_version&quot;</span>:<span class="hljs-string">&quot;4.6.0&quot;</span>,<br>        <span class="hljs-string">&quot;code&quot;</span>:<span class="hljs-string">f&quot;<span class="hljs-subst">&#123;code&#125;</span>&quot;</span>,<br>        <span class="hljs-string">&quot;country_code&quot;</span>:<span class="hljs-string">&quot;CN&quot;</span>,<br>        <span class="hljs-string">&quot;device_id&quot;</span>:<span class="hljs-string">&quot;2C8B4939-0CCD-4E94-8CBA-CB8EA6E613A1&quot;</span>,<br>        <span class="hljs-string">&quot;device_model&quot;</span>:<span class="hljs-string">&quot;phone&quot;</span>,<br>        <span class="hljs-string">&quot;grant_type&quot;</span>:<span class="hljs-string">&quot;access_token&quot;</span>,<br>        <span class="hljs-string">&quot;third_name&quot;</span>:<span class="hljs-string">&quot;huami_phone&quot;</span>,<br>        &#125; <br>    r2 = requests.post(url2,data=data2,headers=headers).json()<br>    login_token = r2[<span class="hljs-string">&quot;token_info&quot;</span>][<span class="hljs-string">&quot;login_token&quot;</span>]<br>    <span class="hljs-comment">#print(&quot;login_token获取成功！&quot;)</span><br>    <span class="hljs-comment">#print(login_token)</span><br>    userid = r2[<span class="hljs-string">&quot;token_info&quot;</span>][<span class="hljs-string">&quot;user_id&quot;</span>]<br>    <span class="hljs-comment">#print(&quot;userid获取成功！&quot;)</span><br>    <span class="hljs-comment">#print(userid)</span><br>  <br>    <span class="hljs-keyword">return</span> login_token,userid<br>  <br><span class="hljs-comment">#主函数</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">main</span>(<span class="hljs-params">user, passwd, step</span>):</span><br>    user = <span class="hljs-built_in">str</span>(user)<br>    password = <span class="hljs-built_in">str</span>(passwd)<br>    step = <span class="hljs-built_in">str</span>(step)<br>    <span class="hljs-keyword">if</span> user == <span class="hljs-string">&#x27;&#x27;</span> <span class="hljs-keyword">or</span> password == <span class="hljs-string">&#x27;&#x27;</span>:<br>        <span class="hljs-built_in">print</span> (<span class="hljs-string">&quot;用户名或密码填写有误！&quot;</span>)<br>        <span class="hljs-keyword">return</span><br>     <br>    <span class="hljs-keyword">if</span> step == <span class="hljs-string">&#x27;&#x27;</span>:<br>        <span class="hljs-built_in">print</span> (<span class="hljs-string">&quot;已设置为随机步数（20000-29999）&quot;</span>)<br>        step = <span class="hljs-built_in">str</span>(random.randint(<span class="hljs-number">20000</span>,<span class="hljs-number">29999</span>))<br>    login_token = <span class="hljs-number">0</span><br>    login_token,userid = login(user,password)<br>    <span class="hljs-keyword">if</span> login_token == <span class="hljs-number">0</span>:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;登陆失败！&quot;</span>)<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;login fail!&quot;</span><br>  <br>    t = get_time()<br>      <br>    app_token = get_app_token(login_token)<br>  <br>    today = time.strftime(<span class="hljs-string">&quot;%F&quot;</span>)<br>  <br>    data_json = <span class="hljs-string">&#x27;%5B%7B%22data_hr%22%3A%22%5C%2F%5C%2F%5C%2F%5C%2F%5C%2F%5C%2F9L%5C%2F%5C%2F%5C%2F%5C%2F%5C%2F%5C%2F%5C%2F%5C%2F%5C%2F%5C%2F%5C%2F%5C%2FVv%5C%2F%5C%2F%5C%2F%5C%2F%5C%2F%5C%2F%5C%2F%5C%2F%5C%2F%5C%2F%5C%2F0v%5C%2F%5C%2F%5C%2F%5C%2F%5C%2F%5C%2F%5C%2F%5C%2F%5C%2F%5C%2F%5C%2F9e%5C%2F%5C%2F%5C%2F%5C%2F%5C%2F0n%5C%2Fa%5C%2F%5C%2F%5C%2FS%5C%2F%5C%2F%5C%2F%5C%2F%5C%2F%5C%2F%5C%2F%5C%2F%5C%2F%5C%2F%5C%2F%5C%2F0b%5C%2F%5C%2F%5C%2F%5C%2F%5C%2F%5C%2F%5C%2F%5C%2F%5C%2F%5C%2F1FK%5C%2F%5C%2F%5C%2F%5C%2F%5C%2F%5C%2F%5C%2F%5C%2F%5C%2F%5C%2F%5C%2F%5C%2FR%5C%2F%5C%2F%5C%2F%5C%2F%5C%2F%5C%2F%5C%2F%5C%2F%5C%2F%5C%2F%5C%2F%5C%2F%5C%2F%5C%2F%5C%2F%5C%2F%5C%2F9PTFFpaf9L%5C%2F%5C%2F%5C%2F%5C%2F%5C%2F%5C%2F%5C%2F%5C%2F%5C%2F%5C%2F%5C%2F%5C%2FR%5C%2F%5C%2F%5C%2F%5C%2F%5C%2F%5C%2F%5C%2F%5C%2F%5C%2F%5C%2F%5C%2F%5C%2F0j%5C%2F%5C%2F%5C%2F%5C%2F%5C%2F%5C%2F%5C%2F%5C%2F%5C%2F%5C%2F%5C%2F9K%5C%2F%5C%2F%5C%2F%5C%2F%5C%2F%5C%2F%5C%2F%5C%2F%5C%2F%5C%2F%5C%2F%5C%2FOv%5C%2F%5C%2F%5C%2F%5C%2F%5C%2F%5C%2F%5C%2F%5C%2F%5C%2F%5C%2F%5C%2Fzf%5C%2F%5C%2F%5C%2F86%5C%2Fzr%5C%2FOv88%5C%2Fzf%5C%2FPf%5C%2F%5C%2F%5C%2F0v%5C%2FS%5C%2F8%5C%2F%5C%2F%5C%2F%5C%2F%5C%2F%5C%2F%5C%2F%5C%2F%5C%2F%5C%2F%5C%2F%5C%2F%5C%2FSf%5C%2F%5C%2F%5C%2F%5C%2F%5C%2F%5C%2F%5C%2F%5C%2F%5C%2F%5C%2F%5C%2Fz3%5C%2F%5C%2F%5C%2F%5C%2F%5C%2F%5C%2F0r%5C%2FOv%5C%2F%5C%2F%5C%2F%5C%2F%5C%2F%5C%2FS%5C%2F9L%5C%2Fzb%5C%2FSf9K%5C%2F0v%5C%2FRf9H%5C%2Fzj%5C%2FSf9K%5C%2F0%5C%2F%5C%2FN%5C%2F%5C%2F%5C%2F%5C%2F0D%5C%2FSf83%5C%2Fzr%5C%2FPf9M%5C%2F0v%5C%2FOv9e%5C%2F%5C%2F%5C%2F%5C%2F%5C%2F%5C%2F%5C%2F%5C%2F%5C%2F%5C%2F%5C%2F%5C%2FS%5C%2F%5C%2F%5C%2F%5C%2F%5C%2F%5C%2F%5C%2F%5C%2F%5C%2F%5C%2F%5C%2F%5C%2Fzv%5C%2F%5C%2Fz7%5C%2FO%5C%2F83%5C%2Fzv%5C%2FN%5C%2F83%5C%2Fzr%5C%2FN%5C%2F86%5C%2Fz%5C%2F%5C%2FNv83%5C%2Fzn%5C%2FXv84%5C%2Fzr%5C%2FPP84%5C%2Fzj%5C%2FN%5C%2F9e%5C%2Fzr%5C%2FN%5C%2F89%5C%2F03%5C%2FP%5C%2F89%5C%2Fz3%5C%2FQ%5C%2F9N%5C%2F0v%5C%2FTv9C%5C%2F0H%5C%2FOf9D%5C%2Fzz%5C%2FOf88%5C%2Fz%5C%2F%5C%2FPP9A%5C%2Fzr%5C%2FN%5C%2F86%5C%2Fzz%5C%2FNv87%5C%2F0D%5C%2FOv84%5C%2F0v%5C%2FO%5C%2F84%5C%2Fzf%5C%2FMP83%5C%2FzH%5C%2FNv83%5C%2Fzf%5C%2FN%5C%2F84%5C%2Fzf%5C%2FOf82%5C%2Fzf%5C%2FOP83%5C%2Fzb%5C%2FMv81%5C%2FzX%5C%2FR%5C%2F9L%5C%2F0v%5C%2FO%5C%2F9I%5C%2F0T%5C%2FS%5C%2F9A%5C%2Fzn%5C%2FPf89%5C%2Fzn%5C%2FNf9K%5C%2F07%5C%2FN%5C%2F83%5C%2Fzn%5C%2FNv83%5C%2Fzv%5C%2FO%5C%2F9A%5C%2F0H%5C%2FOf8%5C%2F%5C%2Fzj%5C%2FPP83%5C%2Fzj%5C%2FS%5C%2F87%5C%2Fzj%5C%2FNv84%5C%2Fzf%5C%2FOf83%5C%2Fzf%5C%2FOf83%5C%2Fzb%5C%2FNv9L%5C%2Fzj%5C%2FNv82%5C%2Fzb%5C%2FN%5C%2F85%5C%2Fzf%5C%2FN%5C%2F9J%5C%2Fzf%5C%2FNv83%5C%2Fzj%5C%2FNv84%5C%2F0r%5C%2FSv83%5C%2Fzf%5C%2FMP%5C%2F%5C%2F%5C%2Fzb%5C%2FMv82%5C%2Fzb%5C%2FOf85%5C%2Fz7%5C%2FNv8%5C%2F%5C%2F0r%5C%2FS%5C%2F85%5C%2F0H%5C%2FQP9B%5C%2F0D%5C%2FNf89%5C%2Fzj%5C%2FOv83%5C%2Fzv%5C%2FNv8%5C%2F%5C%2F0f%5C%2FSv9O%5C%2F0ZeXv%5C%2F%5C%2F%5C%2F%5C%2F%5C%2F%5C%2F%5C%2F%5C%2F%5C%2F%5C%2F%5C%2F1X%5C%2F%5C%2F%5C%2F%5C%2F%5C%2F%5C%2F%5C%2F%5C%2F%5C%2F%5C%2F%5C%2F9B%5C%2F%5C%2F%5C%2F%5C%2F%5C%2F%5C%2F%5C%2F%5C%2F%5C%2F%5C%2F%5C%2F%5C%2FTP%5C%2F%5C%2F%5C%2F1b%5C%2F%5C%2F%5C%2F%5C%2F%5C%2F%5C%2F0%5C%2F%5C%2F%5C%2F%5C%2F%5C%2F%5C%2F%5C%2F%5C%2F%5C%2F%5C%2F%5C%2F%5C%2F9N%5C%2F%5C%2F%5C%2F%5C%2F%5C%2F%5C%2F%5C%2F%5C%2F%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%5C%2Fv7%2B%22%2C%22date%22%3A%222021-08-07%22%2C%22data%22%3A%5B%7B%22start%22%3A0%2C%22stop%22%3A1439%2C%22value%22%3A%22UA8AUBQAUAwAUBoAUAEAYCcAUBkAUB4AUBgAUCAAUAEAUBkAUAwAYAsAYB8AYB0AYBgAYCoAYBgAYB4AUCcAUBsAUB8AUBwAUBIAYBkAYB8AUBoAUBMAUCEAUCIAYBYAUBwAUCAAUBgAUCAAUBcAYBsAYCUAATIPYD0KECQAYDMAYB0AYAsAYCAAYDwAYCIAYB0AYBcAYCQAYB0AYBAAYCMAYAoAYCIAYCEAYCYAYBsAYBUAYAYAYCIAYCMAUB0AUCAAUBYAUCoAUBEAUC8AUB0AUBYAUDMAUDoAUBkAUC0AUBQAUBwAUA0AUBsAUAoAUCEAUBYAUAwAUB4AUAwAUCcAUCYAUCwKYDUAAUUlEC8IYEMAYEgAYDoAYBAAUAMAUBkAWgAAWgAAWgAAWgAAWgAAUAgAWgAAUBAAUAQAUA4AUA8AUAkAUAIAUAYAUAcAUAIAWgAAUAQAUAkAUAEAUBkAUCUAWgAAUAYAUBEAWgAAUBYAWgAAUAYAWgAAWgAAWgAAWgAAUBcAUAcAWgAAUBUAUAoAUAIAWgAAUAQAUAYAUCgAWgAAUAgAWgAAWgAAUAwAWwAAXCMAUBQAWwAAUAIAWgAAWgAAWgAAWgAAWgAAWgAAWgAAWgAAWREAWQIAUAMAWSEAUDoAUDIAUB8AUCEAUC4AXB4AUA4AWgAAUBIAUA8AUBAAUCUAUCIAUAMAUAEAUAsAUAMAUCwAUBYAWgAAWgAAWgAAWgAAWgAAWgAAUAYAWgAAWgAAWgAAUAYAWwAAWgAAUAYAXAQAUAMAUBsAUBcAUCAAWwAAWgAAWgAAWgAAWgAAUBgAUB4AWgAAUAcAUAwAWQIAWQkAUAEAUAIAWgAAUAoAWgAAUAYAUB0AWgAAWgAAUAkAWgAAWSwAUBIAWgAAUC4AWSYAWgAAUAYAUAoAUAkAUAIAUAcAWgAAUAEAUBEAUBgAUBcAWRYAUA0AWSgAUB4AUDQAUBoAXA4AUA8AUBwAUA8AUA4AUA4AWgAAUAIAUCMAWgAAUCwAUBgAUAYAUAAAUAAAUAAAUAAAUAAAUAAAUAAAUAAAUAAAWwAAUAAAcAAAcAAAcAAAcAAAcAAAcAAAcAAAcAAAcAAAcAAAcAAAcAAAcAAAcAAAcAAAcAAAcAAAcAAAcAAAcAAAcAAAcAAAcAAAcAAAcAAAeSEAeQ8AcAAAcAAAcAAAcAAAcAAAcAAAcAAAcAAAcAAAcAAAcAAAcAAAcBcAcAAAcAAAcCYOcBUAUAAAUAAAUAAAUAAAUAUAUAAAcAAAcAAAcAAAcAAAcAAAcAAAcAAAcAAAcAAAcAAAcAAAcAAAcAAAcAAAcAAAcCgAeQAAcAAAcAAAcAAAcAAAcAAAcAYAcAAAcBgAeQAAcAAAcAAAegAAegAAcAAAcAcAcAAAcAAAcAAAcAAAcAAAcAAAcAAAcAAAcAAAcAAAcAAAcAAAcAAAcAAAcAAAcCkAeQAAcAcAcAAAcAAAcAwAcAAAcAAAcAIAcAAAcAAAcAAAcAAAcAAAcAAAcAAAcAAAcAAAcAAAcAAAcAAAcAAAcAAAcAAAcAAAcAAAcAAAcCIAeQAAcAAAcAAAcAAAcAAAcAAAeRwAeQAAWgAAUAAAUAAAUAAAUAAAUAAAcAAAcAAAcBoAeScAeQAAegAAcBkAeQAAUAAAUAAAUAAAUAAAUAAAUAAAcAAAcAAAcAAAcAAAcAAAcAAAegAAegAAcAAAcAAAcBgAeQAAcAAAcAAAcAAAcAAAcAAAcAkAegAAegAAcAcAcAAAcAcAcAAAcAAAcAAAcAAAcA8AeQAAcAAAcAAAeRQAcAwAUAAAUAAAUAAAUAAAUAAAUAAAcAAAcBEAcA0AcAAAWQsAUAAAUAAAUAAAUAAAUAAAcAAAcAoAcAAAcAAAcAAAcAAAcAAAcAAAcAAAcAYAcAAAcAAAcAAAcAAAcAAAcAAAcAAAcAAAcBYAegAAcAAAcAAAegAAcAcAcAAAcAAAcAAAcAAAcAAAeRkAegAAegAAcAAAcAAAcAAAcAAAcAAAcAAAcAAAcAEAcAAAcAAAcAAAcAUAcAQAcAAAcBIAeQAAcAAAcAAAcAAAcAAAcAAAcAAAcAAAcAAAcAAAcAAAcAAAcAAAcBsAcAAAcAAAcBcAeQAAUAAAUAAAUAAAUAAAUAAAUBQAcBYAUAAAUAAAUAoAWRYAWTQAWQAAUAAAUAAAUAAAcAAAcAAAcAAAcAAAcAAAcAMAcAAAcAQAcAAAcAAAcAAAcDMAeSIAcAAAcAAAcAAAcAAAcAAAcAAAcAAAcAAAcAAAcAAAcAAAcAAAcAAAcAAAcAAAcAAAcAAAcAAAcAAAcBQAeQwAcAAAcAAAcAAAcAMAcAAAeSoAcA8AcDMAcAYAeQoAcAwAcFQAcEMAeVIAaTYAbBcNYAsAYBIAYAIAYAIAYBUAYCwAYBMAYDYAYCkAYDcAUCoAUCcAUAUAUBAAWgAAYBoAYBcAYCgAUAMAUAYAUBYAUA4AUBgAUAgAUAgAUAsAUAsAUA4AUAMAUAYAUAQAUBIAASsSUDAAUDAAUBAAYAYAUBAAUAUAUCAAUBoAUCAAUBAAUAoAYAIAUAQAUAgAUCcAUAsAUCIAUCUAUAoAUA4AUB8AUBkAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAAfgAA%22%2C%22tz%22%3A32%2C%22did%22%3A%22DA932FFFFE8816E7%22%2C%22src%22%3A24%7D%5D%2C%22summary%22%3A%22%7B%5C%22v%5C%22%3A6%2C%5C%22slp%5C%22%3A%7B%5C%22st%5C%22%3A1628296479%2C%5C%22ed%5C%22%3A1628296479%2C%5C%22dp%5C%22%3A0%2C%5C%22lt%5C%22%3A0%2C%5C%22wk%5C%22%3A0%2C%5C%22usrSt%5C%22%3A-1440%2C%5C%22usrEd%5C%22%3A-1440%2C%5C%22wc%5C%22%3A0%2C%5C%22is%5C%22%3A0%2C%5C%22lb%5C%22%3A0%2C%5C%22to%5C%22%3A0%2C%5C%22dt%5C%22%3A0%2C%5C%22rhr%5C%22%3A0%2C%5C%22ss%5C%22%3A0%7D%2C%5C%22stp%5C%22%3A%7B%5C%22ttl%5C%22%3A18272%2C%5C%22dis%5C%22%3A10627%2C%5C%22cal%5C%22%3A510%2C%5C%22wk%5C%22%3A41%2C%5C%22rn%5C%22%3A50%2C%5C%22runDist%5C%22%3A7654%2C%5C%22runCal%5C%22%3A397%2C%5C%22stage%5C%22%3A%5B%7B%5C%22start%5C%22%3A327%2C%5C%22stop%5C%22%3A341%2C%5C%22mode%5C%22%3A1%2C%5C%22dis%5C%22%3A481%2C%5C%22cal%5C%22%3A13%2C%5C%22step%5C%22%3A680%7D%2C%7B%5C%22start%5C%22%3A342%2C%5C%22stop%5C%22%3A367%2C%5C%22mode%5C%22%3A3%2C%5C%22dis%5C%22%3A2295%2C%5C%22cal%5C%22%3A95%2C%5C%22step%5C%22%3A2874%7D%2C%7B%5C%22start%5C%22%3A368%2C%5C%22stop%5C%22%3A377%2C%5C%22mode%5C%22%3A4%2C%5C%22dis%5C%22%3A1592%2C%5C%22cal%5C%22%3A88%2C%5C%22step%5C%22%3A1664%7D%2C%7B%5C%22start%5C%22%3A378%2C%5C%22stop%5C%22%3A386%2C%5C%22mode%5C%22%3A3%2C%5C%22dis%5C%22%3A1072%2C%5C%22cal%5C%22%3A51%2C%5C%22step%5C%22%3A1245%7D%2C%7B%5C%22start%5C%22%3A387%2C%5C%22stop%5C%22%3A393%2C%5C%22mode%5C%22%3A4%2C%5C%22dis%5C%22%3A1036%2C%5C%22cal%5C%22%3A57%2C%5C%22step%5C%22%3A1124%7D%2C%7B%5C%22start%5C%22%3A394%2C%5C%22stop%5C%22%3A398%2C%5C%22mode%5C%22%3A3%2C%5C%22dis%5C%22%3A488%2C%5C%22cal%5C%22%3A19%2C%5C%22step%5C%22%3A607%7D%2C%7B%5C%22start%5C%22%3A399%2C%5C%22stop%5C%22%3A414%2C%5C%22mode%5C%22%3A4%2C%5C%22dis%5C%22%3A2220%2C%5C%22cal%5C%22%3A120%2C%5C%22step%5C%22%3A2371%7D%2C%7B%5C%22start%5C%22%3A415%2C%5C%22stop%5C%22%3A427%2C%5C%22mode%5C%22%3A3%2C%5C%22dis%5C%22%3A1268%2C%5C%22cal%5C%22%3A59%2C%5C%22step%5C%22%3A1489%7D%2C%7B%5C%22start%5C%22%3A428%2C%5C%22stop%5C%22%3A433%2C%5C%22mode%5C%22%3A1%2C%5C%22dis%5C%22%3A152%2C%5C%22cal%5C%22%3A4%2C%5C%22step%5C%22%3A238%7D%2C%7B%5C%22start%5C%22%3A434%2C%5C%22stop%5C%22%3A444%2C%5C%22mode%5C%22%3A3%2C%5C%22dis%5C%22%3A2295%2C%5C%22cal%5C%22%3A95%2C%5C%22step%5C%22%3A2874%7D%2C%7B%5C%22start%5C%22%3A445%2C%5C%22stop%5C%22%3A455%2C%5C%22mode%5C%22%3A4%2C%5C%22dis%5C%22%3A1592%2C%5C%22cal%5C%22%3A88%2C%5C%22step%5C%22%3A1664%7D%2C%7B%5C%22start%5C%22%3A456%2C%5C%22stop%5C%22%3A466%2C%5C%22mode%5C%22%3A3%2C%5C%22dis%5C%22%3A1072%2C%5C%22cal%5C%22%3A51%2C%5C%22step%5C%22%3A1245%7D%2C%7B%5C%22start%5C%22%3A467%2C%5C%22stop%5C%22%3A477%2C%5C%22mode%5C%22%3A4%2C%5C%22dis%5C%22%3A1036%2C%5C%22cal%5C%22%3A57%2C%5C%22step%5C%22%3A1124%7D%2C%7B%5C%22start%5C%22%3A478%2C%5C%22stop%5C%22%3A488%2C%5C%22mode%5C%22%3A3%2C%5C%22dis%5C%22%3A488%2C%5C%22cal%5C%22%3A19%2C%5C%22step%5C%22%3A607%7D%2C%7B%5C%22start%5C%22%3A489%2C%5C%22stop%5C%22%3A499%2C%5C%22mode%5C%22%3A4%2C%5C%22dis%5C%22%3A2220%2C%5C%22cal%5C%22%3A120%2C%5C%22step%5C%22%3A2371%7D%2C%7B%5C%22start%5C%22%3A500%2C%5C%22stop%5C%22%3A511%2C%5C%22mode%5C%22%3A3%2C%5C%22dis%5C%22%3A1268%2C%5C%22cal%5C%22%3A59%2C%5C%22step%5C%22%3A1489%7D%2C%7B%5C%22start%5C%22%3A512%2C%5C%22stop%5C%22%3A522%2C%5C%22mode%5C%22%3A1%2C%5C%22dis%5C%22%3A152%2C%5C%22cal%5C%22%3A4%2C%5C%22step%5C%22%3A238%7D%5D%7D%2C%5C%22goal%5C%22%3A8000%2C%5C%22tz%5C%22%3A%5C%2228800%5C%22%7D%22%2C%22source%22%3A24%2C%22type%22%3A0%7D%5D&#x27;</span><br>  <br>    finddate = re.<span class="hljs-built_in">compile</span>(<span class="hljs-string">r&#x27;.*?date%22%3A%22(.*?)%22%2C%22data.*?&#x27;</span>)<br>    findstep = re.<span class="hljs-built_in">compile</span>(<span class="hljs-string">r&#x27;.*?ttl%5C%22%3A(.*?)%2C%5C%22dis.*?&#x27;</span>)<br>    data_json = re.sub(finddate.findall(data_json)[<span class="hljs-number">0</span>], today, <span class="hljs-built_in">str</span>(data_json))<br>    data_json = re.sub(findstep.findall(data_json)[<span class="hljs-number">0</span>], step, <span class="hljs-built_in">str</span>(data_json))<br>      <br>    url = <span class="hljs-string">f&#x27;https://api-mifit-cn.huami.com/v1/data/band_data.json?&amp;t=<span class="hljs-subst">&#123;t&#125;</span>&#x27;</span><br>    head = &#123;<br>        <span class="hljs-string">&quot;apptoken&quot;</span>: app_token,<br>        <span class="hljs-string">&quot;Content-Type&quot;</span>: <span class="hljs-string">&quot;application/x-www-form-urlencoded&quot;</span><br>        &#125;<br>      <br>    data = <span class="hljs-string">f&#x27;userid=<span class="hljs-subst">&#123;userid&#125;</span>&amp;last_sync_data_time=1597306380&amp;device_type=0&amp;last_deviceid=DA932FFFFE8816E7&amp;data_json=<span class="hljs-subst">&#123;data_json&#125;</span>&#x27;</span><br>     <br>    response = requests.post(url, data=data, headers=head).json()<br>    <span class="hljs-comment">#print(response)</span><br>    result = <span class="hljs-string">f&quot;<span class="hljs-subst">&#123;user[:<span class="hljs-number">4</span>]&#125;</span>****<span class="hljs-subst">&#123;user[-<span class="hljs-number">4</span>:]&#125;</span>: [<span class="hljs-subst">&#123;now&#125;</span>] 修改步数（<span class="hljs-subst">&#123;step&#125;</span>）&quot;</span>+ response[<span class="hljs-string">&#x27;message&#x27;</span>]<br>    <span class="hljs-built_in">print</span>(result)<br>    <span class="hljs-keyword">return</span> result<br>   <br><span class="hljs-comment">#获取时间戳</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">get_time</span>():</span><br>    url = <span class="hljs-string">&#x27;http://api.m.taobao.com/rest/api3.do?api=mtop.common.getTimestamp&#x27;</span><br>    response = requests.get(url,headers=headers).json()<br>    t = response[<span class="hljs-string">&#x27;data&#x27;</span>][<span class="hljs-string">&#x27;t&#x27;</span>]<br>    <span class="hljs-keyword">return</span> t<br>   <br><span class="hljs-comment">#获取app_token</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">get_app_token</span>(<span class="hljs-params">login_token</span>):</span><br>    url = <span class="hljs-string">f&quot;https://account-cn.huami.com/v1/client/app_tokens?app_name=com.xiaomi.hm.health&amp;dn=api-user.huami.com%2Capi-mifit.huami.com%2Capp-analytics.huami.com&amp;login_token=<span class="hljs-subst">&#123;login_token&#125;</span>&quot;</span><br>    response = requests.get(url,headers=headers).json()<br>    app_token = response[<span class="hljs-string">&#x27;token_info&#x27;</span>][<span class="hljs-string">&#x27;app_token&#x27;</span>]<br>    <span class="hljs-comment">#print(&quot;app_token获取成功！&quot;)</span><br>    <span class="hljs-comment">#print(app_token)</span><br>    <span class="hljs-keyword">return</span> app_token<br> <br><span class="hljs-keyword">if</span> __name__ ==  <span class="hljs-string">&quot;__main__&quot;</span>:<br>    <span class="hljs-comment"># # 用户名（单用户的格式为 13800138000 ，多用户用#隔开，例如13800138000#13800138000#13800138000）</span><br>    <span class="hljs-comment"># user = &quot;例如13800138000&quot;</span><br>    <span class="hljs-comment"># # 登录密码（用#隔开，例如123456#123456#123456）</span><br>    <span class="hljs-comment"># passwd = &quot;例如123456&quot;</span><br>    <span class="hljs-comment"># # 要修改的步数，直接输入想要修改的步数值，留空为随机步数20000至29999之间</span><br>    <span class="hljs-comment"># step = &quot;&quot;</span><br><br><br>    <span class="hljs-comment"># 用户名（单用户的格式为 13800138000 ，多用户用#隔开，例如13800138000#13800138000#13800138000）</span><br>    user = sys.argv[<span class="hljs-number">1</span>]<br>    <span class="hljs-comment"># 登录密码（用#隔开，例如123456#123456#123456）</span><br>    passwd = sys.argv[<span class="hljs-number">2</span>]<br>    <span class="hljs-comment"># 要修改的步数，直接输入想要修改的步数值，留空为随机步数20000至29999之间</span><br>    step = sys.argv[<span class="hljs-number">3</span>]   <br> <br>    user_list = user.split(<span class="hljs-string">&#x27;#&#x27;</span>)<br>    passwd_list = passwd.split(<span class="hljs-string">&#x27;#&#x27;</span>)<br>    setp_array = step.split(<span class="hljs-string">&#x27;-&#x27;</span>)<br> <br>    <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(user_list) == <span class="hljs-built_in">len</span>(passwd_list):<br>        push = <span class="hljs-string">&#x27;&#x27;</span><br>        <span class="hljs-keyword">for</span> line <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>,<span class="hljs-built_in">len</span>(user_list)):<br>            <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(setp_array) == <span class="hljs-number">2</span>:<br>                step = <span class="hljs-built_in">str</span>(random.randint(<span class="hljs-built_in">int</span>(setp_array[<span class="hljs-number">0</span>]),<span class="hljs-built_in">int</span>(setp_array[<span class="hljs-number">1</span>])))<br>            <span class="hljs-keyword">elif</span> <span class="hljs-built_in">str</span>(step) == <span class="hljs-string">&#x27;0&#x27;</span>:<br>                step = <span class="hljs-string">&#x27;&#x27;</span><br>            push += main(user_list[line], passwd_list[line], step) + <span class="hljs-string">&#x27;\n&#x27;</span><br>        <span class="hljs-comment"># telegram_bot(&quot;小米运动&quot;, push)</span><br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;用户名和密码数量不对&#x27;</span>)<br><br><br><span class="hljs-comment"># 写成接收类型</span><br><br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>安装GIT+HEXO博客记录+一键自动更新</title>
    <link href="/2021/09/02/%E5%AE%89%E8%A3%85GIT+HEXO%E5%8D%9A%E5%AE%A2%E8%AE%B0%E5%BD%95+%E4%B8%80%E9%94%AE%E8%87%AA%E5%8A%A8%E6%9B%B4%E6%96%B0/"/>
    <url>/2021/09/02/%E5%AE%89%E8%A3%85GIT+HEXO%E5%8D%9A%E5%AE%A2%E8%AE%B0%E5%BD%95+%E4%B8%80%E9%94%AE%E8%87%AA%E5%8A%A8%E6%9B%B4%E6%96%B0/</url>
    
    <content type="html"><![CDATA[<p>神刀安全网关了好久了，还是想留点东西于时代，弄个博客也好吧，哈哈哈</p><p>Hexo + Github Pages 搭建博客<br><a href="https://hexo.io/zh-cn/">https://hexo.io/zh-cn/</a><br><a href="https://blog.csdn.net/Lin_Ting/article/details/55010885">https://blog.csdn.net/Lin_Ting/article/details/55010885</a><br><a href="https://www.tuicool.com/search?kw=Hexo">https://www.tuicool.com/search?kw=Hexo</a><br>hexo n test123<br>hexo g<br>hexo s<br>hexo clean<br>hexo deploy<br>hexo d</p><p>npm install -g hexo-cli<br>npm install -g hexo<br>npm install -g hexo-deployer-git<br>npm install hexo-deployer-git –save</p><p>shellsec.github.io<br><a href="https://github.com/shellsec/shellsec.github.io.git">https://github.com/shellsec/shellsec.github.io.git</a></p><p>git config –global user.email “<a href="mailto:&#121;&#x6f;&#x75;&#64;&#x65;&#120;&#97;&#109;&#112;&#108;&#x65;&#46;&#x63;&#x6f;&#x6d;">&#121;&#x6f;&#x75;&#64;&#x65;&#120;&#97;&#109;&#112;&#108;&#x65;&#46;&#x63;&#x6f;&#x6d;</a>“<br>git config –global user.name “Your Name”</p><p>按照执行，就可以免输入密码<br>echo “# shellsec.github.io” &gt;&gt; README.md<br>git init<br>git add README.md<br>git commit -m “first commit”<br>git branch -M main<br>git remote add origin <a href="https://github.com/shellsec/shellsec.github.io.git">https://github.com/shellsec/shellsec.github.io.git</a><br>git push -u origin main</p><p>我这里默认的仓库分支为 main，所以HEXO配置文件设置下 branch: main</p><p>hexo clean<br>hexo g<br>hexo d<br>hexo s</p><p><a href="https://shellsec.github.io/">https://shellsec.github.io/</a><br>使用的主题风格<br><a href="https://hexo.fluid-dev.com/docs/">https://hexo.fluid-dev.com/docs/</a><br><a href="https://github.com/fluid-dev/hexo-theme-fluid">https://github.com/fluid-dev/hexo-theme-fluid</a></p><p>安装手册<br><a href="https://hexo.fluid-dev.com/docs/start/#%E6%9B%B4%E6%96%B0%E4%B8%BB%E9%A2%98">https://hexo.fluid-dev.com/docs/start/#%E6%9B%B4%E6%96%B0%E4%B8%BB%E9%A2%98</a></p><p>github 绑定 域名<br><a href="https://www.zhihu.com/question/31377141">https://www.zhihu.com/question/31377141</a><br>在仓库里添加CNAME文件并在文件中填写绑定的域名</p><p>ping shellsec.github.io<br>正在 Ping shellsec.github.io [34.193.167.119] 具有 32 字节的数据:<br>@ cname shellsec.github.io<br>www cname shellsec.github.io</p><p>如果你是用 hexo 框架搭建博客并部署到 Github Pages 上，每次<br>hexo g<br> hexo d<br>后会把你的博客所在目录下 public 文件夹里的东西都推到 Github Pages 仓库上，并且把 CNAME 文件覆盖掉，解决这个问题可以直接把 CNAME 文件添加到 source 文件夹里，这样每次推的时候就不用担心仓库里的 CNAME 文件被覆盖掉了。</p><p>发布很慢，切了下dns为tx的，119.29.29.29，解决了~</p><p>写作工具<br><a href="https://obsidian.md/">https://obsidian.md/</a><br>说是下一代写作工具，还蛮舒服的。嘿嘿<br>人脑是非线性的：我们一直在从一个想法跳到另一个想法。 您的 第二大脑 应该一样工作。<br>另外选择：<br>Typora是不错的markdown写作软件。<br><strong>下载地址</strong>： <a href="https://typora.io/#download">Typora 工具</a></p><p>由此开始<br><a href="https://publish.obsidian.md/help-zh/%E7%94%B1%E6%AD%A4%E5%BC%80%E5%A7%8B">https://publish.obsidian.md/help-zh/%E7%94%B1%E6%AD%A4%E5%BC%80%E5%A7%8B</a></p><p>互联网从业人员都应该用 Markdown 写作<br><a href="https://www.tuicool.com/articles/faMjQjj">https://www.tuicool.com/articles/faMjQjj</a></p><p>Markdown语法<br><a href="https://www.tuicool.com/articles/3AjqAbU">https://www.tuicool.com/articles/3AjqAbU</a></p><p>Markdown添加代码段（标识符）<br><a href="https://blog.csdn.net/sinat_35757488/article/details/90599161">https://blog.csdn.net/sinat_35757488/article/details/90599161</a></p><p>一键更新，每次写完，一键自动发布_20210903<br>在gitblog根目录下 新建 gitup.bat，发送快捷去桌面即可</p><figure class="highlight dos"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs dos"><span class="hljs-built_in">cd</span> D:\gitblog\  这里是你自己的根目录地址<br><span class="hljs-keyword">call</span> hexo g<br><span class="hljs-keyword">call</span> hexo d<br></code></pre></td></tr></table></figure><p>好了，接下来是图床问题</p><p>图床</p><p>图床这是个老生常谈的问题了，流行过不少的图床但是基本都凉凉了。<br>1、背景</p><p>图床是个啥东西就不用过多介绍了，先来对比一下各路图床：</p><pre><code>微博图床：以前用的人比较多，从2019年4月开始开启了防盗链，凉凉SM.MS：运营四年多了，也变得越来越慢了，到了晚上直接打不开图片，速度堪忧其他小众图床：随时有挂掉的风险Imgur等国外图床：国内访问速度太慢，随时有被墙的风险- 语雀图床，语雀用的oss本来挺好用，也开启防盗链了大厂储存服务：例如七牛云、又拍云、腾讯云COS、阿里云OSS等，容量限制，操作繁琐，又是实名认证又是域名备案的，麻烦，而且还要花钱（有钱又不怕麻烦的当我没说）Github图床Gitee 图床</code></pre><p>如果舍得花钱可以选择大厂存储服务，定期交流量费即可。略过第2步直接往下看<br>如果喜欢稳定且免费的图床可以继续往下看<br>gitee 就是github在国内的一个翻版，操作基本一致，github有时候访问会有抽风现象，原因你懂的 毕竟方校长的GFW不是吃素的。</p><p>因此，GitHub 图床是个不错的选择，利用 jsDelivr CDN 加速访问（jsDelivr 是一个免费开源的 CDN 解决方案），PicGo 工具一键上传，操作简单高效，GitHub 和 jsDelivr 都是大厂，不用担心跑路问题，不用担心速度和容量问题，而且完全免费，可以说是目前免费图床的最佳解决方案！<br>2、搭建github仓库图床</p><pre><code>登录/注册GitHub，新建一个仓库，填写好仓库名，仓库描述，根据需求选择是否为仓库初始化一个README.md描述文件在这里插入图片描述在这里插入图片描述生成一个Token在主页依次选择【Settings】-【Developer settings】-【Personal access tokens】-【Generate new token】，填写好描述，勾选【repo】，然后点击【Generate token】生成一个Token，注意这个Token只会显示一次，自己先保存下来，或者等后面配置好PicGo后再关闭此网页在这里插入图片描述在这里插入图片描述在这里插入图片描述在这里插入图片描述在这里插入图片描述</code></pre><p>我自己:<br>shellsec_gitblog_imgdoc</p><p>shellsec/shellsec_gitblog_imgdoc </p><p>在gitblog根目录下新建 sshkey.txt<br>内容：</p><p>shellsec_gitblog_imgdoc</p><p>ghp_*********</p><p>shellsec/shellsec_gitblog_imgdoc </p><p>master</p><p>img/<br><a href="https://cdn.jsdelivr.net/gh/shellsec/shellsec_gitblog_imgdoc/">https://cdn.jsdelivr.net/gh/shellsec/shellsec_gitblog_imgdoc/</a></p><p>3、配置PicGo</p><p>前往下载PicGo，安装好后开始配置图床<br><a href="https://github.com/Molunerfinn/picgo/releases">https://github.com/Molunerfinn/picgo/releases</a></p><p>D:\Program Files\PicGo</p><p>在这里插入图片描述<br>设定仓库名：按照【用户名/图床仓库名】的格式填写</p><p>设定分支名：【master】</p><p>设定Token：粘贴之前生成的【Token】</p><p>指定存储路径：填写想要储存的路径，如【ITRHX-PIC/】，这样就会在仓库下创建一个名为 ITRHX-PIC 的文件夹，图片将会储存在此文件夹中</p><p>设定自定义域名：它的作用是，在图片上传后，PicGo 会按照【自定义域名+储存路径+上传的图片名】的方式生成访问链接，并放到粘贴板上，因为我们要使用 jsDelivr 加速访问，所以可以设置为【<a href="https://cdn.jsdelivr.net/gh/%E7%94%A8%E6%88%B7%E5%90%8D/%E5%9B%BE%E5%BA%8A%E4%BB%93%E5%BA%93%E5%90%8D">https://cdn.jsdelivr.net/gh/用户名/图床仓库名</a> 】，上传完毕后，我们就可以通过【<a href="https://cdn.jsdelivr.net/gh/%E7%94%A8%E6%88%B7%E5%90%8D/%E5%9B%BE%E5%BA%8A%E4%BB%93%E5%BA%93%E5%90%8D/%E5%9B%BE%E7%89%87%E8%B7%AF%E5%BE%84">https://cdn.jsdelivr.net/gh/用户名/图床仓库名/图片路径</a> 】加速访问我们的图片了，比如上图的图片链接为：<a href="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A27/08.jpg">https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A27/08.jpg</a></p><p>参考上面创建了一个仓库如下图<br>在这里插入图片描述<br>picGo 设置图床如下<br>在这里插入图片描述<br>上传一张测试图<br>在这里插入图片描述<br>图片地址 ：<a href="https://cdn.jsdelivr.net/gh/csvf/imagehost/imgs/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20201030182729.jpg">https://cdn.jsdelivr.net/gh/csvf/imagehost/imgs/微信截图_20201030182729.jpg</a></p><p>至此免费图床搭建完成。可以使用PicGo 工具 愉快的上传图片了，直接粘贴在markdown博客编写工具中就可以了。</p><p>图片不能重复上传，因为都会在同一个目录下，重复上传会有重名错误。<br>4、进行图片上传</p><p>配置好PicGo后，我们就可以进行高效创作了，将图片拖拽到上传区，将会自动上传并复制访问链接，将链接粘贴到博文中就行了，访问速度杠杠的，此外PicGo还有相册功能，可以对已上传的图片进行删除，修改链接等快捷操作，PicGo还可以生成不同格式的链接、支持批量上传、快捷键上传、自定义链接格式、上传前重命名等，更多功能自己去探索吧！</p><p>这里写得很详细了。<br>Hexo+PicGo+GitHub/Gitee Page 搭建静态博客带免费图床入门教程(手摸手带你构建免费博客)<br><a href="https://blog.csdn.net/prefectjava/article/details/111192741">https://blog.csdn.net/prefectjava/article/details/111192741</a></p><p>Hexo—主题Fluid的优化<br><a href="https://liwangc.gitee.io/2021/03/22/Hexo%E2%80%94%E4%B8%BB%E9%A2%98Fluid%E7%9A%84%E4%BC%98%E5%8C%96/">https://liwangc.gitee.io/2021/03/22/Hexo%E2%80%94%E4%B8%BB%E9%A2%98Fluid%E7%9A%84%E4%BC%98%E5%8C%96/</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
